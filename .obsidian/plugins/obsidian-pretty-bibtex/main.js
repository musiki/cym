/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// node_modules/@retorquere/bibtex-parser/grammar.js
var require_grammar = __commonJS({
  "node_modules/@retorquere/bibtex-parser/grammar.js"(exports, module2) {
    "use strict";
    function peg$subclass(child, parent) {
      function C() {
        this.constructor = child;
      }
      C.prototype = parent.prototype;
      child.prototype = new C();
    }
    function peg$SyntaxError(message, expected, found, location) {
      var self = Error.call(this, message);
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(self, peg$SyntaxError.prototype);
      }
      self.expected = expected;
      self.found = found;
      self.location = location;
      self.name = "SyntaxError";
      return self;
    }
    peg$subclass(peg$SyntaxError, Error);
    function peg$padEnd(str, targetLength, padString) {
      padString = padString || " ";
      if (str.length > targetLength) {
        return str;
      }
      targetLength -= str.length;
      padString += padString.repeat(targetLength);
      return str + padString.slice(0, targetLength);
    }
    peg$SyntaxError.prototype.format = function(sources) {
      var str = "Error: " + this.message;
      if (this.location) {
        var src = null;
        var k;
        for (k = 0; k < sources.length; k++) {
          if (sources[k].source === this.location.source) {
            src = sources[k].text.split(/\r\n|\n|\r/g);
            break;
          }
        }
        var s = this.location.start;
        var offset_s = this.location.source && typeof this.location.source.offset === "function" ? this.location.source.offset(s) : s;
        var loc = this.location.source + ":" + offset_s.line + ":" + offset_s.column;
        if (src) {
          var e = this.location.end;
          var filler = peg$padEnd("", offset_s.line.toString().length, " ");
          var line = src[s.line - 1];
          var last = s.line === e.line ? e.column : line.length + 1;
          var hatLen = last - s.column || 1;
          str += "\n --> " + loc + "\n" + filler + " |\n" + offset_s.line + " | " + line + "\n" + filler + " | " + peg$padEnd("", s.column - 1, " ") + peg$padEnd("", hatLen, "^");
        } else {
          str += "\n at " + loc;
        }
      }
      return str;
    };
    peg$SyntaxError.buildMessage = function(expected, found) {
      var DESCRIBE_EXPECTATION_FNS = {
        literal: function(expectation) {
          return '"' + literalEscape(expectation.text) + '"';
        },
        class: function(expectation) {
          var escapedParts = expectation.parts.map(function(part) {
            return Array.isArray(part) ? classEscape(part[0]) + "-" + classEscape(part[1]) : classEscape(part);
          });
          return "[" + (expectation.inverted ? "^" : "") + escapedParts.join("") + "]";
        },
        any: function() {
          return "any character";
        },
        end: function() {
          return "end of input";
        },
        other: function(expectation) {
          return expectation.description;
        }
      };
      function hex(ch) {
        return ch.charCodeAt(0).toString(16).toUpperCase();
      }
      function literalEscape(s) {
        return s.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\0/g, "\\0").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/[\x00-\x0F]/g, function(ch) {
          return "\\x0" + hex(ch);
        }).replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) {
          return "\\x" + hex(ch);
        });
      }
      function classEscape(s) {
        return s.replace(/\\/g, "\\\\").replace(/\]/g, "\\]").replace(/\^/g, "\\^").replace(/-/g, "\\-").replace(/\0/g, "\\0").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/[\x00-\x0F]/g, function(ch) {
          return "\\x0" + hex(ch);
        }).replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) {
          return "\\x" + hex(ch);
        });
      }
      function describeExpectation(expectation) {
        return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
      }
      function describeExpected(expected2) {
        var descriptions = expected2.map(describeExpectation);
        var i, j;
        descriptions.sort();
        if (descriptions.length > 0) {
          for (i = 1, j = 1; i < descriptions.length; i++) {
            if (descriptions[i - 1] !== descriptions[i]) {
              descriptions[j] = descriptions[i];
              j++;
            }
          }
          descriptions.length = j;
        }
        switch (descriptions.length) {
          case 1:
            return descriptions[0];
          case 2:
            return descriptions[0] + " or " + descriptions[1];
          default:
            return descriptions.slice(0, -1).join(", ") + ", or " + descriptions[descriptions.length - 1];
        }
      }
      function describeFound(found2) {
        return found2 ? '"' + literalEscape(found2) + '"' : "end of input";
      }
      return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
    };
    function peg$parse(input, options) {
      options = options !== void 0 ? options : {};
      var peg$FAILED = {};
      var peg$source = options.grammarSource;
      var peg$startRuleFunctions = { Bibliography: peg$parseBibliography };
      var peg$startRuleFunction = peg$parseBibliography;
      var peg$c0 = "@";
      var peg$c1 = "comment";
      var peg$c2 = "{";
      var peg$c3 = "}";
      var peg$c4 = "preamble";
      var peg$c5 = "string";
      var peg$c6 = ",";
      var peg$c7 = '"';
      var peg$c8 = "{\\verb";
      var peg$c9 = "\\begin{";
      var peg$c10 = "\\end{";
      var peg$c11 = "{\\";
      var peg$c12 = "\\";
      var peg$c13 = "$";
      var peg$c14 = "$$";
      var peg$c15 = "\\[";
      var peg$c16 = "\\]";
      var peg$c17 = "%";
      var peg$c18 = "\\\\";
      var peg$c19 = "\r";
      var peg$c20 = "\n";
      var peg$c21 = "newcommand";
      var peg$c22 = "url";
      var peg$c23 = "href";
      var peg$c24 = "begin";
      var peg$c25 = "end";
      var peg$c26 = "[";
      var peg$c27 = "]";
      var peg$c28 = "=";
      var peg$c29 = "#";
      var peg$r0 = /^[^\n\r]/;
      var peg$r1 = /^[\n\r]/;
      var peg$r2 = /^[^@]/;
      var peg$r3 = /^[^{}]/;
      var peg$r4 = /^[_A-Za-z]/;
      var peg$r5 = /^[({]/;
      var peg$r6 = /^[})]/;
      var peg$r7 = /^[^ \t\r\n,]/;
      var peg$r8 = /^[0-9A-Za-z!$&*+\-.\/:;<>?@[\\\]\^_`|~]/;
      var peg$r9 = /^[^{}"]/;
      var peg$r10 = /^[a-zA-Z]/;
      var peg$r11 = /^[^\^_${}\\]/;
      var peg$r12 = /^[^\^_${}"\\]/;
      var peg$r13 = /^[0-9]/;
      var peg$r14 = /^[a-zA-Z0-9]/;
      var peg$r15 = /^[ij]/;
      var peg$r16 = /^[^\r\n]/;
      var peg$r17 = /^[_\^]/;
      var peg$r18 = /^[^A-Za-z0-9[\]\t\r\n]/;
      var peg$r19 = /^[A-Za-z]/;
      var peg$r20 = /^[^\]]/;
      var peg$r21 = /^[^ \t\^_${}\\]/;
      var peg$r22 = /^[a-zA-Z\-_]/;
      var peg$r23 = /^[a-zA-Z0-9\-&_:]/;
      var peg$r24 = /^['`"=~\^.]/;
      var peg$r25 = /^['`"=~\^.cbuvdrHk]/;
      var peg$r26 = /^[\r\n]/;
      var peg$r27 = /^[ \t]/;
      var peg$r28 = /^[ \t\n\r]/;
      var peg$e0 = peg$literalExpectation("@", false);
      var peg$e1 = peg$literalExpectation("comment", true);
      var peg$e2 = peg$classExpectation(["\n", "\r"], true, false);
      var peg$e3 = peg$classExpectation(["\n", "\r"], false, false);
      var peg$e4 = peg$classExpectation(["@"], true, false);
      var peg$e5 = peg$literalExpectation("{", false);
      var peg$e6 = peg$classExpectation(["{", "}"], true, false);
      var peg$e7 = peg$literalExpectation("}", false);
      var peg$e8 = peg$classExpectation(["_", ["A", "Z"], ["a", "z"]], false, false);
      var peg$e9 = peg$classExpectation(["(", "{"], false, false);
      var peg$e10 = peg$classExpectation(["}", ")"], false, false);
      var peg$e11 = peg$literalExpectation("preamble", true);
      var peg$e12 = peg$literalExpectation("string", true);
      var peg$e13 = peg$classExpectation([" ", "	", "\r", "\n", ","], true, false);
      var peg$e14 = peg$literalExpectation(",", false);
      var peg$e15 = peg$classExpectation([["0", "9"], ["A", "Z"], ["a", "z"], "!", "$", "&", "*", "+", "-", ".", "/", ":", ";", "<", ">", "?", "@", "[", "\\", "]", "^", "_", "`", "|", "~"], false, false);
      var peg$e16 = peg$literalExpectation('"', false);
      var peg$e17 = peg$classExpectation(["{", "}", '"'], true, false);
      var peg$e18 = peg$literalExpectation("{\\verb", false);
      var peg$e19 = peg$classExpectation([["a", "z"], ["A", "Z"]], false, false);
      var peg$e20 = peg$classExpectation(["^", "_", "$", "{", "}", "\\"], true, false);
      var peg$e21 = peg$classExpectation(["^", "_", "$", "{", "}", '"', "\\"], true, false);
      var peg$e22 = peg$classExpectation([["0", "9"]], false, false);
      var peg$e23 = peg$literalExpectation("\\begin{", false);
      var peg$e24 = peg$classExpectation([["a", "z"], ["A", "Z"], ["0", "9"]], false, false);
      var peg$e25 = peg$literalExpectation("\\end{", false);
      var peg$e26 = peg$literalExpectation("{\\", false);
      var peg$e27 = peg$literalExpectation("\\", false);
      var peg$e28 = peg$classExpectation(["i", "j"], false, false);
      var peg$e29 = peg$literalExpectation("$", false);
      var peg$e30 = peg$literalExpectation("$$", false);
      var peg$e31 = peg$literalExpectation("\\[", false);
      var peg$e32 = peg$literalExpectation("\\]", false);
      var peg$e33 = peg$literalExpectation("%", false);
      var peg$e34 = peg$classExpectation(["\r", "\n"], true, false);
      var peg$e35 = peg$literalExpectation("\\\\", false);
      var peg$e36 = peg$literalExpectation("\r", false);
      var peg$e37 = peg$literalExpectation("\n", false);
      var peg$e38 = peg$classExpectation(["_", "^"], false, false);
      var peg$e39 = peg$classExpectation([["A", "Z"], ["a", "z"], ["0", "9"], "[", "]", "	", "\r", "\n"], true, false);
      var peg$e40 = peg$literalExpectation("newcommand", false);
      var peg$e41 = peg$literalExpectation("url", false);
      var peg$e42 = peg$literalExpectation("href", false);
      var peg$e43 = peg$literalExpectation("begin", false);
      var peg$e44 = peg$literalExpectation("end", false);
      var peg$e45 = peg$classExpectation([["A", "Z"], ["a", "z"]], false, false);
      var peg$e46 = peg$literalExpectation("[", false);
      var peg$e47 = peg$classExpectation(["]"], true, false);
      var peg$e48 = peg$literalExpectation("]", false);
      var peg$e49 = peg$classExpectation([" ", "	", "^", "_", "$", "{", "}", "\\"], true, false);
      var peg$e50 = peg$classExpectation([["a", "z"], ["A", "Z"], "-", "_"], false, false);
      var peg$e51 = peg$classExpectation([["a", "z"], ["A", "Z"], ["0", "9"], "-", "&", "_", ":"], false, false);
      var peg$e52 = peg$classExpectation(["'", "`", '"', "=", "~", "^", "."], false, false);
      var peg$e53 = peg$classExpectation(["'", "`", '"', "=", "~", "^", ".", "c", "b", "u", "v", "d", "r", "H", "k"], false, false);
      var peg$e54 = peg$literalExpectation("=", false);
      var peg$e55 = peg$literalExpectation("#", false);
      var peg$e56 = peg$classExpectation(["\r", "\n"], false, false);
      var peg$e57 = peg$otherExpectation("Mandatory Horizontal Whitespace");
      var peg$e58 = peg$classExpectation([" ", "	"], false, false);
      var peg$e59 = peg$otherExpectation("Optional Horizontal Whitespace");
      var peg$e60 = peg$otherExpectation("Mandatory Vertical Whitespace");
      var peg$e61 = peg$otherExpectation("Optional Vertical Whitespace");
      var peg$e62 = peg$otherExpectation("Mandatory Whitespace");
      var peg$e63 = peg$classExpectation([" ", "	", "\n", "\r"], false, false);
      var peg$e64 = peg$otherExpectation("Optional Whitespace");
      var peg$f0 = function(r) {
        return {
          kind: "Bibliography",
          loc: location(),
          source: text(),
          children: r
        };
      };
      var peg$f1 = function(v) {
        return {
          kind: "BracedComment",
          loc: location(),
          source: text(),
          value: v.slice(1, -1)
        };
      };
      var peg$f2 = function(v) {
        return {
          kind: "LineComment",
          loc: location(),
          source: text(),
          value: normalizeWhitespace(v)
        };
      };
      var peg$f3 = function(v) {
        return {
          kind: "NonEntryText",
          loc: location(),
          source: text(),
          value: normalizeWhitespace(v)
        };
      };
      var peg$f4 = function(n) {
        return n;
      };
      var peg$f5 = function(comment) {
        return "{" + comment.join("") + "}";
      };
      var peg$f6 = function(type, id, fields) {
        return {
          kind: "Entry",
          id: id || "",
          type: type.toLowerCase(),
          loc: location(),
          source: text(),
          fields
        };
      };
      var peg$f7 = function(opener, v, closer) {
        switch (opener + closer) {
          case "{}":
          case "()":
            break;
          default:
            throw new Error(`Unbalanced opener-closer for preamble: ${opener}...${closer}`);
            break;
        }
        return {
          kind: "PreambleExpression",
          loc: location(),
          source: text(),
          value: v.reduce((a, b) => a.concat(b), [])
        };
      };
      var peg$f8 = function(k, v) {
        return {
          kind: "StringDeclaration",
          loc: location(),
          source: text(),
          name: k,
          value: v.reduce((a, b) => a.concat(b), [])
        };
      };
      var peg$f9 = function(id) {
        return id;
      };
      var peg$f10 = function(name) {
        return isVerbatimField(name) && unnestFields.includes(name);
      };
      var peg$f11 = function(name, value) {
        return {
          kind: "Field",
          loc: location(),
          source: text(),
          name,
          loc: location(),
          value: [protect(value)]
        };
      };
      var peg$f12 = function(name) {
        return isVerbatimField(name);
      };
      var peg$f13 = function(name, value) {
        return {
          kind: "Field",
          loc: location(),
          source: text(),
          name,
          loc: location(),
          value: [protect(value)]
        };
      };
      var peg$f14 = function(name, value) {
        if (unnestFields.includes(name) && Array.isArray(value) && value.length === 1 && value[0].kind === "Block") {
          if (options.unnestMode === "preserve") {
            value[0].case = "preserve";
          } else {
            value = value[0].value;
          }
        }
        return handle_markup_switches({
          kind: "Field",
          loc: location(),
          source: text(),
          name,
          value
        });
      };
      var peg$f15 = function(name) {
        return name.toLowerCase();
      };
      var peg$f16 = function(v) {
        return basicTextConversions({
          kind: "Text",
          loc: location(),
          source: text(),
          value: v || "",
          mode: "verbatim"
        });
      };
      var peg$f17 = function(v) {
        return basicTextConversions({
          kind: "Text",
          loc: location(),
          source: text(),
          value: v.join(""),
          mode: "verbatim"
        });
      };
      var peg$f18 = function(v) {
        return v;
      };
      var peg$f19 = function(v) {
        return "{" + v + "}";
      };
      var peg$f20 = function(v) {
        return v;
      };
      var peg$f21 = function(v) {
        return "{" + v + "}";
      };
      var peg$f22 = function() {
        return math.set(false);
      };
      var peg$f23 = function(v) {
        return v.reduce((a, b) => a.concat(b), []);
      };
      var peg$f24 = function(v) {
        return v;
      };
      var peg$f25 = function(v) {
        return basicTextConversions({
          kind: "Text",
          loc: location(),
          source: text(),
          value: v.join("").trim(),
          mode: "verbatim"
        });
      };
      var peg$f26 = function(v) {
        return v;
      };
      var peg$f27 = function(v) {
        return v;
      };
      var peg$f28 = function(v) {
        return v;
      };
      var peg$f29 = function(v) {
        return basicTextConversions({
          kind: "Text",
          loc: location(),
          source: text(),
          value: normalizeWhitespace(v),
          mode: math.on ? "math" : "text"
        });
      };
      var peg$f30 = function(v) {
        return basicTextConversions({
          kind: "Text",
          loc: location(),
          source: text(),
          value: normalizeWhitespace(v),
          mode: math.on ? "math" : "text"
        });
      };
      var peg$f31 = function(v) {
        return {
          kind: "Number",
          loc: location(),
          source: text(),
          value: parseInt(v, 10)
        };
      };
      var peg$f32 = function(v) {
        return {
          kind: "StringReference",
          loc: location(),
          source: text(),
          name: v
        };
      };
      var peg$f33 = function(env, v, cenv) {
        return env === cenv;
      };
      var peg$f34 = function(env, v, cenv) {
        if (markup[env]) {
          return {
            kind: "Block",
            loc: location(),
            source: text(),
            value: v,
            markup: { [markup[env]]: true }
          };
        } else {
          return {
            kind: "Environment",
            loc: location(),
            source: text(),
            value: v,
            env
          };
        }
      };
      var peg$f35 = function(mark, chr) {
        return {
          kind: "DiacriticCommand",
          loc: location(),
          source: text(),
          mark,
          dotless: !!chr[1],
          character: chr[1] || chr[0]
        };
      };
      var peg$f36 = function(v) {
        return basicTextConversions({
          kind: "Text",
          loc: location(),
          source: text(),
          value: v.join("").trim(),
          mode: "verbatim"
        });
      };
      var peg$f37 = function(v) {
        const block = {
          kind: "Block",
          loc: location(),
          source: text(),
          value: v,
          markup: {},
          case: "protect"
        };
        let leadingcmd = block.value.length && (block.value[0].kind.endsWith("Command") || block.value[0].kind === "Environment") ? block.value[0] : null;
        let leadingcmdblockarg = leadingcmd && leadingcmd.kind === "RegularCommand" && leadingcmd.arguments.required.length && leadingcmd.arguments.required[0].kind === "Block" && leadingcmd.arguments.required[0];
        if (leadingcmd) {
          delete block.case;
          if (leadingcmdblockarg && leadingcmdblockarg.case === "protect")
            delete leadingcmdblockarg.case;
          if (markup[leadingcmd.command] && leadingcmd.arguments.required.length === 0) {
            block.markup[markup[leadingcmd.command]] = true;
            block.value.shift();
          }
        }
        return handle_markup_switches(block);
      };
      var peg$f38 = function() {
        return !math.on;
      };
      var peg$f39 = function(mode) {
        return math.set(true);
      };
      var peg$f40 = function(mode, v) {
        return math.set(false);
      };
      var peg$f41 = function(mode, v) {
        return {
          kind: mode == "$$" ? "DisplayMath" : "InlineMath",
          loc: location(),
          source: text(),
          value: v,
          case: "protect",
          markup: {}
        };
      };
      var peg$f42 = function(v) {
        return {
          kind: "LineComment",
          loc: location(),
          source: text(),
          value: v
        };
      };
      var peg$f43 = function() {
        return {
          kind: "RegularCommand",
          loc: location(),
          source: text(),
          command: "\\",
          arguments: {
            optional: [],
            required: []
          }
        };
      };
      var peg$f44 = function() {
        return {
          kind: "RegularCommand",
          loc: location(),
          source: text(),
          command: "par",
          arguments: {
            optional: [],
            required: []
          }
        };
      };
      var peg$f45 = function(mode, v) {
        if (v.kind === "Block")
          v = v.value;
        return {
          kind: mode === "_" ? "SubscriptCommand" : "SuperscriptCommand",
          loc: location(),
          source: text(),
          value: v
        };
      };
      var peg$f46 = function(mark, chr) {
        return {
          kind: "DiacriticCommand",
          loc: location(),
          source: text(),
          mark,
          dotless: !!chr[1],
          character: chr[1] || chr[0]
        };
      };
      var peg$f47 = function(mark, chr) {
        return {
          kind: "DiacriticCommand",
          loc: location(),
          source: text(),
          mark,
          dotless: !!chr[1],
          character: chr[1] || chr[0]
        };
      };
      var peg$f48 = function(mark, v) {
        return {
          kind: "RegularCommand",
          loc: location(),
          source: text(),
          command: mark,
          arguments: {
            optional: [],
            required: [protect(v)]
          }
        };
      };
      var peg$f49 = function(v) {
        return {
          kind: "SymbolCommand",
          loc: location(),
          source: text(),
          command: v
        };
      };
      var peg$f50 = function(cmd, name) {
        return name.value.length == 1 && name.value[0].kind === "RegularCommand";
      };
      var peg$f51 = function(cmd, name, optional, def) {
        return {
          kind: "RegularCommand",
          loc: location(),
          source: text(),
          command: cmd,
          arguments: {
            optional: [],
            required: [name, def]
          }
        };
      };
      var peg$f52 = function(cmd, url) {
        url.value = url.value.replace(/\\([\#%])/g, "$1");
        return {
          kind: "RegularCommand",
          loc: location(),
          source: text(),
          command: cmd,
          arguments: {
            optional: [],
            required: [url]
          }
        };
      };
      var peg$f53 = function(cmd, url, label) {
        url.value = url.value.replace(/\\([\#%])/g, "$1");
        return {
          kind: "RegularCommand",
          loc: location(),
          source: text(),
          command: cmd,
          arguments: {
            optional: [],
            required: [url, label]
          }
        };
      };
      var peg$f54 = function(cmd) {
        return verbatimCommands.includes(cmd) && has_arguments[cmd] === 2;
      };
      var peg$f55 = function(cmd, optional, req1, req2) {
        return {
          kind: "RegularCommand",
          loc: location(),
          source: text(),
          command: cmd,
          arguments: {
            optional,
            required: [protect(req1), protect(req2)]
          }
        };
      };
      var peg$f56 = function(cmd) {
        return verbatimCommands.includes(cmd) && has_arguments[cmd] === 1;
      };
      var peg$f57 = function(cmd, optional, req) {
        return {
          kind: "RegularCommand",
          loc: location(),
          source: text(),
          command: cmd,
          arguments: {
            optional,
            required: [protect(req)]
          }
        };
      };
      var peg$f58 = function(cmd) {
        return has_arguments[cmd] === 2;
      };
      var peg$f59 = function(cmd, optional, req1, req2) {
        return {
          kind: "RegularCommand",
          loc: location(),
          source: text(),
          command: cmd,
          arguments: {
            optional,
            required: [req1, req2]
          }
        };
      };
      var peg$f60 = function(cmd) {
        return has_arguments[cmd] === 1;
      };
      var peg$f61 = function(cmd, optional, req) {
        let m;
        if (req.kind === "Block") {
          switch (cmd) {
            case "textsuperscript":
            case "sp":
              req.markup.sup = true;
              break;
            case "textsubscript":
            case "sb":
              req.markup.sub = true;
              break;
            case "textsc":
              req.markup.smallCaps = true;
              break;
            case "enquote":
            case "mkbibquote":
              req.markup.enquote = true;
              break;
            case "textbf":
            case "mkbibbold":
              req.markup.bold = true;
              break;
            case "emph":
            case "textit":
            case "mkbibitalic":
            case "mkbibemph":
              req.markup.italics = true;
              break;
            default:
              if (m = cmd.match(/^((sub)*)section$/)) {
                req.markup[`h${m[1].length / 3 + 1}`] = true;
              }
          }
        }
        if (cmd === "bibcyr")
          delete req.case;
        return {
          kind: "RegularCommand",
          loc: location(),
          source: text(),
          command: cmd,
          arguments: {
            optional,
            required: [req]
          }
        };
      };
      var peg$f62 = function(cmd, optional) {
        return {
          kind: "RegularCommand",
          loc: location(),
          source: text(),
          command: cmd,
          arguments: {
            optional,
            required: []
          }
        };
      };
      var peg$f63 = function(v) {
        return basicTextConversions({
          kind: "Text",
          // this isn't really correct but I don't need these right now
          loc: location(),
          source: text(),
          value: v,
          mode: math.on ? "math" : "text"
        });
      };
      var peg$f64 = function(v) {
        return basicTextConversions({
          kind: "Text",
          loc: location(),
          source: text(),
          value: normalizeWhitespace([v]),
          mode: math.on ? "math" : "text"
        });
      };
      var peg$f65 = function(v) {
        return v;
      };
      var peg$currPos = 0;
      var peg$savedPos = 0;
      var peg$posDetailsCache = [{ line: 1, column: 1 }];
      var peg$maxFailPos = 0;
      var peg$maxFailExpected = [];
      var peg$silentFails = 0;
      var peg$result;
      if ("startRule" in options) {
        if (!(options.startRule in peg$startRuleFunctions)) {
          throw new Error(`Can't start parsing from rule "` + options.startRule + '".');
        }
        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
      }
      function text() {
        return input.substring(peg$savedPos, peg$currPos);
      }
      function offset() {
        return peg$savedPos;
      }
      function range() {
        return {
          source: peg$source,
          start: peg$savedPos,
          end: peg$currPos
        };
      }
      function location() {
        return peg$computeLocation(peg$savedPos, peg$currPos);
      }
      function expected(description, location2) {
        location2 = location2 !== void 0 ? location2 : peg$computeLocation(peg$savedPos, peg$currPos);
        throw peg$buildStructuredError(
          [peg$otherExpectation(description)],
          input.substring(peg$savedPos, peg$currPos),
          location2
        );
      }
      function error(message, location2) {
        location2 = location2 !== void 0 ? location2 : peg$computeLocation(peg$savedPos, peg$currPos);
        throw peg$buildSimpleError(message, location2);
      }
      function peg$literalExpectation(text2, ignoreCase) {
        return { type: "literal", text: text2, ignoreCase };
      }
      function peg$classExpectation(parts, inverted, ignoreCase) {
        return { type: "class", parts, inverted, ignoreCase };
      }
      function peg$anyExpectation() {
        return { type: "any" };
      }
      function peg$endExpectation() {
        return { type: "end" };
      }
      function peg$otherExpectation(description) {
        return { type: "other", description };
      }
      function peg$computePosDetails(pos) {
        var details = peg$posDetailsCache[pos];
        var p;
        if (details) {
          return details;
        } else {
          p = pos - 1;
          while (!peg$posDetailsCache[p]) {
            p--;
          }
          details = peg$posDetailsCache[p];
          details = {
            line: details.line,
            column: details.column
          };
          while (p < pos) {
            if (input.charCodeAt(p) === 10) {
              details.line++;
              details.column = 1;
            } else {
              details.column++;
            }
            p++;
          }
          peg$posDetailsCache[pos] = details;
          return details;
        }
      }
      function peg$computeLocation(startPos, endPos, offset2) {
        var startPosDetails = peg$computePosDetails(startPos);
        var endPosDetails = peg$computePosDetails(endPos);
        var res = {
          source: peg$source,
          start: {
            offset: startPos,
            line: startPosDetails.line,
            column: startPosDetails.column
          },
          end: {
            offset: endPos,
            line: endPosDetails.line,
            column: endPosDetails.column
          }
        };
        if (offset2 && peg$source && typeof peg$source.offset === "function") {
          res.start = peg$source.offset(res.start);
          res.end = peg$source.offset(res.end);
        }
        return res;
      }
      function peg$fail(expected2) {
        if (peg$currPos < peg$maxFailPos) {
          return;
        }
        if (peg$currPos > peg$maxFailPos) {
          peg$maxFailPos = peg$currPos;
          peg$maxFailExpected = [];
        }
        peg$maxFailExpected.push(expected2);
      }
      function peg$buildSimpleError(message, location2) {
        return new peg$SyntaxError(message, null, null, location2);
      }
      function peg$buildStructuredError(expected2, found, location2) {
        return new peg$SyntaxError(
          peg$SyntaxError.buildMessage(expected2, found),
          expected2,
          found,
          location2
        );
      }
      function peg$parseBibliography() {
        var s0, s1, s2, s3;
        s0 = peg$currPos;
        s1 = peg$parse__();
        s2 = [];
        s3 = peg$parseNode();
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parseNode();
        }
        s3 = peg$parse__();
        peg$savedPos = s0;
        s0 = peg$f0(s2);
        return s0;
      }
      function peg$parseComment() {
        var s0, s1, s2, s3, s4, s5, s6, s7;
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 64) {
          s1 = peg$c0;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e0);
          }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse__();
          if (input.substr(peg$currPos, 7).toLowerCase() === peg$c1) {
            s3 = input.substr(peg$currPos, 7);
            peg$currPos += 7;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e1);
            }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse__h();
            s5 = peg$parseBracedComment();
            if (s5 !== peg$FAILED) {
              peg$savedPos = s0;
              s0 = peg$f1(s5);
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 64) {
            s1 = peg$c0;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e0);
            }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parse__();
            if (input.substr(peg$currPos, 7).toLowerCase() === peg$c1) {
              s3 = input.substr(peg$currPos, 7);
              peg$currPos += 7;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e1);
              }
            }
            if (s3 !== peg$FAILED) {
              s4 = peg$parse__h();
              s5 = [];
              if (peg$r0.test(input.charAt(peg$currPos))) {
                s6 = input.charAt(peg$currPos);
                peg$currPos++;
              } else {
                s6 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e2);
                }
              }
              while (s6 !== peg$FAILED) {
                s5.push(s6);
                if (peg$r0.test(input.charAt(peg$currPos))) {
                  s6 = input.charAt(peg$currPos);
                  peg$currPos++;
                } else {
                  s6 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e2);
                  }
                }
              }
              s6 = [];
              if (peg$r1.test(input.charAt(peg$currPos))) {
                s7 = input.charAt(peg$currPos);
                peg$currPos++;
              } else {
                s7 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e3);
                }
              }
              while (s7 !== peg$FAILED) {
                s6.push(s7);
                if (peg$r1.test(input.charAt(peg$currPos))) {
                  s7 = input.charAt(peg$currPos);
                  peg$currPos++;
                } else {
                  s7 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e3);
                  }
                }
              }
              peg$savedPos = s0;
              s0 = peg$f2(s5);
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            s1 = peg$currPos;
            if (peg$r2.test(input.charAt(peg$currPos))) {
              s2 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e4);
              }
            }
            if (s2 !== peg$FAILED) {
              s3 = [];
              if (peg$r0.test(input.charAt(peg$currPos))) {
                s4 = input.charAt(peg$currPos);
                peg$currPos++;
              } else {
                s4 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e2);
                }
              }
              while (s4 !== peg$FAILED) {
                s3.push(s4);
                if (peg$r0.test(input.charAt(peg$currPos))) {
                  s4 = input.charAt(peg$currPos);
                  peg$currPos++;
                } else {
                  s4 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e2);
                  }
                }
              }
              s2 = [s2, s3];
              s1 = s2;
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
            if (s1 !== peg$FAILED) {
              s2 = [];
              if (peg$r1.test(input.charAt(peg$currPos))) {
                s3 = input.charAt(peg$currPos);
                peg$currPos++;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e3);
                }
              }
              while (s3 !== peg$FAILED) {
                s2.push(s3);
                if (peg$r1.test(input.charAt(peg$currPos))) {
                  s3 = input.charAt(peg$currPos);
                  peg$currPos++;
                } else {
                  s3 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e3);
                  }
                }
              }
              peg$savedPos = s0;
              s0 = peg$f3(s1);
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          }
        }
        return s0;
      }
      function peg$parseNode() {
        var s0, s1;
        s0 = peg$currPos;
        s1 = peg$parseComment();
        if (s1 === peg$FAILED) {
          s1 = peg$parsePreambleExpression();
          if (s1 === peg$FAILED) {
            s1 = peg$parseStringDeclaration();
            if (s1 === peg$FAILED) {
              s1 = peg$parseEntry();
            }
          }
        }
        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$f4(s1);
        }
        s0 = s1;
        return s0;
      }
      function peg$parseBracedComment() {
        var s0, s1, s2, s3;
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 123) {
          s1 = peg$c2;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e5);
          }
        }
        if (s1 !== peg$FAILED) {
          s2 = [];
          if (peg$r3.test(input.charAt(peg$currPos))) {
            s3 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e6);
            }
          }
          if (s3 === peg$FAILED) {
            s3 = peg$parseBracedComment();
          }
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            if (peg$r3.test(input.charAt(peg$currPos))) {
              s3 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e6);
              }
            }
            if (s3 === peg$FAILED) {
              s3 = peg$parseBracedComment();
            }
          }
          if (input.charCodeAt(peg$currPos) === 125) {
            s3 = peg$c3;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e7);
            }
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s0 = peg$f5(s2);
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseEntry() {
        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 64) {
          s1 = peg$c0;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e0);
          }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse__();
          s3 = peg$currPos;
          s4 = [];
          if (peg$r4.test(input.charAt(peg$currPos))) {
            s5 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e8);
            }
          }
          if (s5 !== peg$FAILED) {
            while (s5 !== peg$FAILED) {
              s4.push(s5);
              if (peg$r4.test(input.charAt(peg$currPos))) {
                s5 = input.charAt(peg$currPos);
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e8);
                }
              }
            }
          } else {
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s3 = input.substring(s3, peg$currPos);
          } else {
            s3 = s4;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse__();
            if (peg$r5.test(input.charAt(peg$currPos))) {
              s5 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e9);
              }
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$parse__();
              s7 = peg$parseEntryId();
              if (s7 === peg$FAILED) {
                s7 = null;
              }
              s8 = peg$parse__();
              s9 = [];
              s10 = peg$parseField();
              while (s10 !== peg$FAILED) {
                s9.push(s10);
                s10 = peg$parseField();
              }
              s10 = peg$parse__();
              if (peg$r6.test(input.charAt(peg$currPos))) {
                s11 = input.charAt(peg$currPos);
                peg$currPos++;
              } else {
                s11 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e10);
                }
              }
              if (s11 !== peg$FAILED) {
                s12 = peg$parse__();
                peg$savedPos = s0;
                s0 = peg$f6(s3, s7, s9);
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parsePreambleExpression() {
        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 64) {
          s1 = peg$c0;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e0);
          }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse__();
          if (input.substr(peg$currPos, 8).toLowerCase() === peg$c4) {
            s3 = input.substr(peg$currPos, 8);
            peg$currPos += 8;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e11);
            }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse__();
            if (peg$r5.test(input.charAt(peg$currPos))) {
              s5 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e9);
              }
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$parse__();
              s7 = [];
              s8 = peg$parseEnvironment();
              if (s8 === peg$FAILED) {
                s8 = peg$parseBlock();
                if (s8 === peg$FAILED) {
                  s8 = peg$parseMath();
                  if (s8 === peg$FAILED) {
                    s8 = peg$parseCommand();
                    if (s8 === peg$FAILED) {
                      s8 = peg$parseText();
                    }
                  }
                }
              }
              while (s8 !== peg$FAILED) {
                s7.push(s8);
                s8 = peg$parseEnvironment();
                if (s8 === peg$FAILED) {
                  s8 = peg$parseBlock();
                  if (s8 === peg$FAILED) {
                    s8 = peg$parseMath();
                    if (s8 === peg$FAILED) {
                      s8 = peg$parseCommand();
                      if (s8 === peg$FAILED) {
                        s8 = peg$parseText();
                      }
                    }
                  }
                }
              }
              s8 = peg$parse__();
              if (peg$r6.test(input.charAt(peg$currPos))) {
                s9 = input.charAt(peg$currPos);
                peg$currPos++;
              } else {
                s9 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e10);
                }
              }
              if (s9 !== peg$FAILED) {
                s10 = peg$parse__();
                peg$savedPos = s0;
                s0 = peg$f7(s5, s7, s9);
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseStringDeclaration() {
        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 64) {
          s1 = peg$c0;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e0);
          }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse__();
          if (input.substr(peg$currPos, 6).toLowerCase() === peg$c5) {
            s3 = input.substr(peg$currPos, 6);
            peg$currPos += 6;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e12);
            }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse__();
            if (peg$r5.test(input.charAt(peg$currPos))) {
              s5 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e9);
              }
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$parse__();
              s7 = peg$parseVariableName();
              if (s7 !== peg$FAILED) {
                s8 = peg$parseFieldSeparator();
                if (s8 !== peg$FAILED) {
                  s9 = [];
                  s10 = peg$parseRegularValue();
                  if (s10 !== peg$FAILED) {
                    while (s10 !== peg$FAILED) {
                      s9.push(s10);
                      s10 = peg$parseRegularValue();
                    }
                  } else {
                    s9 = peg$FAILED;
                  }
                  if (s9 !== peg$FAILED) {
                    s10 = peg$parse__();
                    if (peg$r6.test(input.charAt(peg$currPos))) {
                      s11 = input.charAt(peg$currPos);
                      peg$currPos++;
                    } else {
                      s11 = peg$FAILED;
                      if (peg$silentFails === 0) {
                        peg$fail(peg$e10);
                      }
                    }
                    if (s11 !== peg$FAILED) {
                      s12 = peg$parse__();
                      peg$savedPos = s0;
                      s0 = peg$f8(s7, s9);
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseEntryId() {
        var s0, s1, s2, s3, s4;
        s0 = peg$currPos;
        s1 = peg$parse__();
        s2 = peg$currPos;
        s3 = [];
        if (peg$r7.test(input.charAt(peg$currPos))) {
          s4 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e13);
          }
        }
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          if (peg$r7.test(input.charAt(peg$currPos))) {
            s4 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e13);
            }
          }
        }
        s2 = input.substring(s2, peg$currPos);
        s3 = peg$parse__();
        if (input.charCodeAt(peg$currPos) === 44) {
          s4 = peg$c6;
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e14);
          }
        }
        if (s4 !== peg$FAILED) {
          peg$savedPos = s0;
          s0 = peg$f9(s2);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseField() {
        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;
        s0 = peg$currPos;
        s1 = peg$parseFieldName();
        if (s1 !== peg$FAILED) {
          peg$savedPos = peg$currPos;
          s2 = peg$f10(s1);
          if (s2) {
            s2 = void 0;
          } else {
            s2 = peg$FAILED;
          }
          if (s2 !== peg$FAILED) {
            s3 = peg$parseFieldSeparator();
            if (s3 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 123) {
                s4 = peg$c2;
                peg$currPos++;
              } else {
                s4 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e5);
                }
              }
              if (s4 !== peg$FAILED) {
                s5 = peg$currPos;
                peg$silentFails++;
                if (input.charCodeAt(peg$currPos) === 123) {
                  s6 = peg$c2;
                  peg$currPos++;
                } else {
                  s6 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e5);
                  }
                }
                peg$silentFails--;
                if (s6 !== peg$FAILED) {
                  peg$currPos = s5;
                  s5 = void 0;
                } else {
                  s5 = peg$FAILED;
                }
                if (s5 !== peg$FAILED) {
                  s6 = peg$parseVerbatimFieldValue();
                  if (s6 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 125) {
                      s7 = peg$c3;
                      peg$currPos++;
                    } else {
                      s7 = peg$FAILED;
                      if (peg$silentFails === 0) {
                        peg$fail(peg$e7);
                      }
                    }
                    if (s7 !== peg$FAILED) {
                      s8 = [];
                      s9 = peg$parseFieldTerminator();
                      while (s9 !== peg$FAILED) {
                        s8.push(s9);
                        s9 = peg$parseFieldTerminator();
                      }
                      peg$savedPos = s0;
                      s0 = peg$f11(s1, s6);
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parseFieldName();
          if (s1 !== peg$FAILED) {
            peg$savedPos = peg$currPos;
            s2 = peg$f12(s1);
            if (s2) {
              s2 = void 0;
            } else {
              s2 = peg$FAILED;
            }
            if (s2 !== peg$FAILED) {
              s3 = peg$parseFieldSeparator();
              if (s3 !== peg$FAILED) {
                s4 = peg$parseVerbatimFieldValue();
                if (s4 !== peg$FAILED) {
                  s5 = [];
                  s6 = peg$parseFieldTerminator();
                  while (s6 !== peg$FAILED) {
                    s5.push(s6);
                    s6 = peg$parseFieldTerminator();
                  }
                  peg$savedPos = s0;
                  s0 = peg$f13(s1, s4);
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            s1 = peg$parseFieldName();
            if (s1 !== peg$FAILED) {
              s2 = peg$parseFieldSeparator();
              if (s2 !== peg$FAILED) {
                s3 = peg$parseFieldValue();
                if (s3 !== peg$FAILED) {
                  s4 = [];
                  s5 = peg$parseFieldTerminator();
                  while (s5 !== peg$FAILED) {
                    s4.push(s5);
                    s5 = peg$parseFieldTerminator();
                  }
                  peg$savedPos = s0;
                  s0 = peg$f14(s1, s3);
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          }
        }
        return s0;
      }
      function peg$parseFieldName() {
        var s0, s1, s2, s3, s4;
        s0 = peg$currPos;
        s1 = peg$parse__();
        s2 = peg$currPos;
        s3 = [];
        if (peg$r8.test(input.charAt(peg$currPos))) {
          s4 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e15);
          }
        }
        if (s4 !== peg$FAILED) {
          while (s4 !== peg$FAILED) {
            s3.push(s4);
            if (peg$r8.test(input.charAt(peg$currPos))) {
              s4 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e15);
              }
            }
          }
        } else {
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s2 = input.substring(s2, peg$currPos);
        } else {
          s2 = s3;
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s0 = peg$f15(s2);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseVerbatimFieldValue() {
        var s0, s1, s2, s3;
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 34) {
          s1 = peg$c7;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e16);
          }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parseVerbatimString();
          if (s2 === peg$FAILED) {
            s2 = null;
          }
          if (input.charCodeAt(peg$currPos) === 34) {
            s3 = peg$c7;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e16);
            }
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s0 = peg$f16(s2);
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 123) {
            s1 = peg$c2;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e5);
            }
          }
          if (s1 !== peg$FAILED) {
            s2 = [];
            s3 = peg$parseVerbatimText();
            while (s3 !== peg$FAILED) {
              s2.push(s3);
              s3 = peg$parseVerbatimText();
            }
            if (input.charCodeAt(peg$currPos) === 125) {
              s3 = peg$c3;
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e7);
              }
            }
            if (s3 !== peg$FAILED) {
              peg$savedPos = s0;
              s0 = peg$f17(s2);
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        }
        return s0;
      }
      function peg$parseVerbatimText() {
        var s0, s1, s2, s3, s4;
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = [];
        if (peg$r3.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e6);
          }
        }
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            if (peg$r3.test(input.charAt(peg$currPos))) {
              s3 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e6);
              }
            }
          }
        } else {
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s1 = input.substring(s1, peg$currPos);
        } else {
          s1 = s2;
        }
        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$f18(s1);
        }
        s0 = s1;
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 123) {
            s1 = peg$c2;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e5);
            }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$currPos;
            s3 = [];
            s4 = peg$parseVerbatimText();
            while (s4 !== peg$FAILED) {
              s3.push(s4);
              s4 = peg$parseVerbatimText();
            }
            s2 = input.substring(s2, peg$currPos);
            if (input.charCodeAt(peg$currPos) === 125) {
              s3 = peg$c3;
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e7);
              }
            }
            if (s3 !== peg$FAILED) {
              peg$savedPos = s0;
              s0 = peg$f19(s2);
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        }
        return s0;
      }
      function peg$parseVerbatimString() {
        var s0, s1, s2, s3, s4;
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = [];
        if (peg$r9.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e17);
          }
        }
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            if (peg$r9.test(input.charAt(peg$currPos))) {
              s3 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e17);
              }
            }
          }
        } else {
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s1 = input.substring(s1, peg$currPos);
        } else {
          s1 = s2;
        }
        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$f20(s1);
        }
        s0 = s1;
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 123) {
            s1 = peg$c2;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e5);
            }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$currPos;
            s3 = [];
            s4 = peg$parseVerbatimString();
            while (s4 !== peg$FAILED) {
              s3.push(s4);
              s4 = peg$parseVerbatimString();
            }
            s2 = input.substring(s2, peg$currPos);
            if (input.charCodeAt(peg$currPos) === 125) {
              s3 = peg$c3;
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e7);
              }
            }
            if (s3 !== peg$FAILED) {
              peg$savedPos = s0;
              s0 = peg$f21(s2);
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        }
        return s0;
      }
      function peg$parseFieldValue() {
        var s0, s1, s2, s3;
        s0 = peg$parseNumber();
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          peg$savedPos = peg$currPos;
          s1 = peg$f22();
          if (s1) {
            s1 = void 0;
          } else {
            s1 = peg$FAILED;
          }
          if (s1 !== peg$FAILED) {
            s2 = [];
            s3 = peg$parseRegularValue();
            if (s3 === peg$FAILED) {
              s3 = peg$parseStringValue();
            }
            while (s3 !== peg$FAILED) {
              s2.push(s3);
              s3 = peg$parseRegularValue();
              if (s3 === peg$FAILED) {
                s3 = peg$parseStringValue();
              }
            }
            peg$savedPos = s0;
            s0 = peg$f23(s2);
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        }
        return s0;
      }
      function peg$parseRegularValue() {
        var s0, s1, s2, s3, s4, s5;
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 34) {
          s1 = peg$c7;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e16);
          }
        }
        if (s1 !== peg$FAILED) {
          s2 = [];
          s3 = peg$parseEnvironment();
          if (s3 === peg$FAILED) {
            s3 = peg$parseBlock();
            if (s3 === peg$FAILED) {
              s3 = peg$parseMath();
              if (s3 === peg$FAILED) {
                s3 = peg$parseCommand();
                if (s3 === peg$FAILED) {
                  s3 = peg$parseTextNoQuotes();
                }
              }
            }
          }
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parseEnvironment();
            if (s3 === peg$FAILED) {
              s3 = peg$parseBlock();
              if (s3 === peg$FAILED) {
                s3 = peg$parseMath();
                if (s3 === peg$FAILED) {
                  s3 = peg$parseCommand();
                  if (s3 === peg$FAILED) {
                    s3 = peg$parseTextNoQuotes();
                  }
                }
              }
            }
          }
          if (input.charCodeAt(peg$currPos) === 34) {
            s3 = peg$c7;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e16);
            }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parseConcat();
            if (s4 === peg$FAILED) {
              s4 = null;
            }
            peg$savedPos = s0;
            s0 = peg$f24(s2);
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.substr(peg$currPos, 6) === peg$c8) {
            s1 = peg$c8;
            peg$currPos += 6;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e18);
            }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$currPos;
            peg$silentFails++;
            if (peg$r10.test(input.charAt(peg$currPos))) {
              s3 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e19);
              }
            }
            peg$silentFails--;
            if (s3 === peg$FAILED) {
              s2 = void 0;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
            if (s2 !== peg$FAILED) {
              s3 = [];
              s4 = peg$parseVerbatimText();
              while (s4 !== peg$FAILED) {
                s3.push(s4);
                s4 = peg$parseVerbatimText();
              }
              if (input.charCodeAt(peg$currPos) === 125) {
                s4 = peg$c3;
                peg$currPos++;
              } else {
                s4 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e7);
                }
              }
              if (s4 !== peg$FAILED) {
                s5 = peg$parseConcat();
                if (s5 === peg$FAILED) {
                  s5 = null;
                }
                peg$savedPos = s0;
                s0 = peg$f25(s3);
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 123) {
              s1 = peg$c2;
              peg$currPos++;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e5);
              }
            }
            if (s1 !== peg$FAILED) {
              s2 = [];
              s3 = peg$parseEnvironment();
              if (s3 === peg$FAILED) {
                s3 = peg$parseBlock();
                if (s3 === peg$FAILED) {
                  s3 = peg$parseMath();
                  if (s3 === peg$FAILED) {
                    s3 = peg$parseCommand();
                    if (s3 === peg$FAILED) {
                      s3 = peg$parseText();
                    }
                  }
                }
              }
              while (s3 !== peg$FAILED) {
                s2.push(s3);
                s3 = peg$parseEnvironment();
                if (s3 === peg$FAILED) {
                  s3 = peg$parseBlock();
                  if (s3 === peg$FAILED) {
                    s3 = peg$parseMath();
                    if (s3 === peg$FAILED) {
                      s3 = peg$parseCommand();
                      if (s3 === peg$FAILED) {
                        s3 = peg$parseText();
                      }
                    }
                  }
                }
              }
              if (input.charCodeAt(peg$currPos) === 125) {
                s3 = peg$c3;
                peg$currPos++;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e7);
                }
              }
              if (s3 !== peg$FAILED) {
                s4 = peg$parseConcat();
                if (s4 === peg$FAILED) {
                  s4 = null;
                }
                peg$savedPos = s0;
                s0 = peg$f26(s2);
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              s1 = peg$parseStringReference();
              if (s1 !== peg$FAILED) {
                s2 = peg$parseConcat();
                if (s2 === peg$FAILED) {
                  s2 = null;
                }
                peg$savedPos = s0;
                s0 = peg$f27(s1);
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            }
          }
        }
        return s0;
      }
      function peg$parseStringValue() {
        var s0, s1, s2;
        s0 = peg$currPos;
        s1 = peg$parseStringReference();
        if (s1 !== peg$FAILED) {
          s2 = peg$parseConcat();
          if (s2 === peg$FAILED) {
            s2 = null;
          }
          peg$savedPos = s0;
          s0 = peg$f28(s1);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseText() {
        var s0, s1, s2;
        s0 = peg$currPos;
        s1 = [];
        if (peg$r11.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e20);
          }
        }
        if (s2 !== peg$FAILED) {
          while (s2 !== peg$FAILED) {
            s1.push(s2);
            if (peg$r11.test(input.charAt(peg$currPos))) {
              s2 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e20);
              }
            }
          }
        } else {
          s1 = peg$FAILED;
        }
        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$f29(s1);
        }
        s0 = s1;
        return s0;
      }
      function peg$parseTextNoQuotes() {
        var s0, s1, s2;
        s0 = peg$currPos;
        s1 = [];
        if (peg$r12.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e21);
          }
        }
        if (s2 !== peg$FAILED) {
          while (s2 !== peg$FAILED) {
            s1.push(s2);
            if (peg$r12.test(input.charAt(peg$currPos))) {
              s2 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e21);
              }
            }
          }
        } else {
          s1 = peg$FAILED;
        }
        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$f30(s1);
        }
        s0 = s1;
        return s0;
      }
      function peg$parseNumber() {
        var s0, s1, s2, s3;
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = [];
        if (peg$r13.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e22);
          }
        }
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            if (peg$r13.test(input.charAt(peg$currPos))) {
              s3 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e22);
              }
            }
          }
        } else {
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s1 = input.substring(s1, peg$currPos);
        } else {
          s1 = s2;
        }
        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$f31(s1);
        }
        s0 = s1;
        return s0;
      }
      function peg$parseStringReference() {
        var s0, s1;
        s0 = peg$currPos;
        s1 = peg$parseVariableName();
        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$f32(s1);
        }
        s0 = s1;
        return s0;
      }
      function peg$parseEnvironment() {
        var s0, s1, s2, s3, s4, s5, s6, s7, s8;
        s0 = peg$currPos;
        if (input.substr(peg$currPos, 7) === peg$c9) {
          s1 = peg$c9;
          peg$currPos += 7;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e23);
          }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$currPos;
          s3 = [];
          if (peg$r14.test(input.charAt(peg$currPos))) {
            s4 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e24);
            }
          }
          if (s4 !== peg$FAILED) {
            while (s4 !== peg$FAILED) {
              s3.push(s4);
              if (peg$r14.test(input.charAt(peg$currPos))) {
                s4 = input.charAt(peg$currPos);
                peg$currPos++;
              } else {
                s4 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e24);
                }
              }
            }
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s2 = input.substring(s2, peg$currPos);
          } else {
            s2 = s3;
          }
          if (s2 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 125) {
              s3 = peg$c3;
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e7);
              }
            }
            if (s3 !== peg$FAILED) {
              s4 = [];
              s5 = peg$parseEnvironment();
              if (s5 === peg$FAILED) {
                s5 = peg$parseBlock();
                if (s5 === peg$FAILED) {
                  s5 = peg$parseCommand();
                  if (s5 === peg$FAILED) {
                    s5 = peg$parseMath();
                    if (s5 === peg$FAILED) {
                      s5 = peg$parseText();
                    }
                  }
                }
              }
              while (s5 !== peg$FAILED) {
                s4.push(s5);
                s5 = peg$parseEnvironment();
                if (s5 === peg$FAILED) {
                  s5 = peg$parseBlock();
                  if (s5 === peg$FAILED) {
                    s5 = peg$parseCommand();
                    if (s5 === peg$FAILED) {
                      s5 = peg$parseMath();
                      if (s5 === peg$FAILED) {
                        s5 = peg$parseText();
                      }
                    }
                  }
                }
              }
              if (input.substr(peg$currPos, 5) === peg$c10) {
                s5 = peg$c10;
                peg$currPos += 5;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e25);
                }
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$currPos;
                s7 = [];
                if (peg$r14.test(input.charAt(peg$currPos))) {
                  s8 = input.charAt(peg$currPos);
                  peg$currPos++;
                } else {
                  s8 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e24);
                  }
                }
                if (s8 !== peg$FAILED) {
                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    if (peg$r14.test(input.charAt(peg$currPos))) {
                      s8 = input.charAt(peg$currPos);
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;
                      if (peg$silentFails === 0) {
                        peg$fail(peg$e24);
                      }
                    }
                  }
                } else {
                  s7 = peg$FAILED;
                }
                if (s7 !== peg$FAILED) {
                  s6 = input.substring(s6, peg$currPos);
                } else {
                  s6 = s7;
                }
                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 125) {
                    s7 = peg$c3;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;
                    if (peg$silentFails === 0) {
                      peg$fail(peg$e7);
                    }
                  }
                  if (s7 !== peg$FAILED) {
                    peg$savedPos = peg$currPos;
                    s8 = peg$f33(s2, s4, s6);
                    if (s8) {
                      s8 = void 0;
                    } else {
                      s8 = peg$FAILED;
                    }
                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s0 = peg$f34(s2, s4, s6);
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseBlock() {
        var s0, s1, s2, s3, s4, s5, s6;
        s0 = peg$currPos;
        if (input.substr(peg$currPos, 2) === peg$c11) {
          s1 = peg$c11;
          peg$currPos += 2;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e26);
          }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parseExtendedDiacritic();
          if (s2 !== peg$FAILED) {
            s3 = peg$parse__();
            if (peg$r14.test(input.charAt(peg$currPos))) {
              s4 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e24);
              }
            }
            if (s4 === peg$FAILED) {
              s4 = peg$currPos;
              if (input.charCodeAt(peg$currPos) === 92) {
                s5 = peg$c12;
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e27);
                }
              }
              if (s5 !== peg$FAILED) {
                if (peg$r15.test(input.charAt(peg$currPos))) {
                  s6 = input.charAt(peg$currPos);
                  peg$currPos++;
                } else {
                  s6 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e28);
                  }
                }
                if (s6 !== peg$FAILED) {
                  s5 = [s5, s6];
                  s4 = s5;
                } else {
                  peg$currPos = s4;
                  s4 = peg$FAILED;
                }
              } else {
                peg$currPos = s4;
                s4 = peg$FAILED;
              }
            }
            if (s4 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 125) {
                s5 = peg$c3;
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e7);
                }
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s0 = peg$f35(s2, s4);
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.substr(peg$currPos, 6) === peg$c8) {
            s1 = peg$c8;
            peg$currPos += 6;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e18);
            }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$currPos;
            peg$silentFails++;
            if (peg$r10.test(input.charAt(peg$currPos))) {
              s3 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e19);
              }
            }
            peg$silentFails--;
            if (s3 === peg$FAILED) {
              s2 = void 0;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
            if (s2 !== peg$FAILED) {
              s3 = [];
              s4 = peg$parseVerbatimText();
              while (s4 !== peg$FAILED) {
                s3.push(s4);
                s4 = peg$parseVerbatimText();
              }
              if (input.charCodeAt(peg$currPos) === 125) {
                s4 = peg$c3;
                peg$currPos++;
              } else {
                s4 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e7);
                }
              }
              if (s4 !== peg$FAILED) {
                peg$savedPos = s0;
                s0 = peg$f36(s3);
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 123) {
              s1 = peg$c2;
              peg$currPos++;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e5);
              }
            }
            if (s1 !== peg$FAILED) {
              s2 = [];
              s3 = peg$parseEnvironment();
              if (s3 === peg$FAILED) {
                s3 = peg$parseBlock();
                if (s3 === peg$FAILED) {
                  s3 = peg$parseCommand();
                  if (s3 === peg$FAILED) {
                    s3 = peg$parseMath();
                    if (s3 === peg$FAILED) {
                      s3 = peg$parseText();
                    }
                  }
                }
              }
              while (s3 !== peg$FAILED) {
                s2.push(s3);
                s3 = peg$parseEnvironment();
                if (s3 === peg$FAILED) {
                  s3 = peg$parseBlock();
                  if (s3 === peg$FAILED) {
                    s3 = peg$parseCommand();
                    if (s3 === peg$FAILED) {
                      s3 = peg$parseMath();
                      if (s3 === peg$FAILED) {
                        s3 = peg$parseText();
                      }
                    }
                  }
                }
              }
              if (input.charCodeAt(peg$currPos) === 125) {
                s3 = peg$c3;
                peg$currPos++;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e7);
                }
              }
              if (s3 !== peg$FAILED) {
                peg$savedPos = s0;
                s0 = peg$f37(s2);
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          }
        }
        return s0;
      }
      function peg$parseMath() {
        var s0, s1, s2, s3, s4, s5, s6;
        s0 = peg$currPos;
        peg$savedPos = peg$currPos;
        s1 = peg$f38();
        if (s1) {
          s1 = void 0;
        } else {
          s1 = peg$FAILED;
        }
        if (s1 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 36) {
            s2 = peg$c13;
            peg$currPos++;
          } else {
            s2 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e29);
            }
          }
          if (s2 === peg$FAILED) {
            if (input.substr(peg$currPos, 2) === peg$c14) {
              s2 = peg$c14;
              peg$currPos += 2;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e30);
              }
            }
            if (s2 === peg$FAILED) {
              if (input.substr(peg$currPos, 2) === peg$c15) {
                s2 = peg$c15;
                peg$currPos += 2;
              } else {
                s2 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e31);
                }
              }
            }
          }
          if (s2 !== peg$FAILED) {
            peg$savedPos = peg$currPos;
            s3 = peg$f39(s2);
            if (s3) {
              s3 = void 0;
            } else {
              s3 = peg$FAILED;
            }
            if (s3 !== peg$FAILED) {
              s4 = [];
              s5 = peg$parseBlock();
              if (s5 === peg$FAILED) {
                s5 = peg$parseCommand();
                if (s5 === peg$FAILED) {
                  s5 = peg$parseText();
                }
              }
              while (s5 !== peg$FAILED) {
                s4.push(s5);
                s5 = peg$parseBlock();
                if (s5 === peg$FAILED) {
                  s5 = peg$parseCommand();
                  if (s5 === peg$FAILED) {
                    s5 = peg$parseText();
                  }
                }
              }
              if (input.charCodeAt(peg$currPos) === 36) {
                s5 = peg$c13;
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e29);
                }
              }
              if (s5 === peg$FAILED) {
                if (input.substr(peg$currPos, 2) === peg$c14) {
                  s5 = peg$c14;
                  peg$currPos += 2;
                } else {
                  s5 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e30);
                  }
                }
                if (s5 === peg$FAILED) {
                  if (input.substr(peg$currPos, 2) === peg$c16) {
                    s5 = peg$c16;
                    peg$currPos += 2;
                  } else {
                    s5 = peg$FAILED;
                    if (peg$silentFails === 0) {
                      peg$fail(peg$e32);
                    }
                  }
                }
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = peg$currPos;
                s6 = peg$f40(s2, s4);
                if (s6) {
                  s6 = void 0;
                } else {
                  s6 = peg$FAILED;
                }
                if (s6 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s0 = peg$f41(s2, s4);
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseLineComment() {
        var s0, s1, s2, s3, s4, s5;
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 37) {
          s1 = peg$c17;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e33);
          }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse__h();
          s3 = peg$currPos;
          s4 = [];
          if (peg$r16.test(input.charAt(peg$currPos))) {
            s5 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e34);
            }
          }
          if (s5 !== peg$FAILED) {
            while (s5 !== peg$FAILED) {
              s4.push(s5);
              if (peg$r16.test(input.charAt(peg$currPos))) {
                s5 = input.charAt(peg$currPos);
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e34);
                }
              }
            }
          } else {
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s3 = input.substring(s3, peg$currPos);
          } else {
            s3 = s4;
          }
          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parseEOL();
            if (s5 !== peg$FAILED) {
              while (s5 !== peg$FAILED) {
                s4.push(s5);
                s5 = peg$parseEOL();
              }
            } else {
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s0 = peg$f42(s3);
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseCommand() {
        var s0;
        s0 = peg$parseScriptCommand();
        if (s0 === peg$FAILED) {
          s0 = peg$parseLineBreak();
          if (s0 === peg$FAILED) {
            s0 = peg$parseParBreak();
            if (s0 === peg$FAILED) {
              s0 = peg$parseDiacriticCommand();
              if (s0 === peg$FAILED) {
                s0 = peg$parseRegularCommand();
                if (s0 === peg$FAILED) {
                  s0 = peg$parseSymbolCommand();
                }
              }
            }
          }
        }
        return s0;
      }
      function peg$parseLineBreak() {
        var s0, s1, s2, s3;
        s0 = peg$currPos;
        s1 = peg$parse__();
        if (input.substr(peg$currPos, 2) === peg$c18) {
          s2 = peg$c18;
          peg$currPos += 2;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e35);
          }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parse__();
          peg$savedPos = s0;
          s0 = peg$f43();
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseParBreak() {
        var s0, s1, s2, s3, s4, s5, s6, s7;
        s0 = peg$currPos;
        s1 = peg$parse__h();
        if (input.charCodeAt(peg$currPos) === 13) {
          s2 = peg$c19;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e36);
          }
        }
        if (s2 === peg$FAILED) {
          s2 = null;
        }
        if (input.charCodeAt(peg$currPos) === 10) {
          s3 = peg$c20;
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e37);
          }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parse__h();
          if (input.charCodeAt(peg$currPos) === 13) {
            s5 = peg$c19;
            peg$currPos++;
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e36);
            }
          }
          if (s5 === peg$FAILED) {
            s5 = null;
          }
          if (input.charCodeAt(peg$currPos) === 10) {
            s6 = peg$c20;
            peg$currPos++;
          } else {
            s6 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e37);
            }
          }
          if (s6 !== peg$FAILED) {
            s7 = peg$parse__();
            peg$savedPos = s0;
            s0 = peg$f44();
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseScriptCommand() {
        var s0, s1, s2, s3;
        s0 = peg$currPos;
        if (peg$r17.test(input.charAt(peg$currPos))) {
          s1 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e38);
          }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse__h();
          s3 = peg$parseArgument();
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s0 = peg$f45(s1, s3);
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseDiacriticCommand() {
        var s0, s1, s2, s3, s4, s5, s6;
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 92) {
          s1 = peg$c12;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e27);
          }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parseSimpleDiacritic();
          if (s2 !== peg$FAILED) {
            s3 = peg$parse__();
            if (peg$r14.test(input.charAt(peg$currPos))) {
              s4 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e24);
              }
            }
            if (s4 === peg$FAILED) {
              s4 = peg$currPos;
              if (input.charCodeAt(peg$currPos) === 92) {
                s5 = peg$c12;
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e27);
                }
              }
              if (s5 !== peg$FAILED) {
                if (peg$r15.test(input.charAt(peg$currPos))) {
                  s6 = input.charAt(peg$currPos);
                  peg$currPos++;
                } else {
                  s6 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e28);
                  }
                }
                if (s6 !== peg$FAILED) {
                  s5 = [s5, s6];
                  s4 = s5;
                } else {
                  peg$currPos = s4;
                  s4 = peg$FAILED;
                }
              } else {
                peg$currPos = s4;
                s4 = peg$FAILED;
              }
            }
            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s0 = peg$f46(s2, s4);
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 92) {
            s1 = peg$c12;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e27);
            }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parseExtendedDiacritic();
            if (s2 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 123) {
                s3 = peg$c2;
                peg$currPos++;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e5);
                }
              }
              if (s3 !== peg$FAILED) {
                if (peg$r14.test(input.charAt(peg$currPos))) {
                  s4 = input.charAt(peg$currPos);
                  peg$currPos++;
                } else {
                  s4 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e24);
                  }
                }
                if (s4 === peg$FAILED) {
                  s4 = peg$currPos;
                  if (input.charCodeAt(peg$currPos) === 92) {
                    s5 = peg$c12;
                    peg$currPos++;
                  } else {
                    s5 = peg$FAILED;
                    if (peg$silentFails === 0) {
                      peg$fail(peg$e27);
                    }
                  }
                  if (s5 !== peg$FAILED) {
                    if (peg$r15.test(input.charAt(peg$currPos))) {
                      s6 = input.charAt(peg$currPos);
                      peg$currPos++;
                    } else {
                      s6 = peg$FAILED;
                      if (peg$silentFails === 0) {
                        peg$fail(peg$e28);
                      }
                    }
                    if (s6 !== peg$FAILED) {
                      s5 = [s5, s6];
                      s4 = s5;
                    } else {
                      peg$currPos = s4;
                      s4 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s4;
                    s4 = peg$FAILED;
                  }
                }
                if (s4 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 125) {
                    s5 = peg$c3;
                    peg$currPos++;
                  } else {
                    s5 = peg$FAILED;
                    if (peg$silentFails === 0) {
                      peg$fail(peg$e7);
                    }
                  }
                  if (s5 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s0 = peg$f47(s2, s4);
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 92) {
              s1 = peg$c12;
              peg$currPos++;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e27);
              }
            }
            if (s1 !== peg$FAILED) {
              s2 = peg$parseExtendedDiacritic();
              if (s2 !== peg$FAILED) {
                s3 = peg$currPos;
                peg$silentFails++;
                if (input.charCodeAt(peg$currPos) === 123) {
                  s4 = peg$c2;
                  peg$currPos++;
                } else {
                  s4 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e5);
                  }
                }
                peg$silentFails--;
                if (s4 !== peg$FAILED) {
                  peg$currPos = s3;
                  s3 = void 0;
                } else {
                  s3 = peg$FAILED;
                }
                if (s3 !== peg$FAILED) {
                  s4 = peg$parseRegularValue();
                  if (s4 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s0 = peg$f48(s2, s4);
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          }
        }
        return s0;
      }
      function peg$parseSymbolCommand() {
        var s0, s1, s2, s3;
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 92) {
          s1 = peg$c12;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e27);
          }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$currPos;
          if (peg$r18.test(input.charAt(peg$currPos))) {
            s3 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e39);
            }
          }
          if (s3 !== peg$FAILED) {
            s2 = input.substring(s2, peg$currPos);
          } else {
            s2 = s3;
          }
          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s0 = peg$f49(s2);
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseRegularCommand() {
        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 92) {
          s1 = peg$c12;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e27);
          }
        }
        if (s1 !== peg$FAILED) {
          if (input.substr(peg$currPos, 10) === peg$c21) {
            s2 = peg$c21;
            peg$currPos += 10;
          } else {
            s2 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e40);
            }
          }
          if (s2 !== peg$FAILED) {
            s3 = peg$parseBlock();
            if (s3 !== peg$FAILED) {
              peg$savedPos = peg$currPos;
              s4 = peg$f50(s2, s3);
              if (s4) {
                s4 = void 0;
              } else {
                s4 = peg$FAILED;
              }
              if (s4 !== peg$FAILED) {
                s5 = [];
                s6 = peg$parseOptionalArgument();
                while (s6 !== peg$FAILED) {
                  s5.push(s6);
                  s6 = peg$parseOptionalArgument();
                }
                s6 = peg$parseArgument();
                if (s6 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s0 = peg$f51(s2, s3, s5, s6);
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 92) {
            s1 = peg$c12;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e27);
            }
          }
          if (s1 !== peg$FAILED) {
            if (input.substr(peg$currPos, 3) === peg$c22) {
              s2 = peg$c22;
              peg$currPos += 3;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e41);
              }
            }
            if (s2 !== peg$FAILED) {
              s3 = peg$parse__h();
              s4 = peg$currPos;
              peg$silentFails++;
              if (input.charCodeAt(peg$currPos) === 123) {
                s5 = peg$c2;
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e5);
                }
              }
              peg$silentFails--;
              if (s5 !== peg$FAILED) {
                peg$currPos = s4;
                s4 = void 0;
              } else {
                s4 = peg$FAILED;
              }
              if (s4 !== peg$FAILED) {
                s5 = peg$parseVerbatimFieldValue();
                if (s5 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s0 = peg$f52(s2, s5);
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 92) {
              s1 = peg$c12;
              peg$currPos++;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e27);
              }
            }
            if (s1 !== peg$FAILED) {
              if (input.substr(peg$currPos, 4) === peg$c23) {
                s2 = peg$c23;
                peg$currPos += 4;
              } else {
                s2 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e42);
                }
              }
              if (s2 !== peg$FAILED) {
                s3 = peg$parse__h();
                s4 = peg$currPos;
                peg$silentFails++;
                if (input.charCodeAt(peg$currPos) === 123) {
                  s5 = peg$c2;
                  peg$currPos++;
                } else {
                  s5 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e5);
                  }
                }
                peg$silentFails--;
                if (s5 !== peg$FAILED) {
                  peg$currPos = s4;
                  s4 = void 0;
                } else {
                  s4 = peg$FAILED;
                }
                if (s4 !== peg$FAILED) {
                  s5 = peg$parseVerbatimFieldValue();
                  if (s5 !== peg$FAILED) {
                    s6 = peg$parseArgument();
                    if (s6 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s0 = peg$f53(s2, s5, s6);
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              if (input.charCodeAt(peg$currPos) === 92) {
                s1 = peg$c12;
                peg$currPos++;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e27);
                }
              }
              if (s1 !== peg$FAILED) {
                s2 = peg$currPos;
                peg$silentFails++;
                if (input.substr(peg$currPos, 5) === peg$c24) {
                  s3 = peg$c24;
                  peg$currPos += 5;
                } else {
                  s3 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e43);
                  }
                }
                peg$silentFails--;
                if (s3 === peg$FAILED) {
                  s2 = void 0;
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
                if (s2 !== peg$FAILED) {
                  s3 = peg$currPos;
                  peg$silentFails++;
                  if (input.substr(peg$currPos, 3) === peg$c25) {
                    s4 = peg$c25;
                    peg$currPos += 3;
                  } else {
                    s4 = peg$FAILED;
                    if (peg$silentFails === 0) {
                      peg$fail(peg$e44);
                    }
                  }
                  peg$silentFails--;
                  if (s4 === peg$FAILED) {
                    s3 = void 0;
                  } else {
                    peg$currPos = s3;
                    s3 = peg$FAILED;
                  }
                  if (s3 !== peg$FAILED) {
                    s4 = peg$currPos;
                    s5 = [];
                    if (peg$r19.test(input.charAt(peg$currPos))) {
                      s6 = input.charAt(peg$currPos);
                      peg$currPos++;
                    } else {
                      s6 = peg$FAILED;
                      if (peg$silentFails === 0) {
                        peg$fail(peg$e45);
                      }
                    }
                    if (s6 !== peg$FAILED) {
                      while (s6 !== peg$FAILED) {
                        s5.push(s6);
                        if (peg$r19.test(input.charAt(peg$currPos))) {
                          s6 = input.charAt(peg$currPos);
                          peg$currPos++;
                        } else {
                          s6 = peg$FAILED;
                          if (peg$silentFails === 0) {
                            peg$fail(peg$e45);
                          }
                        }
                      }
                    } else {
                      s5 = peg$FAILED;
                    }
                    if (s5 !== peg$FAILED) {
                      s4 = input.substring(s4, peg$currPos);
                    } else {
                      s4 = s5;
                    }
                    if (s4 !== peg$FAILED) {
                      peg$savedPos = peg$currPos;
                      s5 = peg$f54(s4);
                      if (s5) {
                        s5 = void 0;
                      } else {
                        s5 = peg$FAILED;
                      }
                      if (s5 !== peg$FAILED) {
                        s6 = [];
                        s7 = peg$parseOptionalArgument();
                        while (s7 !== peg$FAILED) {
                          s6.push(s7);
                          s7 = peg$parseOptionalArgument();
                        }
                        s7 = peg$parse__h();
                        s8 = peg$currPos;
                        peg$silentFails++;
                        if (input.charCodeAt(peg$currPos) === 123) {
                          s9 = peg$c2;
                          peg$currPos++;
                        } else {
                          s9 = peg$FAILED;
                          if (peg$silentFails === 0) {
                            peg$fail(peg$e5);
                          }
                        }
                        peg$silentFails--;
                        if (s9 !== peg$FAILED) {
                          peg$currPos = s8;
                          s8 = void 0;
                        } else {
                          s8 = peg$FAILED;
                        }
                        if (s8 !== peg$FAILED) {
                          s9 = peg$parseVerbatimFieldValue();
                          if (s9 !== peg$FAILED) {
                            s10 = peg$parseVerbatimFieldValue();
                            if (s10 !== peg$FAILED) {
                              peg$savedPos = s0;
                              s0 = peg$f55(s4, s6, s9, s10);
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.charCodeAt(peg$currPos) === 92) {
                  s1 = peg$c12;
                  peg$currPos++;
                } else {
                  s1 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e27);
                  }
                }
                if (s1 !== peg$FAILED) {
                  s2 = peg$currPos;
                  peg$silentFails++;
                  if (input.substr(peg$currPos, 5) === peg$c24) {
                    s3 = peg$c24;
                    peg$currPos += 5;
                  } else {
                    s3 = peg$FAILED;
                    if (peg$silentFails === 0) {
                      peg$fail(peg$e43);
                    }
                  }
                  peg$silentFails--;
                  if (s3 === peg$FAILED) {
                    s2 = void 0;
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                  if (s2 !== peg$FAILED) {
                    s3 = peg$currPos;
                    peg$silentFails++;
                    if (input.substr(peg$currPos, 3) === peg$c25) {
                      s4 = peg$c25;
                      peg$currPos += 3;
                    } else {
                      s4 = peg$FAILED;
                      if (peg$silentFails === 0) {
                        peg$fail(peg$e44);
                      }
                    }
                    peg$silentFails--;
                    if (s4 === peg$FAILED) {
                      s3 = void 0;
                    } else {
                      peg$currPos = s3;
                      s3 = peg$FAILED;
                    }
                    if (s3 !== peg$FAILED) {
                      s4 = peg$currPos;
                      s5 = [];
                      if (peg$r19.test(input.charAt(peg$currPos))) {
                        s6 = input.charAt(peg$currPos);
                        peg$currPos++;
                      } else {
                        s6 = peg$FAILED;
                        if (peg$silentFails === 0) {
                          peg$fail(peg$e45);
                        }
                      }
                      if (s6 !== peg$FAILED) {
                        while (s6 !== peg$FAILED) {
                          s5.push(s6);
                          if (peg$r19.test(input.charAt(peg$currPos))) {
                            s6 = input.charAt(peg$currPos);
                            peg$currPos++;
                          } else {
                            s6 = peg$FAILED;
                            if (peg$silentFails === 0) {
                              peg$fail(peg$e45);
                            }
                          }
                        }
                      } else {
                        s5 = peg$FAILED;
                      }
                      if (s5 !== peg$FAILED) {
                        s4 = input.substring(s4, peg$currPos);
                      } else {
                        s4 = s5;
                      }
                      if (s4 !== peg$FAILED) {
                        peg$savedPos = peg$currPos;
                        s5 = peg$f56(s4);
                        if (s5) {
                          s5 = void 0;
                        } else {
                          s5 = peg$FAILED;
                        }
                        if (s5 !== peg$FAILED) {
                          s6 = [];
                          s7 = peg$parseOptionalArgument();
                          while (s7 !== peg$FAILED) {
                            s6.push(s7);
                            s7 = peg$parseOptionalArgument();
                          }
                          s7 = peg$parse__h();
                          s8 = peg$currPos;
                          peg$silentFails++;
                          if (input.charCodeAt(peg$currPos) === 123) {
                            s9 = peg$c2;
                            peg$currPos++;
                          } else {
                            s9 = peg$FAILED;
                            if (peg$silentFails === 0) {
                              peg$fail(peg$e5);
                            }
                          }
                          peg$silentFails--;
                          if (s9 !== peg$FAILED) {
                            peg$currPos = s8;
                            s8 = void 0;
                          } else {
                            s8 = peg$FAILED;
                          }
                          if (s8 !== peg$FAILED) {
                            s9 = peg$parseVerbatimFieldValue();
                            if (s9 !== peg$FAILED) {
                              peg$savedPos = s0;
                              s0 = peg$f57(s4, s6, s9);
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
                if (s0 === peg$FAILED) {
                  s0 = peg$currPos;
                  if (input.charCodeAt(peg$currPos) === 92) {
                    s1 = peg$c12;
                    peg$currPos++;
                  } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) {
                      peg$fail(peg$e27);
                    }
                  }
                  if (s1 !== peg$FAILED) {
                    s2 = peg$currPos;
                    peg$silentFails++;
                    if (input.substr(peg$currPos, 5) === peg$c24) {
                      s3 = peg$c24;
                      peg$currPos += 5;
                    } else {
                      s3 = peg$FAILED;
                      if (peg$silentFails === 0) {
                        peg$fail(peg$e43);
                      }
                    }
                    peg$silentFails--;
                    if (s3 === peg$FAILED) {
                      s2 = void 0;
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                    if (s2 !== peg$FAILED) {
                      s3 = peg$currPos;
                      peg$silentFails++;
                      if (input.substr(peg$currPos, 3) === peg$c25) {
                        s4 = peg$c25;
                        peg$currPos += 3;
                      } else {
                        s4 = peg$FAILED;
                        if (peg$silentFails === 0) {
                          peg$fail(peg$e44);
                        }
                      }
                      peg$silentFails--;
                      if (s4 === peg$FAILED) {
                        s3 = void 0;
                      } else {
                        peg$currPos = s3;
                        s3 = peg$FAILED;
                      }
                      if (s3 !== peg$FAILED) {
                        s4 = peg$currPos;
                        s5 = [];
                        if (peg$r19.test(input.charAt(peg$currPos))) {
                          s6 = input.charAt(peg$currPos);
                          peg$currPos++;
                        } else {
                          s6 = peg$FAILED;
                          if (peg$silentFails === 0) {
                            peg$fail(peg$e45);
                          }
                        }
                        if (s6 !== peg$FAILED) {
                          while (s6 !== peg$FAILED) {
                            s5.push(s6);
                            if (peg$r19.test(input.charAt(peg$currPos))) {
                              s6 = input.charAt(peg$currPos);
                              peg$currPos++;
                            } else {
                              s6 = peg$FAILED;
                              if (peg$silentFails === 0) {
                                peg$fail(peg$e45);
                              }
                            }
                          }
                        } else {
                          s5 = peg$FAILED;
                        }
                        if (s5 !== peg$FAILED) {
                          s4 = input.substring(s4, peg$currPos);
                        } else {
                          s4 = s5;
                        }
                        if (s4 !== peg$FAILED) {
                          peg$savedPos = peg$currPos;
                          s5 = peg$f58(s4);
                          if (s5) {
                            s5 = void 0;
                          } else {
                            s5 = peg$FAILED;
                          }
                          if (s5 !== peg$FAILED) {
                            s6 = [];
                            s7 = peg$parseOptionalArgument();
                            while (s7 !== peg$FAILED) {
                              s6.push(s7);
                              s7 = peg$parseOptionalArgument();
                            }
                            s7 = peg$parse__h();
                            s8 = peg$parseArgument();
                            if (s8 !== peg$FAILED) {
                              s9 = peg$parseArgument();
                              if (s9 !== peg$FAILED) {
                                peg$savedPos = s0;
                                s0 = peg$f59(s4, s6, s8, s9);
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                  if (s0 === peg$FAILED) {
                    s0 = peg$currPos;
                    if (input.charCodeAt(peg$currPos) === 92) {
                      s1 = peg$c12;
                      peg$currPos++;
                    } else {
                      s1 = peg$FAILED;
                      if (peg$silentFails === 0) {
                        peg$fail(peg$e27);
                      }
                    }
                    if (s1 !== peg$FAILED) {
                      s2 = peg$currPos;
                      peg$silentFails++;
                      if (input.substr(peg$currPos, 5) === peg$c24) {
                        s3 = peg$c24;
                        peg$currPos += 5;
                      } else {
                        s3 = peg$FAILED;
                        if (peg$silentFails === 0) {
                          peg$fail(peg$e43);
                        }
                      }
                      peg$silentFails--;
                      if (s3 === peg$FAILED) {
                        s2 = void 0;
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                      if (s2 !== peg$FAILED) {
                        s3 = peg$currPos;
                        peg$silentFails++;
                        if (input.substr(peg$currPos, 3) === peg$c25) {
                          s4 = peg$c25;
                          peg$currPos += 3;
                        } else {
                          s4 = peg$FAILED;
                          if (peg$silentFails === 0) {
                            peg$fail(peg$e44);
                          }
                        }
                        peg$silentFails--;
                        if (s4 === peg$FAILED) {
                          s3 = void 0;
                        } else {
                          peg$currPos = s3;
                          s3 = peg$FAILED;
                        }
                        if (s3 !== peg$FAILED) {
                          s4 = peg$currPos;
                          s5 = [];
                          if (peg$r19.test(input.charAt(peg$currPos))) {
                            s6 = input.charAt(peg$currPos);
                            peg$currPos++;
                          } else {
                            s6 = peg$FAILED;
                            if (peg$silentFails === 0) {
                              peg$fail(peg$e45);
                            }
                          }
                          if (s6 !== peg$FAILED) {
                            while (s6 !== peg$FAILED) {
                              s5.push(s6);
                              if (peg$r19.test(input.charAt(peg$currPos))) {
                                s6 = input.charAt(peg$currPos);
                                peg$currPos++;
                              } else {
                                s6 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                  peg$fail(peg$e45);
                                }
                              }
                            }
                          } else {
                            s5 = peg$FAILED;
                          }
                          if (s5 !== peg$FAILED) {
                            s4 = input.substring(s4, peg$currPos);
                          } else {
                            s4 = s5;
                          }
                          if (s4 !== peg$FAILED) {
                            peg$savedPos = peg$currPos;
                            s5 = peg$f60(s4);
                            if (s5) {
                              s5 = void 0;
                            } else {
                              s5 = peg$FAILED;
                            }
                            if (s5 !== peg$FAILED) {
                              s6 = [];
                              s7 = peg$parseOptionalArgument();
                              while (s7 !== peg$FAILED) {
                                s6.push(s7);
                                s7 = peg$parseOptionalArgument();
                              }
                              s7 = peg$parse__h();
                              s8 = peg$parseArgument();
                              if (s8 !== peg$FAILED) {
                                peg$savedPos = s0;
                                s0 = peg$f61(s4, s6, s8);
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                    if (s0 === peg$FAILED) {
                      s0 = peg$currPos;
                      if (input.charCodeAt(peg$currPos) === 92) {
                        s1 = peg$c12;
                        peg$currPos++;
                      } else {
                        s1 = peg$FAILED;
                        if (peg$silentFails === 0) {
                          peg$fail(peg$e27);
                        }
                      }
                      if (s1 !== peg$FAILED) {
                        s2 = peg$currPos;
                        peg$silentFails++;
                        if (input.substr(peg$currPos, 5) === peg$c24) {
                          s3 = peg$c24;
                          peg$currPos += 5;
                        } else {
                          s3 = peg$FAILED;
                          if (peg$silentFails === 0) {
                            peg$fail(peg$e43);
                          }
                        }
                        peg$silentFails--;
                        if (s3 === peg$FAILED) {
                          s2 = void 0;
                        } else {
                          peg$currPos = s2;
                          s2 = peg$FAILED;
                        }
                        if (s2 !== peg$FAILED) {
                          s3 = peg$currPos;
                          peg$silentFails++;
                          if (input.substr(peg$currPos, 3) === peg$c25) {
                            s4 = peg$c25;
                            peg$currPos += 3;
                          } else {
                            s4 = peg$FAILED;
                            if (peg$silentFails === 0) {
                              peg$fail(peg$e44);
                            }
                          }
                          peg$silentFails--;
                          if (s4 === peg$FAILED) {
                            s3 = void 0;
                          } else {
                            peg$currPos = s3;
                            s3 = peg$FAILED;
                          }
                          if (s3 !== peg$FAILED) {
                            s4 = peg$currPos;
                            s5 = [];
                            if (peg$r19.test(input.charAt(peg$currPos))) {
                              s6 = input.charAt(peg$currPos);
                              peg$currPos++;
                            } else {
                              s6 = peg$FAILED;
                              if (peg$silentFails === 0) {
                                peg$fail(peg$e45);
                              }
                            }
                            if (s6 !== peg$FAILED) {
                              while (s6 !== peg$FAILED) {
                                s5.push(s6);
                                if (peg$r19.test(input.charAt(peg$currPos))) {
                                  s6 = input.charAt(peg$currPos);
                                  peg$currPos++;
                                } else {
                                  s6 = peg$FAILED;
                                  if (peg$silentFails === 0) {
                                    peg$fail(peg$e45);
                                  }
                                }
                              }
                            } else {
                              s5 = peg$FAILED;
                            }
                            if (s5 !== peg$FAILED) {
                              s4 = input.substring(s4, peg$currPos);
                            } else {
                              s4 = s5;
                            }
                            if (s4 !== peg$FAILED) {
                              s5 = [];
                              s6 = peg$parseOptionalArgument();
                              while (s6 !== peg$FAILED) {
                                s5.push(s6);
                                s6 = peg$parseOptionalArgument();
                              }
                              s6 = peg$parse__();
                              peg$savedPos = s0;
                              s0 = peg$f62(s4, s5);
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    }
                  }
                }
              }
            }
          }
        }
        return s0;
      }
      function peg$parseOptionalArgument() {
        var s0, s1, s2, s3, s4, s5;
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 91) {
          s1 = peg$c26;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e46);
          }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse__h();
          s3 = peg$currPos;
          s4 = [];
          if (peg$r20.test(input.charAt(peg$currPos))) {
            s5 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e47);
            }
          }
          if (s5 !== peg$FAILED) {
            while (s5 !== peg$FAILED) {
              s4.push(s5);
              if (peg$r20.test(input.charAt(peg$currPos))) {
                s5 = input.charAt(peg$currPos);
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e47);
                }
              }
            }
          } else {
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s3 = input.substring(s3, peg$currPos);
          } else {
            s3 = s4;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse__h();
            if (input.charCodeAt(peg$currPos) === 93) {
              s5 = peg$c27;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e48);
              }
            }
            if (s5 !== peg$FAILED) {
              peg$savedPos = s0;
              s0 = peg$f63(s3);
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseArgument() {
        var s0, s1, s2;
        s0 = peg$currPos;
        s1 = peg$parse__h();
        if (peg$r21.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e49);
          }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s0 = peg$f64(s2);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parse__h();
          s2 = peg$parseBlock();
          if (s2 === peg$FAILED) {
            s2 = peg$parseCommand();
          }
          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s0 = peg$f65(s2);
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        }
        return s0;
      }
      function peg$parseVariableName() {
        var s0, s1, s2, s3, s4;
        s0 = peg$currPos;
        s1 = peg$currPos;
        if (peg$r22.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e50);
          }
        }
        if (s2 !== peg$FAILED) {
          s3 = [];
          if (peg$r23.test(input.charAt(peg$currPos))) {
            s4 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e51);
            }
          }
          while (s4 !== peg$FAILED) {
            s3.push(s4);
            if (peg$r23.test(input.charAt(peg$currPos))) {
              s4 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e51);
              }
            }
          }
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
        if (s1 !== peg$FAILED) {
          s0 = input.substring(s0, peg$currPos);
        } else {
          s0 = s1;
        }
        return s0;
      }
      function peg$parseSimpleDiacritic() {
        var s0;
        if (peg$r24.test(input.charAt(peg$currPos))) {
          s0 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e52);
          }
        }
        return s0;
      }
      function peg$parseExtendedDiacritic() {
        var s0;
        if (peg$r25.test(input.charAt(peg$currPos))) {
          s0 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e53);
          }
        }
        return s0;
      }
      function peg$parseFieldSeparator() {
        var s0, s1, s2, s3;
        s0 = peg$currPos;
        s1 = peg$parse__();
        if (input.charCodeAt(peg$currPos) === 61) {
          s2 = peg$c28;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e54);
          }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parse__();
          s1 = [s1, s2, s3];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseFieldTerminator() {
        var s0;
        s0 = peg$parse_();
        if (s0 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 44) {
            s0 = peg$c6;
            peg$currPos++;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e14);
            }
          }
          if (s0 === peg$FAILED) {
            s0 = peg$parseLineComment();
          }
        }
        return s0;
      }
      function peg$parseConcat() {
        var s0, s1, s2, s3;
        s0 = peg$currPos;
        s1 = peg$parse__();
        if (input.charCodeAt(peg$currPos) === 35) {
          s2 = peg$c29;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e55);
          }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parse__();
          s1 = [s1, s2, s3];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        return s0;
      }
      function peg$parseEOL() {
        var s0;
        if (peg$r26.test(input.charAt(peg$currPos))) {
          s0 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e56);
          }
        }
        return s0;
      }
      function peg$parse_h() {
        var s0, s1;
        peg$silentFails++;
        s0 = [];
        if (peg$r27.test(input.charAt(peg$currPos))) {
          s1 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e58);
          }
        }
        if (s1 !== peg$FAILED) {
          while (s1 !== peg$FAILED) {
            s0.push(s1);
            if (peg$r27.test(input.charAt(peg$currPos))) {
              s1 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e58);
              }
            }
          }
        } else {
          s0 = peg$FAILED;
        }
        peg$silentFails--;
        if (s0 === peg$FAILED) {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e57);
          }
        }
        return s0;
      }
      function peg$parse__h() {
        var s0, s1;
        peg$silentFails++;
        s0 = [];
        if (peg$r27.test(input.charAt(peg$currPos))) {
          s1 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e58);
          }
        }
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          if (peg$r27.test(input.charAt(peg$currPos))) {
            s1 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e58);
            }
          }
        }
        peg$silentFails--;
        s1 = peg$FAILED;
        if (peg$silentFails === 0) {
          peg$fail(peg$e59);
        }
        return s0;
      }
      function peg$parse_v() {
        var s0, s1;
        peg$silentFails++;
        s0 = [];
        if (peg$r26.test(input.charAt(peg$currPos))) {
          s1 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e56);
          }
        }
        if (s1 !== peg$FAILED) {
          while (s1 !== peg$FAILED) {
            s0.push(s1);
            if (peg$r26.test(input.charAt(peg$currPos))) {
              s1 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e56);
              }
            }
          }
        } else {
          s0 = peg$FAILED;
        }
        peg$silentFails--;
        if (s0 === peg$FAILED) {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e60);
          }
        }
        return s0;
      }
      function peg$parse__v() {
        var s0, s1;
        peg$silentFails++;
        s0 = [];
        if (peg$r26.test(input.charAt(peg$currPos))) {
          s1 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e56);
          }
        }
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          if (peg$r26.test(input.charAt(peg$currPos))) {
            s1 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e56);
            }
          }
        }
        peg$silentFails--;
        s1 = peg$FAILED;
        if (peg$silentFails === 0) {
          peg$fail(peg$e61);
        }
        return s0;
      }
      function peg$parse_() {
        var s0, s1;
        peg$silentFails++;
        s0 = [];
        if (peg$r28.test(input.charAt(peg$currPos))) {
          s1 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e63);
          }
        }
        if (s1 !== peg$FAILED) {
          while (s1 !== peg$FAILED) {
            s0.push(s1);
            if (peg$r28.test(input.charAt(peg$currPos))) {
              s1 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e63);
              }
            }
          }
        } else {
          s0 = peg$FAILED;
        }
        peg$silentFails--;
        if (s0 === peg$FAILED) {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e62);
          }
        }
        return s0;
      }
      function peg$parse__() {
        var s0, s1;
        peg$silentFails++;
        s0 = [];
        if (peg$r28.test(input.charAt(peg$currPos))) {
          s1 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e63);
          }
        }
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          if (peg$r28.test(input.charAt(peg$currPos))) {
            s1 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e63);
            }
          }
        }
        peg$silentFails--;
        s1 = peg$FAILED;
        if (peg$silentFails === 0) {
          peg$fail(peg$e64);
        }
        return s0;
      }
      const markup = {
        sl: "italics",
        em: "italics",
        it: "italics",
        itshape: "italics",
        bf: "bold",
        bfseries: "bold",
        sc: "smallCaps",
        scshape: "smallCaps",
        tt: "fixedWidth",
        texttt: "fixedWidth",
        rm: "roman",
        sf: "sansSerif",
        verb: "verbatim"
      };
      const unnestFields = (options.unnestFields || []).map((field) => field.toLowerCase());
      const verbatimFields = (options.verbatimFields || ["urlraw", "url", "doi", "file", "files", "eprint", "verba", "verbb", "verbc"]).map((field) => typeof field === "string" ? field.toLowerCase() : field);
      const verbatimCommands = options.verbatimCommands || ["texttt", "url"];
      function isVerbatimField(name) {
        return verbatimFields.find((p) => typeof p === "string" ? name === p : name.match(p));
      }
      function normalizeWhitespace(textArr) {
        if (typeof textArr === "string")
          textArr = Array.from(textArr);
        return textArr.reduce((prev, curr) => {
          if (/\s/.test(curr)) {
            if (/\s/.test(prev[prev.length - 1])) {
              return prev;
            } else {
              return prev + " ";
            }
          }
          return prev + curr;
        }, "");
      }
      const has_arguments = {
        ElsevierGlyph: 1,
        end: 1,
        begin: 1,
        bibcyr: 1,
        bibstring: 1,
        chsf: 1,
        cite: 1,
        citeauthor: 1,
        cyrchar: 1,
        ding: 1,
        emph: 1,
        enquote: 1,
        frac: 2,
        href: 2,
        hspace: 1,
        mathrm: 1,
        mbox: 1,
        mkbibbold: 1,
        mkbibemph: 1,
        mkbibitalic: 1,
        mkbibquote: 1,
        newcommand: 2,
        noopsort: 1,
        ocirc: 1,
        section: 1,
        sb: 1,
        sp: 1,
        subsection: 1,
        subsubsection: 1,
        subsubsubsection: 1,
        t: 1,
        textbf: 1,
        textcite: 1,
        textit: 1,
        textrm: 1,
        textsc: 1,
        textsubscript: 1,
        textsuperscript: 1,
        textup: 1,
        texttt: 1,
        url: 1,
        vphantom: 1,
        vspace: 1
      };
      if (options.combiningDiacritics) {
        for (const cmd of options.combiningDiacritics) {
          has_arguments[cmd] = 1;
        }
      }
      function say() {
        console.log(JSON.stringify(Array.from(arguments), null, 2));
        return true;
      }
      function peek(n) {
        return input.substr(peg$savedPos, n);
      }
      const math = {
        on: false,
        set: function(state) {
          this.on = state;
          return true;
        }
      };
      function basicTextConversions(node) {
        if (node.kind !== "Text")
          throw new Error(node.kind + " is not a Text node");
        switch (node.mode) {
          case "verbatim":
            break;
          case "math":
            node.value = node.value.replace(/~/g, "\xA0");
            break;
          case "text":
            node.value = node.value.replace(/---/g, "\u2014").replace(/--/g, "\u2013").replace(/</g, "\xA1").replace(/>/g, "\xBF").replace(/~/g, "\xA0").replace(/``/g, options.markup.enquote.open).replace(/''/g, options.markup.enquote.close);
            break;
          default:
            throw new Error(`Unexpected text mode ${node.mode}`);
        }
        return node;
      }
      function protect(v) {
        let source;
        if (Array.isArray(v)) {
          source = v.map((e) => e.source).join("");
        } else {
          v = [v];
          source = v.source;
        }
        return {
          kind: "Block",
          value: v,
          markup: {},
          case: "protect",
          source
        };
      }
      function handle_markup_switches(block) {
        const value = block.value;
        if (!Array.isArray(value))
          return block;
        block.value = [];
        const pseudo = {
          block: null,
          markup: {}
        };
        function pseudo_block() {
          pseudo.block = {
            kind: "Block",
            loc: location(),
            source: "",
            value: [],
            markup: JSON.parse(JSON.stringify(pseudo.markup)),
            pseudo: true
          };
          block.value.push(pseudo.block);
        }
        for (const node of value) {
          if (node.kind === "Environment" || node.kind === "Block") {
            block.value.push(node);
            if (Object.keys(pseudo.markup).length) {
              pseudo_block();
            } else {
              pseudo.block = null;
            }
            continue;
          }
          if (node.kind === "RegularCommand" && markup[node.command]) {
            if (pseudo.markup.italics) {
              delete pseudo.markup.italics;
              if (markup[node.command] !== "italics")
                pseudo.markup[markup[node.command]] = true;
            } else {
              pseudo.markup[markup[node.command]] = true;
            }
            if (Object.keys(pseudo.markup).length) {
              pseudo_block();
            } else {
              pseudo.block = null;
            }
          }
          if (pseudo.block) {
            pseudo.block.source += node.source;
            pseudo.block.value.push(node);
          } else {
            block.value.push(node);
          }
        }
        block.value = block.value.filter((node) => !(node.pseudo && node.value.length === 0));
        return block;
      }
      peg$result = peg$startRuleFunction();
      if (peg$result !== peg$FAILED && peg$currPos === input.length) {
        return peg$result;
      } else {
        if (peg$result !== peg$FAILED && peg$currPos < input.length) {
          peg$fail(peg$endExpectation());
        }
        throw peg$buildStructuredError(
          peg$maxFailExpected,
          peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
          peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
        );
      }
    }
    module2.exports = {
      SyntaxError: peg$SyntaxError,
      parse: peg$parse
    };
  }
});

// node_modules/@retorquere/bibtex-parser/chunker.js
var require_chunker = __commonJS({
  "node_modules/@retorquere/bibtex-parser/chunker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.promises = exports.parse = void 0;
    var ParseError = class extends Error {
      constructor(message, parser) {
        message += ` @ ${parser.pos}`;
        if (parser.parsing)
          message += ` in ${JSON.stringify(parser.parsing)}`;
        super(message);
        this.name = "ParseError";
      }
    };
    var letter = new RegExp("[" + [
      // Letter, Uppercase
      /\u0041-\u005A\u00C0-\u00D6\u00D8-\u00DE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178-\u0179\u017B\u017D\u0181-\u0182\u0184\u0186-\u0187\u0189-\u018B\u018E-\u0191\u0193-\u0194\u0196-\u0198\u019C-\u019D\u019F-\u01A0\u01A2\u01A4\u01A6-\u01A7\u01A9\u01AC\u01AE-\u01AF\u01B1-\u01B3\u01B5\u01B7-\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A-\u023B\u023D-\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E-\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9-\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0-\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E-\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D-\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A/.source,
      // Letter, Titlecase
      /\u01C5\u01C8\u01CB\u01F2\u1F88-\u1F8F\u1F98-\u1F9F\u1FA8-\u1FAF\u1FBC\u1FCC\u1FFC/.source,
      // Letter, Lowercase
      /\u0061-\u007A\u00B5\u00DF-\u00F6\u00F8-\u00FF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137-\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148-\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C-\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA-\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9-\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC-\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF-\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F-\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0-\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB-\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE-\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6-\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FC7\u1FD0-\u1FD3\u1FD6-\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6-\u1FF7\u210A\u210E-\u210F\u2113\u212F\u2134\u2139\u213C-\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65-\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73-\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3-\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A/.source,
      // Letter, Modifier
      /\u02B0-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0374\u037A\u0559\u0640\u06E5-\u06E6\u07F4-\u07F5\u07FA\u081A\u0824\u0828\u0971\u0E46\u0EC6\u10FC\u17D7\u1843\u1AA7\u1C78-\u1C7D\u1D2C-\u1D6A\u1D78\u1D9B-\u1DBF\u2071\u207F\u2090-\u209C\u2C7C-\u2C7D\u2D6F\u2E2F\u3005\u3031-\u3035\u303B\u309D-\u309E\u30FC-\u30FE\uA015\uA4F8-\uA4FD\uA60C\uA67F\uA69C-\uA69D\uA717-\uA71F\uA770\uA788\uA7F8-\uA7F9\uA9CF\uA9E6\uAA70\uAADD\uAAF3-\uAAF4\uAB5C-\uAB5F\uFF70\uFF9E-\uFF9F/.source,
      // Letter, Other
      /\u00AA\u00BA\u01BB\u01C0-\u01C3\u0294\u05D0-\u05EA\u05F0-\u05F2\u0620-\u063F\u0641-\u064A\u066E-\u066F\u0671-\u06D3\u06D5\u06EE-\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u0800-\u0815\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0972-\u0980\u0985-\u098C\u098F-\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC-\u09DD\u09DF-\u09E1\u09F0-\u09F1\u0A05-\u0A0A\u0A0F-\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32-\u0A33\u0A35-\u0A36\u0A38-\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2-\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0-\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F-\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32-\u0B33\u0B35-\u0B39\u0B3D\u0B5C-\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99-\u0B9A\u0B9C\u0B9E-\u0B9F\u0BA3-\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60-\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0-\u0CE1\u0CF1-\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32-\u0E33\u0E40-\u0E45\u0E81-\u0E82\u0E84\u0E87-\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA-\u0EAB\u0EAD-\u0EB0\u0EB2-\u0EB3\u0EBD\u0EC0-\u0EC4\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065-\u1066\u106E-\u1070\u1075-\u1081\u108E\u10D0-\u10FA\u10FD-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17DC\u1820-\u1842\u1844-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE-\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C77\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5-\u1CF6\u2135-\u2138\u2D30-\u2D67\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3006\u303C\u3041-\u3096\u309F\u30A1-\u30FA\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA014\uA016-\uA48C\uA4D0-\uA4F7\uA500-\uA60B\uA610-\uA61F\uA62A-\uA62B\uA66E\uA6A0-\uA6E5\uA78F\uA7F7\uA7FB-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9E0-\uA9E4\uA9E7-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA6F\uAA71-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5-\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADC\uAAE0-\uAAEA\uAAF2\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40-\uFB41\uFB43-\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF66-\uFF6F\uFF71-\uFF9D\uFFA0-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC/.source
    ].join("") + "]");
    var BibtexParser = class {
      constructor() {
        this.pos = 0;
        this.entries = 0;
        this.parsing = null;
        this.chunks = [];
      }
      parse(input, options = {}) {
        this.max_entries = options.max_entries || 0;
        this.input = input;
        this.bibtex();
        return this.chunks;
      }
      async parseAsync(input, options = {}) {
        this.max_entries = options.max_entries || 0;
        this.input = input;
        await this.bibtexAsync();
        return this.chunks;
      }
      isWhitespace(s, horizontalOnly = false) {
        return s === " " || s === "	" || !horizontalOnly && (s === "\r" || s === "\n");
      }
      match(s) {
        this.skipWhitespace();
        if (this.input.substr(this.pos, s.length) !== s) {
          throw new ParseError(`Token mismatch, expected ${JSON.stringify(s)}, found ${JSON.stringify(this.input.substr(this.pos, 20))}...`, this);
        }
        this.pos += s.length;
        this.skipWhitespace();
      }
      tryMatch(s) {
        this.skipWhitespace();
        return this.input.substr(this.pos, s.length) === s;
      }
      skipWhitespace() {
        while (this.pos < this.input.length && this.isWhitespace(this.input[this.pos]))
          this.pos++;
        if (this.input[this.pos] === "%") {
          while (this.pos < this.input.length && this.input[this.pos] !== "\n")
            this.pos++;
          while (this.pos < this.input.length && this.isWhitespace(this.input[this.pos]))
            this.pos++;
        }
      }
      value_braces() {
        let bracecount = 0;
        this.match("{");
        const start = this.pos;
        let math = false;
        while (true) {
          switch (this.input[this.pos]) {
            case "\\":
              this.pos += 1;
              break;
            case "{":
              bracecount++;
              break;
            case "}":
              if (bracecount === 0) {
                if (math)
                  throw new ParseError("Unclosed math section", this);
                this.pos++;
                return this.input.substring(start, this.pos - 1);
              }
              bracecount--;
              break;
            case "$":
              math = !math;
              break;
          }
          this.pos++;
          if (this.pos >= this.input.length) {
            throw new ParseError(`Unterminated brace-value ${JSON.stringify(this.input.substr(start, 20))}`, this);
          }
        }
      }
      value_quotes() {
        this.match('"');
        const start = this.pos;
        let bracecount = 0;
        while (true) {
          switch (this.input[this.pos]) {
            case "\\":
              this.pos += 1;
              break;
            case "{":
              bracecount++;
              break;
            case "}":
              bracecount--;
              break;
            case '"':
              if (bracecount <= 0) {
                this.pos++;
                return this.input.substring(start, this.pos - 1);
              }
          }
          this.pos++;
          if (this.pos >= this.input.length) {
            throw new ParseError(`Unterminated quote-value ${JSON.stringify(this.input.substr(start, 20))}`, this);
          }
        }
      }
      single_value() {
        if (this.tryMatch("{")) {
          return this.value_braces();
        } else if (this.tryMatch('"')) {
          return this.value_quotes();
        } else {
          return this.key();
        }
      }
      value() {
        const values = [];
        values.push(this.single_value());
        while (this.tryMatch("#")) {
          this.match("#");
          values.push(this.single_value());
        }
        return values.join("");
      }
      key(allowUnicode = false) {
        const start = this.pos;
        while (true) {
          if (this.pos === this.input.length) {
            throw new ParseError("Runaway key", this);
          }
          if (this.input[this.pos].match(/['a-zA-Z0-9&;_:\\./-]/)) {
            this.pos++;
          } else if (allowUnicode && this.input[this.pos].match(letter)) {
            this.pos++;
          } else {
            return this.input.substring(start, this.pos);
          }
        }
      }
      key_equals_value() {
        const key = this.key();
        if (!this.tryMatch("=")) {
          throw new ParseError(`... = value expected, equals sign missing: ${JSON.stringify(this.input.substr(this.pos, 20))}...`, this);
        }
        this.match("=");
        const val = this.value();
        return [key, val];
      }
      key_value_list() {
        this.key_equals_value();
        while (this.tryMatch(",")) {
          this.match(",");
          if (this.tryMatch("}")) {
            break;
          }
          this.key_equals_value();
        }
      }
      entry(_d) {
        this.parsing = this.key(true);
        this.match(",");
        this.key_value_list();
      }
      directive() {
        this.match("@");
        return `@${this.key()}`.toLowerCase();
      }
      string() {
        this.key_equals_value();
      }
      preamble() {
        this.value();
      }
      comment() {
        while (this.isWhitespace(this.input[this.pos], true))
          this.pos++;
        if (this.input[this.pos] === "{") {
          this.value_braces();
          return;
        }
        while (this.input[this.pos] !== "\n" && this.pos < this.input.length)
          this.pos++;
      }
      /*
      private progress() {
        const progress = Math.round((this.pos / this.input.length * 100) / 5) * 5 // eslint-disable-line no-magic-numbers
        if (this._progress !== progress) {
          this._progress = progress
          process.stdout.write(` (${this._progress}%) `)
        }
      }
      */
      hasMore() {
        if (this.max_entries && this.entries >= this.max_entries)
          return false;
        return this.pos < this.input.length;
      }
      bibtex() {
        while (this.hasMore()) {
          this.parseNext();
        }
      }
      bibtexAsync() {
        return this.hasMore() ? new Promise((resolve) => resolve(this.parseNext())).then(() => this.bibtexAsync()) : Promise.resolve(null);
      }
      parseNext() {
        const chunk = {
          offset: {
            pos: this.pos,
            line: this.input.substring(0, this.pos).split("\n").length - 1
          },
          error: null,
          text: null
        };
        this.skipWhitespace();
        if (this.pos >= this.input.length)
          return;
        let guard = "";
        try {
          const d = this.directive();
          switch (d) {
            case "@string":
              this.match("{");
              this.string();
              this.match("}");
              chunk.stringDeclaration = true;
              break;
            case "@preamble":
              this.match("{");
              this.preamble();
              this.match("}");
              chunk.preamble = true;
              break;
            case "@comment":
              this.comment();
              chunk.comment = true;
              break;
            default:
              if (this.tryMatch("{")) {
                guard = "{}";
              } else if (this.tryMatch("(")) {
                guard = "()";
              } else {
                throw new ParseError(`Token mismatch, expected '{' or '(', found ${JSON.stringify(this.input.substr(this.pos, 20))}...`, this);
              }
              this.match(guard[0]);
              this.entry(d);
              this.match(guard[1]);
              chunk.entry = true;
              this.entries++;
              break;
          }
        } catch (err) {
          if (err.name !== "ParseError")
            throw err;
          chunk.error = err.message;
          this.pos = chunk.offset.pos + 1;
          while (this.pos < this.input.length && this.input[this.pos] !== "@")
            this.pos++;
        }
        const text = this.input.substring(chunk.offset.pos, this.pos);
        const last = this.chunks.length - 1;
        if (chunk.error && this.chunks.length && this.chunks[last].error) {
          this.chunks[last].text += text;
        } else {
          chunk.text = text;
          this.chunks.push(chunk);
        }
      }
    };
    function parse(input, options = {}) {
      return new BibtexParser().parse(input, options);
    }
    exports.parse = parse;
    exports.promises = {
      async parse(input, options = {}) {
        return await new BibtexParser().parseAsync(input, options);
      }
    };
  }
});

// node_modules/@retorquere/bibtex-parser/jabref.js
var require_jabref = __commonJS({
  "node_modules/@retorquere/bibtex-parser/jabref.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.parse = void 0;
    function decode(s, sep = ";") {
      s = s.replace(/\r?\n/g, "");
      let pos = 0;
      const records = [""];
      while (pos < s.length) {
        switch (s[pos]) {
          case "\\":
            pos++;
            records[0] += s[pos];
            break;
          case sep:
            records.unshift("");
            break;
          default:
            records[0] += s[pos];
        }
        pos++;
      }
      return records.reverse().filter((record) => record);
    }
    function parse(comments) {
      const result = {
        root: [],
        groups: {}
      };
      const levels = [];
      const decoded = {
        fileDirectory: null,
        groupsversion: null,
        groupstree: null,
        grouping: null,
        databaseType: null
      };
      comments = comments.filter((comment) => {
        const m = comment.match(/^jabref-meta:\s*([^:]+):([\s\S]*)/);
        if (m) {
          decoded[m[1]] = decode(m[2]);
          return false;
        }
        return true;
      });
      if (decoded.groupsversion)
        result.groupsversion = parseInt(decoded.groupsversion[0].trim()) || decoded.groupsversion[0];
      if (decoded.fileDirectory)
        result.fileDirectory = decoded.fileDirectory[0];
      if (decoded.databaseType)
        result.databaseType = decoded.databaseType[0];
      for (const tree of ["groupstree", "grouping"]) {
        if (!decoded[tree])
          continue;
        for (const encoded of decoded[tree]) {
          const fields = decode(encoded);
          const level_type_name = decode(fields.shift(), ":");
          const m = /^([0-9]+) (.+)/.exec(level_type_name[0]);
          if (!m)
            break;
          const level = parseInt(m[1]);
          const type = m[2];
          if (type === "AllEntriesGroup")
            continue;
          const name = level_type_name[1];
          const intersection = decode(fields.shift())[0];
          const keys = tree === "grouping" ? [] : fields.map((field) => decode(field)[0]);
          const group = {
            name,
            entries: keys,
            groups: []
          };
          result.groups[name] = result.groups[name] || group;
          if (levels.length < level) {
            levels.push(group);
          } else {
            levels[level - 1] = group;
          }
          if (level === 1) {
            result.root.push(group);
          } else {
            const parent = levels[level - 2];
            switch (intersection) {
              case "0":
                break;
              case "1":
                group.entries = group.entries.filter((key) => parent.entries.includes(key));
                break;
              case "2":
                group.entries = group.entries.concat(parent.entries.filter((key) => !group.entries.includes(key)));
                break;
            }
            levels[level - 2].groups.push(group);
          }
        }
      }
      return { comments, jabref: result };
    }
    exports.parse = parse;
  }
});

// node_modules/unicode2latex/tables/ascii.json
var require_ascii = __commonJS({
  "node_modules/unicode2latex/tables/ascii.json"(exports, module2) {
    module2.exports = {
      "#": { math: "\\#", text: "\\#" },
      $: { math: "\\$", text: "\\$" },
      "%": { math: "\\%", text: "\\%" },
      "&": { math: "\\&", text: "\\&" },
      "/\u200B": { text: "\\slash", commandspacer: true },
      "<": { math: "<" },
      ">": { math: ">" },
      "\\": { math: "\\backslash", text: "\\textbackslash", commandspacer: true },
      "^": { math: "\\sphat", text: "\\^" },
      _: { math: "\\_", text: "\\_" },
      i\uFE20a\uFE21: { text: "\\t{ia}" },
      "{": { math: "\\lbrace", text: "\\{" },
      "}": { math: "\\rbrace", text: "\\}" },
      "~": { math: "\\sptilde", text: "\\textasciitilde", commandspacer: true },
      "\xA0": { math: "~", space: true, text: "~" },
      "\xA1": { text: "\\textexclamdown", commandspacer: true },
      "\xA2": { math: "\\cent", text: "\\textcent", commandspacer: true, textpackages: ["textcomp"] },
      "\xA3": { math: "\\pounds", text: "\\textsterling", commandspacer: true, textpackages: ["textcomp"] },
      "\xA4": { text: "\\textcurrency", commandspacer: true, textpackages: ["textcomp"] },
      "\xA5": { math: "\\yen", text: "\\textyen", commandspacer: true, textpackages: ["textcomp"] },
      "\xA6": { text: "\\textbrokenbar", commandspacer: true, textpackages: ["textcomp"] },
      "\xA7": { text: "\\textsection", commandspacer: true, textpackages: ["textcomp"] },
      "\xA8": { math: "\\spddot", text: "\\textasciidieresis", commandspacer: true },
      "\xA9": { text: "\\textcopyright", commandspacer: true, textpackages: ["textcomp"] },
      \u00AA: { text: "\\textordfeminine", commandspacer: true, textpackages: ["textcomp"] },
      "\xAB": { text: "\\guillemotleft", commandspacer: true },
      "\xAC": { math: "\\lnot" },
      "\xAD": { math: "\\-", text: "\\-" },
      "\xAE": { math: "\\circledR", text: "\\textregistered", commandspacer: true, textpackages: ["textcomp"] },
      "\xAF": { text: "\\textasciimacron", commandspacer: true },
      "\xB0": { math: "^\\circ", text: "\\textdegree", commandspacer: true, textpackages: ["textcomp"] },
      "\xB1": { math: "\\pm" },
      "\xB2": { math: "^{2}" },
      "\xB3": { math: "^{3}" },
      "\xB4": { text: "\\textasciiacute", commandspacer: true },
      \u00B5: { text: "\\textmu", commandspacer: true },
      "\xB6": { text: "\\textparagraph", commandspacer: true, textpackages: ["textcomp"] },
      "\xB7": { math: "\\cdot" },
      "\xB8": { text: "\\c", commandspacer: true },
      "\xB9": { math: "^{1}" },
      \u00BA: { text: "\\textordmasculine", commandspacer: true, textpackages: ["textcomp"] },
      "\xBB": { text: "\\guillemotright", commandspacer: true },
      "\xBC": { math: "\\frac{1}{4}" },
      "\xBD": { math: "\\frac{1}{2}" },
      "\xBE": { math: "\\frac{3}{4}" },
      "\xBF": { text: "\\textquestiondown", commandspacer: true },
      \u00C0: { text: "\\`A" },
      \u00C1: { text: "\\'A" },
      \u00C2: { text: "\\^A" },
      \u00C3: { text: "\\~A" },
      \u00C4: { text: '\\"A' },
      \u00C5: { text: "\\AA", commandspacer: true },
      \u00C6: { text: "\\AE", commandspacer: true },
      \u00C7: { text: "\\c{C}" },
      \u00C8: { text: "\\`E" },
      \u00C9: { text: "\\'E" },
      \u00CA: { text: "\\^E" },
      \u00CB: { text: '\\"E' },
      \u00CC: { text: "\\`I" },
      \u00CD: { text: "\\'I" },
      \u00CE: { text: "\\^I" },
      \u00CF: { text: '\\"I' },
      \u00D0: { text: "\\DH", commandspacer: true },
      \u00D1: { text: "\\~N" },
      \u00D2: { text: "\\`O" },
      \u00D3: { text: "\\'O" },
      \u00D4: { text: "\\^O" },
      \u00D5: { text: "\\~O" },
      \u00D6: { text: '\\"O' },
      "\xD7": { math: "\\times", text: "\\texttimes", commandspacer: true },
      \u00D8: { text: "\\O", commandspacer: true },
      \u00D9: { text: "\\`U" },
      \u00DA: { text: "\\'U" },
      \u00DB: { text: "\\^U" },
      \u00DC: { text: '\\"U' },
      \u00DD: { text: "\\'Y" },
      \u00DE: { text: "\\TH", commandspacer: true },
      \u00DF: { text: "\\ss", commandspacer: true },
      \u00E0: { text: "\\`a" },
      \u00E1: { text: "\\'a" },
      \u00E2: { text: "\\^a" },
      \u00E3: { text: "\\~a" },
      \u00E4: { text: '\\"a' },
      \u00E5: { text: "\\aa", commandspacer: true },
      \u00E6: { text: "\\ae", commandspacer: true },
      \u00E7: { text: "\\c{c}" },
      \u00E8: { text: "\\`e" },
      \u00E9: { text: "\\'e" },
      \u00EA: { text: "\\^e" },
      \u00EB: { text: '\\"e' },
      \u00EC: { text: "\\`i" },
      \u00ED: { text: "\\'i" },
      \u00EE: { text: "\\^i" },
      \u00EF: { text: '\\"i' },
      \u00F0: { math: "\\eth", mathpackages: ["amssymb", "arevmath"], text: "\\dh", commandspacer: true },
      \u00F1: { text: "\\~n" },
      \u00F2: { text: "\\`o" },
      \u00F3: { text: "\\'o" },
      \u00F4: { text: "\\^o" },
      \u00F5: { text: "\\~o" },
      \u00F6: { text: '\\"o' },
      "\xF7": { math: "\\div" },
      \u00F8: { text: "\\o", commandspacer: true },
      \u00F9: { text: "\\`u" },
      \u00FA: { text: "\\'u" },
      \u00FB: { text: "\\^u" },
      \u00FC: { text: '\\"u' },
      \u00FD: { text: "\\'y" },
      \u00FE: { text: "\\th", commandspacer: true },
      \u00FF: { text: '\\"y' },
      \u0100: { text: "\\=A" },
      \u0101: { text: "\\=a" },
      \u0102: { text: "\\u{A}" },
      \u0103: { text: "\\u{a}" },
      \u0104: { text: "\\k{A}" },
      \u0105: { text: "\\k{a}" },
      \u0106: { text: "\\'C" },
      \u0107: { text: "\\'c" },
      \u0108: { text: "\\^C" },
      \u0109: { text: "\\^c" },
      \u010A: { text: "\\.C" },
      \u010B: { text: "\\.c" },
      \u010C: { text: "\\v{C}" },
      \u010D: { text: "\\v{c}" },
      \u010E: { text: "\\v{D}" },
      \u010F: { text: "\\v{d}" },
      \u0110: { text: "\\DJ", commandspacer: true },
      \u0111: { text: "\\dj", commandspacer: true },
      \u0112: { text: "\\=E" },
      \u0113: { text: "\\=e" },
      \u0114: { text: "\\u{E}" },
      \u0115: { text: "\\u{e}" },
      \u0116: { text: "\\.E" },
      \u0117: { text: "\\.e" },
      \u0118: { text: "\\k{E}" },
      \u0119: { text: "\\k{e}" },
      \u011A: { text: "\\v{E}" },
      \u011B: { text: "\\v{e}" },
      \u011C: { text: "\\^G" },
      \u011D: { text: "\\^g" },
      \u011E: { text: "\\u{G}" },
      \u011F: { text: "\\u{g}" },
      \u0120: { text: "\\.G" },
      \u0121: { text: "\\.g" },
      \u0122: { text: "\\c{G}" },
      \u0123: { text: "\\c{g}" },
      \u0124: { text: "\\^H" },
      \u0125: { text: "\\^h" },
      \u0126: { text: "{\\fontencoding{LELA}\\selectfont\\char40}" },
      \u0127: { math: "\\Elzxh" },
      \u0128: { text: "\\~I" },
      \u0129: { text: "\\~i" },
      \u012A: { text: "\\=I" },
      \u012B: { text: "\\=i" },
      \u012C: { text: "\\u{I}" },
      \u012D: { text: "{\\u \\i}" },
      \u012E: { text: "\\k{I}" },
      \u012F: { text: "\\k{i}" },
      \u0130: { text: "\\.I" },
      \u0131: { math: "\\imath", text: "\\i", commandspacer: true },
      \u0132: { text: "IJ" },
      \u0133: { text: "ij" },
      \u0134: { text: "\\^J" },
      \u0135: { text: "\\^\\j", commandspacer: true },
      \u0136: { text: "\\c{K}" },
      \u0137: { text: "\\c{k}" },
      \u0138: { text: "{\\fontencoding{LELA}\\selectfont\\char91}" },
      \u0139: { text: "\\'L" },
      \u013A: { text: "\\'l" },
      \u013B: { text: "\\c{L}" },
      \u013C: { text: "\\c{l}" },
      \u013D: { text: "\\v{L}" },
      \u013E: { text: "\\v{l}" },
      \u013F: { text: "{\\fontencoding{LELA}\\selectfont\\char201}" },
      \u0140: { text: "{\\fontencoding{LELA}\\selectfont\\char202}" },
      \u0141: { text: "\\L", commandspacer: true },
      \u0142: { text: "\\l", commandspacer: true },
      \u0143: { text: "\\'N" },
      \u0144: { text: "\\'n" },
      \u0145: { text: "\\c{N}" },
      \u0146: { text: "\\c{n}" },
      \u0147: { text: "\\v{N}" },
      \u0148: { text: "\\v{n}" },
      \u0149: { text: "'n" },
      \u014A: { text: "\\NG", commandspacer: true },
      \u014B: { text: "\\ng", commandspacer: true },
      \u014C: { text: "\\=O" },
      \u014D: { text: "\\=o" },
      \u014E: { text: "\\u{O}" },
      \u014F: { text: "\\u{o}" },
      \u0150: { text: "\\H{O}" },
      \u0151: { text: "\\H{o}" },
      \u0152: { text: "\\OE", commandspacer: true },
      \u0153: { text: "\\oe", commandspacer: true },
      \u0154: { text: "\\'R" },
      \u0155: { text: "\\'r" },
      \u0156: { text: "\\c{R}" },
      \u0157: { text: "\\c{r}" },
      \u0158: { text: "\\v{R}" },
      \u0159: { text: "\\v{r}" },
      \u015A: { text: "\\'S" },
      \u015B: { text: "\\'s" },
      \u015C: { text: "\\^S" },
      \u015D: { text: "\\^s" },
      \u015E: { text: "\\c{S}" },
      \u015F: { text: "\\c{s}" },
      \u0160: { text: "\\v{S}" },
      \u0161: { text: "\\v{s}" },
      \u0162: { text: "\\c{T}" },
      \u0163: { text: "\\c{t}" },
      \u0164: { text: "\\v{T}" },
      \u0165: { text: "\\v{t}" },
      \u0166: { text: "{\\fontencoding{LELA}\\selectfont\\char47}" },
      \u0167: { text: "{\\fontencoding{LELA}\\selectfont\\char63}" },
      \u0168: { text: "\\~U" },
      \u0169: { text: "\\~u" },
      \u016A: { text: "\\=U" },
      \u016B: { text: "\\=u" },
      \u016C: { text: "\\u{U}" },
      \u016D: { text: "\\u{u}" },
      \u016E: { text: "\\r{U}" },
      \u016F: { text: "\\r{u}" },
      \u0170: { text: "\\H{U}" },
      \u0171: { text: "\\H{u}" },
      \u0172: { text: "\\k{U}" },
      \u0173: { text: "\\k{u}" },
      \u0174: { text: "\\^W" },
      \u0175: { text: "\\^w" },
      \u0176: { text: "\\^Y" },
      \u0177: { text: "\\^y" },
      \u0178: { text: '\\"Y' },
      \u0179: { text: "\\'Z" },
      \u017A: { text: "\\'z" },
      \u017B: { text: "\\.Z" },
      \u017C: { text: "\\.z" },
      \u017D: { text: "\\v{Z}" },
      \u017E: { text: "\\v{z}" },
      \u017F: { text: "s" },
      \u0192: { math: "f" },
      \u0195: { text: "\\texthvlig", commandspacer: true },
      \u019E: { text: "\\textnrleg", commandspacer: true },
      \u01AA: { text: "\\textesh", commandspacer: true },
      \u01B5: { math: "\\Zbar" },
      \u01BA: { text: "{\\fontencoding{LELA}\\selectfont\\char195}" },
      \u01C2: { text: "\\textdoublepipe", commandspacer: true },
      \u01CD: { text: "\\v{A}" },
      \u01CE: { text: "\\v{a}" },
      \u01CF: { text: "\\v{I}" },
      \u01D0: { text: "\\v{i}" },
      \u01D1: { text: "\\v{O}" },
      \u01D2: { text: "\\v{o}" },
      \u01D3: { text: "\\v{U}" },
      \u01D4: { text: "\\v{u}" },
      \u01E6: { text: "\\v{G}" },
      \u01E7: { text: "\\v{g}" },
      \u01E8: { text: "\\v{K}" },
      \u01E9: { text: "\\v{k}" },
      \u01EA: { text: "\\k{O}" },
      \u01EB: { text: "\\k{o}" },
      \u01F0: { text: "\\v{j}" },
      \u01F4: { text: "\\'G" },
      \u01F5: { text: "\\'g" },
      \u0228: { text: "\\c{E}" },
      \u0229: { text: "\\c{e}" },
      "\u0237": { math: "\\jmath" },
      \u0250: { math: "\\Elztrna" },
      \u0252: { math: "\\Elztrnsa" },
      \u0254: { math: "\\Elzopeno" },
      \u0256: { math: "\\Elzrtld" },
      \u0258: { text: "{\\fontencoding{LEIP}\\selectfont\\char61}" },
      \u0259: { math: "\\Elzschwa" },
      \u025B: { math: "\\varepsilon" },
      \u0261: { text: "g" },
      \u0263: { math: "\\Elzpgamma" },
      \u0264: { math: "\\Elzpbgam" },
      \u0265: { math: "\\Elztrnh" },
      \u026C: { math: "\\Elzbtdl" },
      \u026D: { math: "\\Elzrtll" },
      \u026F: { math: "\\Elztrnm" },
      \u0270: { math: "\\Elztrnmlr" },
      \u0271: { math: "\\Elzltlmr" },
      \u0272: { text: "\\Elzltln", commandspacer: true },
      \u0273: { math: "\\Elzrtln" },
      \u0277: { math: "\\Elzclomeg" },
      \u0278: { text: "\\textphi", commandspacer: true },
      \u0279: { math: "\\Elztrnr" },
      \u027A: { math: "\\Elztrnrl" },
      \u027B: { math: "\\Elzrttrnr" },
      \u027C: { math: "\\Elzrl" },
      \u027D: { math: "\\Elzrtlr" },
      \u027E: { math: "\\Elzfhr" },
      \u027F: { text: "{\\fontencoding{LEIP}\\selectfont\\char202}" },
      \u0282: { math: "\\Elzrtls" },
      \u0283: { math: "\\Elzesh" },
      \u0287: { math: "\\Elztrnt" },
      \u0288: { math: "\\Elzrtlt" },
      \u028A: { math: "\\Elzpupsil" },
      \u028B: { math: "\\Elzpscrv" },
      \u028C: { math: "\\Elzinvv" },
      \u028D: { math: "\\Elzinvw" },
      \u028E: { math: "\\Elztrny" },
      \u0290: { math: "\\Elzrtlz" },
      \u0292: { math: "\\Elzyogh" },
      \u0294: { math: "\\Elzglst" },
      \u0295: { math: "\\Elzreglst" },
      \u0296: { math: "\\Elzinglst" },
      \u029E: { text: "\\textturnk", commandspacer: true },
      \u02A4: { math: "\\Elzdyogh" },
      \u02A7: { math: "\\Elztesh" },
      \u02B0: { math: "^{h}", text: "\\textsuperscript{h}" },
      \u02B2: { math: "^{j}", text: "\\textsuperscript{j}" },
      \u02B3: { math: "^{r}", text: "\\textsuperscript{r}" },
      \u02B7: { math: "^{w}", text: "\\textsuperscript{w}" },
      \u02B8: { math: "^{y}", text: "\\textsuperscript{y}" },
      "\u02B9": { text: "'" },
      \u02BB: { text: "'" },
      \u02BC: { text: "'" },
      \u02BD: { text: "'" },
      \u02BF: { text: "\\lasp", commandspacer: true, textpackages: ["mathscinet"] },
      "\u02C6": { text: "\\textasciicircum", commandspacer: true },
      "\u02C7": { text: "\\textasciicaron", commandspacer: true },
      "\u02C8": { math: "\\Elzverts" },
      "\u02C9": { text: "-" },
      "\u02CC": { math: "\\Elzverti" },
      \u02D0: { math: "\\Elzlmrk" },
      \u02D1: { math: "\\Elzhlmrk" },
      "\u02D2": { math: "\\Elzsbrhr" },
      "\u02D3": { math: "\\Elzsblhr" },
      "\u02D4": { math: "\\Elzrais" },
      "\u02D5": { math: "\\Elzlow" },
      "\u02D8": { text: "\\textasciibreve", commandspacer: true },
      "\u02D9": { text: "\\textperiodcentered", commandspacer: true, textpackages: ["textcomp"] },
      "\u02DA": { text: "\\r{}" },
      "\u02DB": { text: "\\k{}" },
      "\u02DC": { text: "\\texttildelow", commandspacer: true },
      "\u02DD": { text: "\\H{}" },
      \u02E1: { math: "^{l}", text: "\\textsuperscript{l}" },
      \u02E2: { math: "^{s}", text: "\\textsuperscript{s}" },
      \u02E3: { math: "^{x}", text: "\\textsuperscript{x}" },
      "\u02E5": { text: "\\tone{55}" },
      "\u02E6": { text: "\\tone{44}" },
      "\u02E7": { text: "\\tone{33}" },
      "\u02E8": { text: "\\tone{22}" },
      "\u02E9": { text: "\\tone{11}" },
      "\u0300": { math: "\\grave", combiningdiacritic: true, text: "\\`" },
      "\u0300\u0304": { text: "\\textgravemacron", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0304\u0300": { text: "\\textgravemacron", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0300\u0307": { text: "\\textgravedot", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0307\u0300": { text: "\\textgravedot", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0301": { math: "\\acute", combiningdiacritic: true, text: "\\'" },
      "\u0301\u0304": { text: "\\textacutemacron", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0304\u0301": { text: "\\textacutemacron", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0301\u030C": { text: "\\textacutewedge", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u030C\u0301": { text: "\\textacutewedge", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0302": { math: "\\hat", combiningdiacritic: true, text: "\\^" },
      "\u0302\u0307": { text: "\\textcircumdot", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0307\u0302": { text: "\\textcircumdot", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0303": { math: "\\tilde", combiningdiacritic: true, text: "\\~" },
      "\u0303\u0307": { text: "\\texttildedot", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0307\u0303": { text: "\\texttildedot", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0304": { math: "\\bar", combiningdiacritic: true, text: "\\=" },
      "\u0305": { math: "\\overline", combiningdiacritic: true },
      "\u0306": { math: "\\breve", combiningdiacritic: true, text: "\\u", commandspacer: true },
      "\u0306\u0304": { text: "\\textbrevemacron", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0304\u0306": { text: "\\textbrevemacron", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0307": { math: "\\dot", combiningdiacritic: true, text: "\\." },
      "\u0307\u0301": { text: "\\textdotacute", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0301\u0307": { text: "\\textdotacute", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0307\u0306": { text: "\\textdotbreve", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0306\u0307": { text: "\\textdotbreve", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0308": { math: "\\ddot", combiningdiacritic: true, text: '\\"' },
      "\u0309": { math: "\\ovhook" },
      "\u030A": { math: "\\mathring", combiningdiacritic: true, text: "\\r", commandspacer: true },
      "\u030A\u0304": { text: "\\textringmacron", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0304\u030A": { text: "\\textringmacron", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u030B": { text: "\\H", commandspacer: true, combiningdiacritic: true },
      "\u030C": { math: "\\check", text: "\\v", commandspacer: true, combiningdiacritic: true },
      "\u030D": { text: "\\textvbaraccent", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u030E": { text: "\\textdoublevbaraccent", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u030F": { text: "\\textdoublegrave", commandspacer: true, combiningdiacritic: true },
      "\u0310": { text: "\\textdotbreve", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0311": { text: "{\\fontencoding{LECO}\\selectfont\\char177}" },
      "\u0312": { math: "\\oturnedcomma" },
      "\u0315": { math: "\\ocommatopright" },
      "\u0316": { text: "\\textsubgrave", commandspacer: true, combiningdiacritic: true },
      "\u0318": { text: "\\textadvancing", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0319": { text: "\\textretracting", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u031A": { math: "\\droang", text: "\\textcorner", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u031C": { text: "\\textsublhalfring", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u031D": { text: "\\textraising", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u031E": { text: "\\textlowering", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u031F": { text: "\\textsubplus", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0321": { math: "\\Elzpalh" },
      "\u0322": { text: "\\Elzrh", commandspacer: true },
      "\u0323": { text: "\\d", commandspacer: true, combiningdiacritic: true },
      "\u0324": { text: "\\textsubumlaut", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0325": { text: "\\textsubring", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0327": { text: "\\c", commandspacer: true, combiningdiacritic: true },
      "\u0328": { text: "\\k", commandspacer: true, combiningdiacritic: true },
      "\u0329": { text: "\\textsyllabic", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u032A": { math: "\\Elzsbbrg", text: "\\textsubbridge", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u032B": { text: "{\\fontencoding{LECO}\\selectfont\\char203}" },
      "\u032C": { text: "\\textsubwedge", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u032F": { text: "\\textsubarch", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0330": { math: "\\utilde", text: "\\textsubtilde", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0331": { math: "\\underbar", combiningdiacritic: true, text: "\\textsubbar", commandspacer: true, textpackages: ["tipa"] },
      "\u0332": { math: "\\underline" },
      "\u0334": { text: "\\textsuperimposetilde", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0335": { text: "\\Elzxl", commandspacer: true },
      "\u0336": { text: "\\Elzbar", commandspacer: true },
      "\u0337": { text: "{\\fontencoding{LECO}\\selectfont\\char215}" },
      "\u0338": { math: "\\not" },
      "\u0339": { text: "\\textsubrhalfring", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u033A": { text: "\\textinvsubbridge", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u033B": { text: "\\textsubsquare", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u033C": { text: "\\textseagull", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u033D": { text: "\\textovercross", commandspacer: true, combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0361": { text: "{\\fontencoding{LECO}\\selectfont\\char225}" },
      "\u0374": { text: "'" },
      "\u0375": { text: "," },
      "\u037E": { text: ";" },
      \u0386: { text: "\\'A" },
      \u0388: { text: "\\'E" },
      \u0389: { text: "\\'H" },
      \u038A: { text: "{\\'{}I}" },
      \u038C: { text: "{\\'{}O}" },
      \u038E: { math: "\\mathrm{'Y}" },
      \u038F: { math: "\\mathrm{'\\Omega}" },
      \u0390: { math: "\\acute{\\ddot{\\iota}}" },
      \u0391: { math: "A" },
      \u0392: { math: "B" },
      \u0393: { math: "\\Gamma" },
      \u0394: { math: "\\Delta" },
      \u0395: { math: "E" },
      \u0396: { math: "Z" },
      \u0397: { math: "H" },
      \u0398: { math: "\\Theta" },
      \u0399: { math: "I" },
      \u039A: { math: "K" },
      \u039B: { math: "\\Lambda" },
      \u039C: { math: "M" },
      \u039D: { math: "N" },
      \u039E: { math: "\\Xi" },
      \u039F: { math: "O" },
      \u03A0: { math: "\\Pi" },
      \u03A1: { math: "P" },
      \u03A3: { math: "\\Sigma" },
      \u03A4: { math: "T" },
      \u03A5: { math: "\\Upsilon" },
      \u03A6: { math: "\\Phi" },
      \u03A7: { math: "X" },
      \u03A8: { math: "\\Psi" },
      \u03A9: { math: "\\Omega" },
      \u03AA: { math: "\\mathrm{\\ddot{I}}" },
      \u03AB: { math: "\\mathrm{\\ddot{Y}}" },
      \u03AC: { text: "{\\'$\\alpha$}" },
      \u03AD: { math: "\\acute{\\epsilon}" },
      \u03AE: { math: "\\acute{\\eta}" },
      \u03AF: { math: "\\acute{\\iota}" },
      \u03B0: { math: "\\acute{\\ddot{\\upsilon}}" },
      \u03B1: { math: "\\alpha" },
      \u03B2: { math: "\\beta" },
      \u03B3: { math: "\\gamma" },
      \u03B4: { math: "\\delta" },
      \u03B5: { math: "\\epsilon" },
      \u03B6: { math: "\\zeta" },
      \u03B7: { math: "\\eta" },
      \u03B8: { math: "\\theta", text: "\\texttheta", commandspacer: true },
      \u03B9: { math: "\\iota" },
      \u03BA: { math: "\\kappa" },
      \u03BB: { math: "\\lambda" },
      \u03BC: { math: "\\mu" },
      \u03BD: { math: "\\nu" },
      \u03BE: { math: "\\xi" },
      \u03BF: { math: "o" },
      \u03C0: { math: "\\pi" },
      \u03C1: { math: "\\rho" },
      \u03C2: { math: "\\varsigma" },
      \u03C3: { math: "\\sigma" },
      \u03C4: { math: "\\tau" },
      \u03C5: { math: "\\upsilon" },
      \u03C6: { math: "\\varphi" },
      \u03C7: { math: "\\chi" },
      \u03C8: { math: "\\psi" },
      \u03C9: { math: "\\omega" },
      \u03CA: { math: "\\ddot{\\iota}" },
      \u03CB: { math: "\\ddot{\\upsilon}" },
      \u03CC: { text: "\\'o" },
      \u03CD: { math: "\\acute{\\upsilon}" },
      \u03CE: { math: "\\acute{\\omega}" },
      \u03D0: { math: "\\varbeta", text: "\\Pisymbol{ppi022}{87}" },
      \u03D1: { math: "\\vartheta", text: "\\textvartheta", commandspacer: true },
      \u03D2: { math: "\\Upsilon" },
      \u03D5: { math: "\\phi" },
      \u03D6: { math: "\\varpi" },
      "\u03D8": { math: "\\Qoppa" },
      "\u03D9": { math: "\\qoppa" },
      \u03DA: { math: "\\Stigma" },
      \u03DB: { math: "\\stigma" },
      \u03DC: { math: "\\Digamma" },
      \u03DD: { math: "\\digamma" },
      \u03DE: { math: "\\Koppa" },
      \u03DF: { math: "\\koppa" },
      \u03E0: { math: "\\Sampi" },
      \u03E1: { math: "\\sampi" },
      \u03F0: { math: "\\varkappa" },
      \u03F1: { math: "\\varrho" },
      "\u03F4": { math: "\\upvarTheta", text: "\\textTheta", commandspacer: true },
      "\u03F5": { math: "\\epsilon" },
      "\u03F6": { math: "\\backepsilon" },
      \u0401: { text: "\\cyrchar\\CYRYO", commandspacer: true },
      \u0402: { text: "\\cyrchar\\CYRDJE", commandspacer: true },
      \u0403: { text: "\\cyrchar{\\'\\CYRG}" },
      \u0404: { text: "\\cyrchar\\CYRIE", commandspacer: true },
      \u0405: { text: "\\cyrchar\\CYRDZE", commandspacer: true },
      \u0406: { text: "\\cyrchar\\CYRII", commandspacer: true },
      \u0407: { text: "\\cyrchar\\CYRYI", commandspacer: true },
      \u0408: { text: "\\cyrchar\\CYRJE", commandspacer: true },
      \u0409: { text: "\\cyrchar\\CYRLJE", commandspacer: true },
      \u040A: { text: "\\cyrchar\\CYRNJE", commandspacer: true },
      \u040B: { text: "\\cyrchar\\CYRTSHE", commandspacer: true },
      \u040C: { text: "\\cyrchar{\\'\\CYRK}" },
      \u040E: { text: "\\cyrchar\\CYRUSHRT", commandspacer: true },
      \u040F: { text: "\\cyrchar\\CYRDZHE", commandspacer: true },
      \u0410: { text: "\\cyrchar\\CYRA", commandspacer: true },
      \u0411: { text: "\\cyrchar\\CYRB", commandspacer: true },
      \u0412: { text: "\\cyrchar\\CYRV", commandspacer: true },
      \u0413: { text: "\\cyrchar\\CYRG", commandspacer: true },
      \u0414: { text: "\\cyrchar\\CYRD", commandspacer: true },
      \u0415: { text: "\\cyrchar\\CYRE", commandspacer: true },
      \u0416: { text: "\\cyrchar\\CYRZH", commandspacer: true },
      \u0417: { text: "\\cyrchar\\CYRZ", commandspacer: true },
      \u0418: { text: "\\cyrchar\\CYRI", commandspacer: true },
      \u0419: { text: "\\cyrchar\\CYRISHRT", commandspacer: true },
      \u041A: { text: "\\cyrchar\\CYRK", commandspacer: true },
      \u041B: { text: "\\cyrchar\\CYRL", commandspacer: true },
      \u041C: { text: "\\cyrchar\\CYRM", commandspacer: true },
      \u041D: { text: "\\cyrchar\\CYRN", commandspacer: true },
      \u041E: { text: "\\cyrchar\\CYRO", commandspacer: true },
      \u041F: { text: "\\cyrchar\\CYRP", commandspacer: true },
      \u0420: { text: "\\cyrchar\\CYRR", commandspacer: true },
      \u0421: { text: "\\cyrchar\\CYRS", commandspacer: true },
      \u0422: { text: "\\cyrchar\\CYRT", commandspacer: true },
      \u0423: { text: "\\cyrchar\\CYRU", commandspacer: true },
      \u0424: { text: "\\cyrchar\\CYRF", commandspacer: true },
      \u0425: { text: "\\cyrchar\\CYRH", commandspacer: true },
      \u0426: { text: "\\cyrchar\\CYRC", commandspacer: true },
      \u0427: { text: "\\cyrchar\\CYRCH", commandspacer: true },
      \u0428: { text: "\\cyrchar\\CYRSH", commandspacer: true },
      \u0429: { text: "\\cyrchar\\CYRSHCH", commandspacer: true },
      \u042A: { text: "\\cyrchar\\CYRHRDSN", commandspacer: true },
      \u042B: { text: "\\cyrchar\\CYRERY", commandspacer: true },
      \u042C: { text: "\\cyrchar\\CYRSFTSN", commandspacer: true },
      \u042D: { text: "\\cyrchar\\CYREREV", commandspacer: true },
      \u042E: { text: "\\cyrchar\\CYRYU", commandspacer: true },
      \u042F: { text: "\\cyrchar\\CYRYA", commandspacer: true },
      \u0430: { text: "\\cyrchar\\cyra", commandspacer: true },
      \u0431: { text: "\\cyrchar\\cyrb", commandspacer: true },
      \u0432: { text: "\\cyrchar\\cyrv", commandspacer: true },
      \u0433: { text: "\\cyrchar\\cyrg", commandspacer: true },
      \u0434: { text: "\\cyrchar\\cyrd", commandspacer: true },
      \u0435: { text: "\\cyrchar\\cyre", commandspacer: true },
      \u0436: { text: "\\cyrchar\\cyrzh", commandspacer: true },
      \u0437: { text: "\\cyrchar\\cyrz", commandspacer: true },
      \u0438: { text: "\\cyrchar\\cyri", commandspacer: true },
      \u0439: { text: "\\cyrchar\\cyrishrt", commandspacer: true },
      \u043A: { text: "\\cyrchar\\cyrk", commandspacer: true },
      \u043B: { text: "\\cyrchar\\cyrl", commandspacer: true },
      \u043C: { text: "\\cyrchar\\cyrm", commandspacer: true },
      \u043D: { text: "\\cyrchar\\cyrn", commandspacer: true },
      \u043E: { text: "\\cyrchar\\cyro", commandspacer: true },
      \u043F: { text: "\\cyrchar\\cyrp", commandspacer: true },
      \u0440: { text: "\\cyrchar\\cyrr", commandspacer: true },
      \u0441: { text: "\\cyrchar\\cyrs", commandspacer: true },
      \u0442: { text: "\\cyrchar\\cyrt", commandspacer: true },
      \u0443: { text: "\\cyrchar\\cyru", commandspacer: true },
      \u0444: { text: "\\cyrchar\\cyrf", commandspacer: true },
      \u0445: { text: "\\cyrchar\\cyrh", commandspacer: true },
      \u0446: { text: "\\cyrchar\\cyrc", commandspacer: true },
      \u0447: { text: "\\cyrchar\\cyrch", commandspacer: true },
      \u0448: { text: "\\cyrchar\\cyrsh", commandspacer: true },
      \u0449: { text: "\\cyrchar\\cyrshch", commandspacer: true },
      \u044A: { text: "\\cyrchar\\cyrhrdsn", commandspacer: true },
      \u044B: { text: "\\cyrchar\\cyrery", commandspacer: true },
      \u044C: { text: "\\cyrchar\\cyrsftsn", commandspacer: true },
      \u044D: { text: "\\cyrchar\\cyrerev", commandspacer: true },
      \u044E: { text: "\\cyrchar\\cyryu", commandspacer: true },
      \u044F: { text: "\\cyrchar\\cyrya", commandspacer: true },
      \u0451: { text: "\\cyrchar\\cyryo", commandspacer: true },
      \u0452: { text: "\\cyrchar\\cyrdje", commandspacer: true },
      \u0453: { text: "\\cyrchar{\\'\\cyrg}" },
      \u0454: { text: "\\cyrchar\\cyrie", commandspacer: true },
      \u0455: { text: "\\cyrchar\\cyrdze", commandspacer: true },
      \u0456: { text: "\\cyrchar\\cyrii", commandspacer: true },
      \u0457: { text: "\\cyrchar\\cyryi", commandspacer: true },
      \u0458: { text: "\\cyrchar\\cyrje", commandspacer: true },
      \u0459: { text: "\\cyrchar\\cyrlje", commandspacer: true },
      \u045A: { text: "\\cyrchar\\cyrnje", commandspacer: true },
      \u045B: { text: "\\cyrchar\\cyrtshe", commandspacer: true },
      \u045C: { text: "\\cyrchar{\\'\\cyrk}" },
      \u045E: { text: "\\cyrchar\\cyrushrt", commandspacer: true },
      \u045F: { text: "\\cyrchar\\cyrdzhe", commandspacer: true },
      \u0460: { text: "\\cyrchar\\CYROMEGA", commandspacer: true },
      \u0461: { text: "\\cyrchar\\cyromega", commandspacer: true },
      \u0462: { text: "\\cyrchar\\CYRYAT", commandspacer: true },
      \u0464: { text: "\\cyrchar\\CYRIOTE", commandspacer: true },
      \u0465: { text: "\\cyrchar\\cyriote", commandspacer: true },
      \u0466: { text: "\\cyrchar\\CYRLYUS", commandspacer: true },
      \u0467: { text: "\\cyrchar\\cyrlyus", commandspacer: true },
      \u0468: { text: "\\cyrchar\\CYRIOTLYUS", commandspacer: true },
      \u0469: { text: "\\cyrchar\\cyriotlyus", commandspacer: true },
      \u046A: { text: "\\cyrchar\\CYRBYUS", commandspacer: true },
      \u046C: { text: "\\cyrchar\\CYRIOTBYUS", commandspacer: true },
      \u046D: { text: "\\cyrchar\\cyriotbyus", commandspacer: true },
      \u046E: { text: "\\cyrchar\\CYRKSI", commandspacer: true },
      \u046F: { text: "\\cyrchar\\cyrksi", commandspacer: true },
      \u0470: { text: "\\cyrchar\\CYRPSI", commandspacer: true },
      \u0471: { text: "\\cyrchar\\cyrpsi", commandspacer: true },
      \u0472: { text: "\\cyrchar\\CYRFITA", commandspacer: true },
      \u0474: { text: "\\cyrchar\\CYRIZH", commandspacer: true },
      \u0478: { text: "\\cyrchar\\CYRUK", commandspacer: true },
      \u0479: { text: "\\cyrchar\\cyruk", commandspacer: true },
      \u047A: { text: "\\cyrchar\\CYROMEGARND", commandspacer: true },
      \u047B: { text: "\\cyrchar\\cyromegarnd", commandspacer: true },
      \u047C: { text: "\\cyrchar\\CYROMEGATITLO", commandspacer: true },
      \u047D: { text: "\\cyrchar\\cyromegatitlo", commandspacer: true },
      \u047E: { text: "\\cyrchar\\CYROT", commandspacer: true },
      \u047F: { text: "\\cyrchar\\cyrot", commandspacer: true },
      \u0480: { text: "\\cyrchar\\CYRKOPPA", commandspacer: true },
      \u0481: { text: "\\cyrchar\\cyrkoppa", commandspacer: true },
      "\u0482": { text: "\\cyrchar\\cyrthousands", commandspacer: true },
      "\u0488": { text: "\\cyrchar\\cyrhundredthousands", commandspacer: true },
      "\u0489": { text: "\\cyrchar\\cyrmillions", commandspacer: true },
      \u048C: { text: "\\cyrchar\\CYRSEMISFTSN", commandspacer: true },
      \u048D: { text: "\\cyrchar\\cyrsemisftsn", commandspacer: true },
      \u048E: { text: "\\cyrchar\\CYRRTICK", commandspacer: true },
      \u048F: { text: "\\cyrchar\\cyrrtick", commandspacer: true },
      \u0490: { text: "\\cyrchar\\CYRGUP", commandspacer: true },
      \u0491: { text: "\\cyrchar\\cyrgup", commandspacer: true },
      \u0492: { text: "\\cyrchar\\CYRGHCRS", commandspacer: true },
      \u0493: { text: "\\cyrchar\\cyrghcrs", commandspacer: true },
      \u0494: { text: "\\cyrchar\\CYRGHK", commandspacer: true },
      \u0495: { text: "\\cyrchar\\cyrghk", commandspacer: true },
      \u0496: { text: "\\cyrchar\\CYRZHDSC", commandspacer: true },
      \u0497: { text: "\\cyrchar\\cyrzhdsc", commandspacer: true },
      \u0498: { text: "\\cyrchar\\CYRZDSC", commandspacer: true },
      \u0499: { text: "\\cyrchar\\cyrzdsc", commandspacer: true },
      \u049A: { text: "\\cyrchar\\CYRKDSC", commandspacer: true },
      \u049B: { text: "\\cyrchar\\cyrkdsc", commandspacer: true },
      \u049C: { text: "\\cyrchar\\CYRKVCRS", commandspacer: true },
      \u049D: { text: "\\cyrchar\\cyrkvcrs", commandspacer: true },
      \u049E: { text: "\\cyrchar\\CYRKHCRS", commandspacer: true },
      \u049F: { text: "\\cyrchar\\cyrkhcrs", commandspacer: true },
      \u04A0: { text: "\\cyrchar\\CYRKBEAK", commandspacer: true },
      \u04A1: { text: "\\cyrchar\\cyrkbeak", commandspacer: true },
      \u04A2: { text: "\\cyrchar\\CYRNDSC", commandspacer: true },
      \u04A3: { text: "\\cyrchar\\cyrndsc", commandspacer: true },
      \u04A4: { text: "\\cyrchar\\CYRNG", commandspacer: true },
      \u04A5: { text: "\\cyrchar\\cyrng", commandspacer: true },
      \u04A6: { text: "\\cyrchar\\CYRPHK", commandspacer: true },
      \u04A7: { text: "\\cyrchar\\cyrphk", commandspacer: true },
      \u04A8: { text: "\\cyrchar\\CYRABHHA", commandspacer: true },
      \u04A9: { text: "\\cyrchar\\cyrabhha", commandspacer: true },
      \u04AA: { text: "\\cyrchar\\CYRSDSC", commandspacer: true },
      \u04AB: { text: "\\cyrchar\\cyrsdsc", commandspacer: true },
      \u04AC: { text: "\\cyrchar\\CYRTDSC", commandspacer: true },
      \u04AD: { text: "\\cyrchar\\cyrtdsc", commandspacer: true },
      \u04AE: { text: "\\cyrchar\\CYRY", commandspacer: true },
      \u04AF: { text: "\\cyrchar\\cyry", commandspacer: true },
      \u04B0: { text: "\\cyrchar\\CYRYHCRS", commandspacer: true },
      \u04B1: { text: "\\cyrchar\\cyryhcrs", commandspacer: true },
      \u04B2: { text: "\\cyrchar\\CYRHDSC", commandspacer: true },
      \u04B3: { text: "\\cyrchar\\cyrhdsc", commandspacer: true },
      \u04B4: { text: "\\cyrchar\\CYRTETSE", commandspacer: true },
      \u04B5: { text: "\\cyrchar\\cyrtetse", commandspacer: true },
      \u04B6: { text: "\\cyrchar\\CYRCHRDSC", commandspacer: true },
      \u04B7: { text: "\\cyrchar\\cyrchrdsc", commandspacer: true },
      \u04B8: { text: "\\cyrchar\\CYRCHVCRS", commandspacer: true },
      \u04B9: { text: "\\cyrchar\\cyrchvcrs", commandspacer: true },
      \u04BA: { text: "\\cyrchar\\CYRSHHA", commandspacer: true },
      \u04BB: { text: "\\cyrchar\\cyrshha", commandspacer: true },
      \u04BC: { text: "\\cyrchar\\CYRABHCH", commandspacer: true },
      \u04BD: { text: "\\cyrchar\\cyrabhch", commandspacer: true },
      \u04BE: { text: "\\cyrchar\\CYRABHCHDSC", commandspacer: true },
      \u04BF: { text: "\\cyrchar\\cyrabhchdsc", commandspacer: true },
      \u04C0: { text: "\\cyrchar\\CYRpalochka", commandspacer: true },
      \u04C3: { text: "\\cyrchar\\CYRKHK", commandspacer: true },
      \u04C4: { text: "\\cyrchar\\cyrkhk", commandspacer: true },
      \u04C7: { text: "\\cyrchar\\CYRNHK", commandspacer: true },
      \u04C8: { text: "\\cyrchar\\cyrnhk", commandspacer: true },
      \u04CB: { text: "\\cyrchar\\CYRCHLDSC", commandspacer: true },
      \u04CC: { text: "\\cyrchar\\cyrchldsc", commandspacer: true },
      \u04D4: { text: "\\cyrchar\\CYRAE", commandspacer: true },
      \u04D5: { text: "\\cyrchar\\cyrae", commandspacer: true },
      \u04D8: { text: "\\cyrchar\\CYRSCHWA", commandspacer: true },
      \u04D9: { text: "\\cyrchar\\cyrschwa", commandspacer: true },
      \u04E0: { text: "\\cyrchar\\CYRABHDZE", commandspacer: true },
      \u04E1: { text: "\\cyrchar\\cyrabhdze", commandspacer: true },
      \u04E8: { text: "\\cyrchar\\CYROTLD", commandspacer: true },
      \u04E9: { text: "\\cyrchar\\cyrotld", commandspacer: true },
      "\u0871": { math: "\\\\backslash" },
      "\u1D43": { math: "^{a}", text: "\\textsuperscript{a}" },
      "\u1D47": { math: "^{b}", text: "\\textsuperscript{b}" },
      "\u1D48": { math: "^{d}", text: "\\textsuperscript{d}" },
      "\u1D49": { math: "^{e}", text: "\\textsuperscript{e}" },
      "\u1D4D": { math: "^{g}", text: "\\textsuperscript{g}" },
      "\u1D4F": { math: "^{k}", text: "\\textsuperscript{k}" },
      "\u1D50": { math: "^{m}", text: "\\textsuperscript{m}" },
      "\u1D52": { math: "^{o}", text: "\\textsuperscript{o}" },
      "\u1D56": { math: "^{p}", text: "\\textsuperscript{p}" },
      "\u1D57": { math: "^{t}", text: "\\textsuperscript{t}" },
      "\u1D58": { math: "^{u}", text: "\\textsuperscript{u}" },
      "\u1D5B": { math: "^{v}", text: "\\textsuperscript{v}" },
      "\u1D9C": { math: "^{c}", text: "\\textsuperscript{c}" },
      "\u1DA0": { math: "^{f}", text: "\\textsuperscript{f}" },
      "\u1DBB": { math: "^{z}", text: "\\textsuperscript{z}" },
      \u1E02: { text: "\\.B" },
      \u1E03: { text: "\\.b" },
      \u1E04: { text: "\\d{B}" },
      \u1E05: { text: "\\d{b}" },
      \u1E06: { text: "\\b{B}" },
      \u1E07: { text: "\\b{b}" },
      \u1E0A: { text: "\\.D" },
      \u1E0B: { text: "\\.d" },
      \u1E0C: { text: "\\d{D}" },
      \u1E0D: { text: "\\d{d}" },
      \u1E0E: { text: "\\b{D}" },
      \u1E0F: { text: "\\b{d}" },
      \u1E10: { text: "\\c{D}" },
      \u1E11: { text: "\\c{d}" },
      \u1E1C: { text: "\\c{\\u{E}}" },
      \u1E1D: { text: "\\c{\\u{e}}" },
      \u1E1E: { text: "\\.F" },
      \u1E1F: { text: "\\.f" },
      \u1E20: { text: "\\=G" },
      \u1E21: { text: "\\=g" },
      \u1E22: { text: "\\.H" },
      \u1E23: { text: "\\.h" },
      \u1E24: { text: "\\d{H}" },
      \u1E25: { text: "\\d{h}" },
      \u1E26: { text: '\\"H' },
      \u1E27: { text: '\\"h' },
      \u1E28: { text: "\\c{H}" },
      \u1E29: { text: "\\c{h}" },
      \u1E30: { text: "\\'K" },
      \u1E31: { text: "\\'k" },
      \u1E32: { text: "\\d{K}" },
      \u1E33: { text: "\\d{k}" },
      \u1E34: { text: "\\b{K}" },
      \u1E35: { text: "\\b{k}" },
      \u1E36: { text: "\\d{L}" },
      \u1E37: { text: "\\d{l}" },
      \u1E3A: { text: "\\b{L}" },
      \u1E3B: { text: "\\b{l}" },
      \u1E3E: { text: "\\'M" },
      \u1E3F: { text: "\\'m" },
      \u1E40: { text: "\\.M" },
      \u1E41: { text: "\\.m" },
      \u1E42: { text: "\\d{M}" },
      \u1E43: { text: "\\d{m}" },
      \u1E44: { text: "\\.N" },
      \u1E45: { text: "\\.n" },
      \u1E46: { text: "\\d{N}" },
      \u1E47: { text: "\\d{n}" },
      \u1E48: { text: "\\b{N}" },
      \u1E49: { text: "\\b{n}" },
      \u1E54: { text: "\\'P" },
      \u1E55: { text: "\\'p" },
      \u1E56: { text: "\\.P" },
      \u1E57: { text: "\\.p" },
      \u1E58: { text: "\\.R" },
      \u1E59: { text: "\\.r" },
      \u1E5A: { text: "\\d{R}" },
      \u1E5B: { text: "\\d{r}" },
      \u1E5E: { text: "\\b{R}" },
      \u1E5F: { text: "\\b{r}" },
      \u1E60: { text: "\\.S" },
      \u1E61: { text: "\\.s" },
      \u1E62: { text: "\\d{S}" },
      \u1E63: { text: "\\d{s}" },
      \u1E6A: { text: "\\.T" },
      \u1E6B: { text: "\\.t" },
      \u1E6C: { text: "\\d{T}" },
      \u1E6D: { text: "\\d{t}" },
      \u1E6E: { text: "\\b{T}" },
      \u1E6F: { text: "\\b{t}" },
      \u1E7C: { text: "\\~V" },
      \u1E7D: { text: "\\~v" },
      \u1E7E: { text: "\\d{V}" },
      \u1E7F: { text: "\\d{v}" },
      \u1E80: { text: "\\`W" },
      \u1E81: { text: "\\`w" },
      \u1E82: { text: "\\'W" },
      \u1E83: { text: "\\'w" },
      \u1E84: { text: '\\"W' },
      \u1E85: { text: '\\"w' },
      \u1E86: { text: "\\.W" },
      \u1E87: { text: "\\.w" },
      \u1E88: { text: "\\d{W}" },
      \u1E89: { text: "\\d{w}" },
      \u1E8A: { text: "\\.X" },
      \u1E8B: { text: "\\.x" },
      \u1E8C: { text: '\\"X' },
      \u1E8D: { text: '\\"x' },
      \u1E8E: { text: "\\.Y" },
      \u1E8F: { text: "\\.y" },
      \u1E90: { text: "\\^Z" },
      \u1E91: { text: "\\^z" },
      \u1E92: { text: "\\d{Z}" },
      \u1E93: { text: "\\d{z}" },
      \u1E94: { text: "\\b{Z}" },
      \u1E95: { text: "\\b{z}" },
      \u1E96: { text: "\\b{h}" },
      \u1E97: { text: '\\"t' },
      \u1E98: { text: "\\r{w}" },
      \u1E99: { text: "\\r{y}" },
      \u1EA0: { text: "\\d{A}" },
      \u1EA1: { text: "\\d{a}" },
      \u1EB8: { text: "\\d{E}" },
      \u1EB9: { text: "\\d{e}" },
      \u1EBC: { text: "\\~E" },
      \u1EBD: { text: "\\~e" },
      \u1ECA: { text: "\\d{I}" },
      \u1ECB: { text: "\\d{i}" },
      \u1ECC: { text: "\\d{O}" },
      \u1ECD: { text: "\\d{o}" },
      \u1EE4: { text: "\\d{U}" },
      \u1EE5: { text: "\\d{u}" },
      \u1EF2: { text: "\\`Y" },
      \u1EF3: { text: "\\`y" },
      \u1EF4: { text: "\\d{Y}" },
      \u1EF5: { text: "\\d{y}" },
      \u1EF8: { text: "\\~Y" },
      \u1EF9: { text: "\\~y" },
      "\u2000": { text: "\\hspace{0.6em}", space: true },
      "\u2001": { math: "\\quad", space: true },
      "\u2002": { text: "\\hspace{0.6em}", space: true },
      "\u2003": { math: "\\quad", space: true },
      "\u2004": { text: "\\;", space: true },
      "\u2005": { text: "\\hspace{0.25em}", space: true },
      "\u2006": { text: "\\hspace{0.166em}", space: true },
      "\u2007": { text: "\\hphantom{0}", space: true },
      "\u2008": { text: "\\hphantom{,}", space: true },
      "\u2009": { text: "\\,", space: true },
      "\u200A": { math: "\\mkern1mu", space: true },
      "\u200B": { text: "\\hspace{0pt}", space: true },
      "\u200C": { text: "{\\aftergroup\\ignorespaces}" },
      "\u2010": { text: "-" },
      "\u2011": { text: "-" },
      "\u2012": { text: "-" },
      "\u2013": { text: "\\textendash", commandspacer: true },
      "\u2014": { text: "\\textemdash", commandspacer: true },
      "\u2015": { math: "\\horizbar", text: "\\rule{1em}{1pt}" },
      "\u2016": { math: "\\Vert" },
      "\u2017": { math: "\\twolowline" },
      "\u2018": { text: "`" },
      "\u2019": { text: "'" },
      "\u201A": { text: "," },
      "\u201B": { math: "\\Elzreapos" },
      "\u201C": { text: "``" },
      "\u201D": { text: "''" },
      "\u201E": { text: ",," },
      "\u201F": { text: "\\quotedblbase", commandspacer: true },
      "\u2020": { math: "\\dagger", text: "\\textdagger", commandspacer: true, textpackages: ["textcomp"] },
      "\u2021": { math: "\\ddagger", text: "\\textdaggerdbl", commandspacer: true, textpackages: ["textcomp"] },
      "\u2022": { math: "\\bullet", text: "\\textbullet", commandspacer: true, textpackages: ["textcomp"] },
      "\u2023": { text: ">" },
      "\u2024": { text: "." },
      "\u2025": { math: "\\enleadertwodots", text: ".." },
      "\u2026": { math: "\\ldots", text: "\\ldots", commandspacer: true },
      "\u2027": { text: "-" },
      "\u202F": { text: "\\,", space: true },
      "\u2030": { text: "\\textperthousand", commandspacer: true, textpackages: ["textcomp"] },
      "\u2031": { text: "\\textpertenthousand", commandspacer: true, textpackages: ["textcomp"] },
      "\u2032": { math: "{'}" },
      "\u2033": { math: "{''}" },
      "\u2034": { math: "{'''}" },
      "\u2035": { math: "\\backprime" },
      "\u2036": { math: "\\backdprime" },
      "\u2037": { math: "\\backtrprime" },
      "\u2038": { math: "\\caretinsert" },
      "\u2039": { text: "\\guilsinglleft", commandspacer: true },
      "\u203A": { text: "\\guilsinglright", commandspacer: true },
      "\u203C": { math: "\\Exclam" },
      "\u203E": { text: "-" },
      "\u2043": { math: "\\hyphenbullet" },
      "\u2044": { math: "\\fracslash" },
      "\u2047": { math: "\\Question" },
      "\u2048": { text: "?!" },
      "\u2049": { text: "!?" },
      "\u204A": { text: "7" },
      "\u2050": { math: "\\closure" },
      "\u2057": { math: "''''" },
      "\u205F": { math: "\\:", space: true, text: "\\:" },
      "\u2060": { text: "\\nolinebreak", commandspacer: true },
      "\u2070": { math: "^{0}" },
      "\u2071": { math: "^{i}", text: "\\textsuperscript{i}" },
      "\u2074": { math: "^{4}" },
      "\u2075": { math: "^{5}" },
      "\u2076": { math: "^{6}" },
      "\u2077": { math: "^{7}" },
      "\u2078": { math: "^{8}" },
      "\u2079": { math: "^{9}" },
      "\u207A": { math: "^{+}" },
      "\u207B": { math: "^{-}" },
      "\u207C": { math: "^{=}" },
      "\u207D": { math: "^{(}" },
      "\u207E": { math: "^{)}" },
      \u207F: { math: "^{n}", text: "\\textsuperscript{n}" },
      "\u2080": { math: "_{0}" },
      "\u2081": { math: "_{1}" },
      "\u2082": { math: "_{2}" },
      "\u2083": { math: "_{3}" },
      "\u2084": { math: "_{4}" },
      "\u2085": { math: "_{5}" },
      "\u2086": { math: "_{6}" },
      "\u2087": { math: "_{7}" },
      "\u2088": { math: "_{8}" },
      "\u2089": { math: "_{9}" },
      "\u208A": { math: "_{+}" },
      "\u208B": { math: "_{-}" },
      "\u208C": { math: "_{=}" },
      "\u208D": { math: "_{(}" },
      "\u208E": { math: "_{)}" },
      "\u2090": { math: "_{a}", text: "\\textsubscript{a}" },
      "\u2091": { math: "_{e}", text: "\\textsubscript{e}" },
      "\u2092": { math: "_{o}", text: "\\textsubscript{o}" },
      "\u2093": { math: "_{x}", text: "\\textsubscript{x}" },
      "\u2094": { text: "\\textsubscript{\\textschwa}", textpackages: ["tipa"] },
      "\u2095": { math: "_{h}", text: "\\textsubscript{h}" },
      "\u2096": { math: "_{k}", text: "\\textsubscript{k}" },
      "\u2097": { math: "_{l}", text: "\\textsubscript{l}" },
      "\u2098": { math: "_{m}", text: "\\textsubscript{m}" },
      "\u2099": { math: "_{n}", text: "\\textsubscript{n}" },
      "\u209A": { math: "_{p}", text: "\\textsubscript{p}" },
      "\u209B": { math: "_{s}", text: "\\textsubscript{s}" },
      "\u209C": { math: "_{t}", text: "\\textsubscript{t}" },
      "\u20A7": { text: "\\ensuremath{\\Elzpes}" },
      "\u20AC": { math: "\\euro", text: "\\texteuro", commandspacer: true },
      "\u20D0": { math: "\\lvec" },
      "\u20D1": { math: "\\rightharpoonup", mathpackages: ["amsmath", "amssymb"] },
      "\u20D2": { math: "\\vertoverlay" },
      "\u20D6": { math: "\\LVec" },
      "\u20D7": { math: "\\vec" },
      "\u20DB": { math: "\\dddot" },
      "\u20DC": { math: "\\ddddot" },
      "\u20DD": { math: "\\enclosecircle" },
      "\u20DE": { math: "\\enclosesquare" },
      "\u20DF": { math: "\\enclosediamond" },
      "\u20E1": { math: "\\overleftrightarrow" },
      "\u20E4": { math: "\\enclosetriangle" },
      "\u20E7": { math: "\\annuity" },
      "\u20E8": { math: "\\threeunderdot" },
      "\u20E9": { math: "\\widebridgeabove" },
      "\u20EC": { math: "\\underrightharpoondown" },
      "\u20ED": { math: "\\underleftharpoondown" },
      "\u20EE": { math: "\\underleftarrow" },
      "\u20EF": { math: "\\underrightarrow" },
      "\u20F0": { math: "\\asteraccent" },
      "\u2100": { text: "a/c" },
      "\u2101": { text: "a/s" },
      \u2102: { math: "\\mathbb{C}" },
      "\u2103": { text: "\\textcelsius", commandspacer: true },
      "\u2105": { text: "c/o" },
      "\u2106": { text: "c/u" },
      \u2107: { math: "\\Euler" },
      "\u2109": { text: "F" },
      \u210A: { math: "\\mathscr{g}" },
      \u210B: { math: "\\mathscr{H}" },
      \u210C: { math: "\\mathfrak{H}" },
      \u210D: { math: "\\mathbb{H}" },
      \u210E: { math: "\\Planckconst" },
      \u210F: { math: "\\hslash" },
      \u2110: { math: "\\mathscr{I}" },
      \u2111: { math: "\\mathfrak{I}" },
      \u2112: { math: "\\mathscr{L}" },
      \u2113: { math: "\\mathscr{l}" },
      \u2115: { math: "\\mathbb{N}" },
      "\u2116": { text: "\\cyrchar\\textnumero", commandspacer: true },
      "\u2117": { text: "\\textcircledP", commandspacer: true },
      "\u2118": { math: "\\wp" },
      \u2119: { math: "\\mathbb{P}" },
      \u211A: { math: "\\mathbb{Q}" },
      \u211B: { math: "\\mathscr{R}" },
      \u211C: { math: "\\mathfrak{R}" },
      \u211D: { math: "\\mathbb{R}" },
      "\u211E": { math: "\\Elzxrat" },
      "\u2120": { text: "\\textservicemark", commandspacer: true },
      "\u2121": { text: "TEL" },
      "\u2122": { text: "\\texttrademark", commandspacer: true, textpackages: ["textcomp"] },
      \u2124: { math: "\\mathbb{Z}" },
      \u2126: { math: "\\Omega" },
      "\u2127": { math: "\\mho" },
      \u2128: { math: "\\mathfrak{Z}" },
      "\u2129": { text: "\\textriota", commandspacer: true },
      \u212A: { text: "K" },
      \u212B: { math: "\\Angstroem", text: "\\AA", commandspacer: true },
      \u212C: { math: "\\mathscr{B}" },
      \u212D: { math: "\\mathfrak{C}" },
      "\u212E": { text: "\\textestimated", commandspacer: true },
      \u212F: { math: "\\mathscr{e}" },
      \u2130: { math: "\\mathscr{E}" },
      \u2131: { math: "\\mathscr{F}" },
      "\u2132": { math: "\\Finv" },
      \u2133: { math: "\\mathscr{M}" },
      \u2134: { math: "\\mathscr{o}" },
      \u2135: { math: "\\aleph" },
      \u2136: { math: "\\beth" },
      \u2137: { math: "\\gimel" },
      \u2138: { math: "\\daleth" },
      "\u213C": { math: "\\mathbb{\\pi}" },
      "\u213D": { math: "\\mathbb{\\gamma}" },
      "\u213E": { math: "\\mathbb{\\Gamma}" },
      "\u213F": { math: "\\mathbb{\\Pi}" },
      "\u2140": { math: "\\mathbb{\\Sigma}" },
      "\u2141": { math: "\\Game" },
      "\u2142": { math: "\\sansLturned" },
      "\u2143": { math: "\\sansLmirrored" },
      "\u2144": { math: "\\Yup" },
      "\u2145": { math: "\\CapitalDifferentialD" },
      "\u2146": { math: "\\DifferentialD" },
      "\u2147": { math: "\\ExponetialE" },
      "\u2148": { math: "\\ComplexI" },
      "\u2149": { math: "\\ComplexJ" },
      "\u214A": { math: "\\PropertyLine" },
      "\u214B": { math: "\\invamp" },
      "\u2150": { math: "\\frac{1}{7}" },
      "\u2151": { math: "\\frac{1}{9}" },
      "\u2152": { math: "\\frac{1}{10}" },
      "\u2153": { math: "\\frac{1}{3}" },
      "\u2154": { math: "\\frac{2}{3}" },
      "\u2155": { math: "\\frac{1}{5}" },
      "\u2156": { math: "\\frac{2}{5}" },
      "\u2157": { math: "\\frac{3}{5}" },
      "\u2158": { math: "\\frac{4}{5}" },
      "\u2159": { math: "\\frac{1}{6}" },
      "\u215A": { math: "\\frac{5}{6}" },
      "\u215B": { math: "\\frac{1}{8}" },
      "\u215C": { math: "\\frac{3}{8}" },
      "\u215D": { math: "\\frac{5}{8}" },
      "\u215E": { math: "\\frac{7}{8}" },
      "\u215F": { math: "\\frac{1}" },
      "\u2160": { text: "I" },
      "\u2161": { text: "II" },
      "\u2162": { text: "III" },
      "\u2163": { text: "IV" },
      "\u2164": { text: "V" },
      "\u2165": { text: "VI" },
      "\u2166": { text: "VII" },
      "\u2167": { text: "VIII" },
      "\u2168": { text: "IX" },
      "\u2169": { text: "X" },
      "\u216A": { text: "XI" },
      "\u216B": { text: "XII" },
      "\u216C": { text: "L" },
      "\u216D": { text: "C" },
      "\u216E": { text: "D" },
      "\u216F": { text: "M" },
      "\u2170": { text: "i" },
      "\u2171": { text: "ii" },
      "\u2172": { text: "iii" },
      "\u2173": { text: "iv" },
      "\u2174": { text: "v" },
      "\u2175": { text: "vi" },
      "\u2176": { text: "vii" },
      "\u2177": { text: "viii" },
      "\u2178": { text: "ix" },
      "\u2179": { text: "x" },
      "\u217A": { text: "xi" },
      "\u217B": { text: "xii" },
      "\u217C": { text: "l" },
      "\u217D": { text: "c" },
      "\u217E": { text: "d" },
      "\u217F": { text: "m" },
      "\u2189": { math: "\\frac{0}{3}" },
      "\u2190": { math: "\\leftarrow" },
      "\u2191": { math: "\\uparrow" },
      "\u2192": { math: "\\rightarrow", text: "\\textrightarrow", commandspacer: true, textpackages: ["textcomp"] },
      "\u2193": { math: "\\downarrow" },
      "\u2194": { math: "\\leftrightarrow" },
      "\u2195": { math: "\\updownarrow" },
      "\u2196": { math: "\\nwarrow" },
      "\u2197": { math: "\\nearrow" },
      "\u2198": { math: "\\searrow" },
      "\u2199": { math: "\\swarrow" },
      "\u219A": { math: "\\nleftarrow" },
      "\u219B": { math: "\\nrightarrow" },
      "\u219C": { math: "\\arrowwaveleft" },
      "\u219D": { math: "\\arrowwaveright" },
      "\u219E": { math: "\\twoheadleftarrow" },
      "\u219F": { math: "\\twoheaduparrow" },
      "\u21A0": { math: "\\twoheadrightarrow" },
      "\u21A1": { math: "\\twoheaddownarrow" },
      "\u21A2": { math: "\\leftarrowtail" },
      "\u21A3": { math: "\\rightarrowtail" },
      "\u21A4": { math: "\\mapsfrom" },
      "\u21A5": { math: "\\MapsUp" },
      "\u21A6": { math: "\\mapsto" },
      "\u21A7": { math: "\\MapsDown" },
      "\u21A8": { math: "\\updownarrowbar" },
      "\u21A9": { math: "\\hookleftarrow" },
      "\u21AA": { math: "\\hookrightarrow" },
      "\u21AB": { math: "\\looparrowleft" },
      "\u21AC": { math: "\\looparrowright" },
      "\u21AD": { math: "\\leftrightsquigarrow" },
      "\u21AE": { math: "\\nleftrightarrow" },
      "\u21AF": { math: "\\lightning" },
      "\u21B0": { math: "\\Lsh" },
      "\u21B1": { math: "\\Rsh" },
      "\u21B2": { math: "\\dlsh" },
      "\u21B3": { text: "\\reflectbox{\\carriagereturn}", textpackages: ["graphics", "unicode-math"] },
      "\u21B4": { math: "\\linefeed" },
      "\u21B5": { math: "\\carriagereturn" },
      "\u21B6": { math: "\\curvearrowleft" },
      "\u21B7": { math: "\\curvearrowright" },
      "\u21B8": { math: "\\barovernorthwestarrow" },
      "\u21B9": { math: "\\barleftarrowrightarrowba" },
      "\u21BA": { math: "\\circlearrowleft" },
      "\u21BB": { math: "\\circlearrowright" },
      "\u21BC": { math: "\\leftharpoonup" },
      "\u21BD": { math: "\\leftharpoondown" },
      "\u21BE": { math: "\\upharpoonright" },
      "\u21BF": { math: "\\upharpoonleft" },
      "\u21C0": { math: "\\rightharpoonup", mathpackages: ["amsmath", "amssymb"] },
      "\u21C1": { math: "\\rightharpoondown" },
      "\u21C2": { math: "\\downharpoonright" },
      "\u21C3": { math: "\\downharpoonleft" },
      "\u21C4": { math: "\\rightleftarrows" },
      "\u21C5": { math: "\\dblarrowupdown" },
      "\u21C6": { math: "\\leftrightarrows" },
      "\u21C7": { math: "\\leftleftarrows" },
      "\u21C8": { math: "\\upuparrows" },
      "\u21C9": { math: "\\rightrightarrows" },
      "\u21CA": { math: "\\downdownarrows" },
      "\u21CB": { math: "\\leftrightharpoons" },
      "\u21CC": { math: "\\rightleftharpoons" },
      "\u21CD": { math: "\\nLeftarrow" },
      "\u21CE": { math: "\\nLeftrightarrow" },
      "\u21CF": { math: "\\nRightarrow" },
      "\u21D0": { math: "\\Leftarrow" },
      "\u21D1": { math: "\\Uparrow" },
      "\u21D2": { math: "\\Rightarrow" },
      "\u21D3": { math: "\\Downarrow" },
      "\u21D4": { math: "\\Leftrightarrow" },
      "\u21D5": { math: "\\Updownarrow" },
      "\u21D6": { math: "\\Nwarrow" },
      "\u21D7": { math: "\\Nearrow" },
      "\u21D8": { math: "\\Searrow" },
      "\u21D9": { math: "\\Swarrow" },
      "\u21DA": { math: "\\Lleftarrow" },
      "\u21DB": { math: "\\Rrightarrow" },
      "\u21DC": { math: "\\leftsquigarrow" },
      "\u21DD": { math: "\\rightsquigarrow" },
      "\u21DE": { math: "\\nHuparrow" },
      "\u21DF": { math: "\\nHdownarrow" },
      "\u21E0": { math: "\\dashleftarrow" },
      "\u21E1": { math: "\\updasharrow" },
      "\u21E2": { math: "\\dashrightarrow" },
      "\u21E3": { math: "\\downdasharrow" },
      "\u21E4": { math: "\\LeftArrowBar" },
      "\u21E5": { math: "\\RightArrowBar" },
      "\u21E6": { math: "\\leftwhitearrow" },
      "\u21E7": { math: "\\upwhitearrow" },
      "\u21E8": { math: "\\rightwhitearrow" },
      "\u21E9": { math: "\\downwhitearrow" },
      "\u21EA": { math: "\\whitearrowupfrombar" },
      "\u21F4": { math: "\\circleonrightarrow" },
      "\u21F5": { math: "\\DownArrowUpArrow" },
      "\u21F6": { math: "\\rightthreearrows" },
      "\u21F7": { math: "\\nvleftarrow" },
      "\u21F8": { math: "\\pfun" },
      "\u21F9": { math: "\\nvleftrightarrow" },
      "\u21FA": { math: "\\nVleftarrow" },
      "\u21FB": { math: "\\ffun" },
      "\u21FC": { math: "\\nVleftrightarrow" },
      "\u21FD": { math: "\\leftarrowtriangle" },
      "\u21FE": { math: "\\rightarrowtriangle" },
      "\u21FF": { math: "\\leftrightarrowtriangle" },
      "\u2200": { math: "\\forall" },
      "\u2201": { math: "\\complement" },
      "\u2202": { math: "\\partial" },
      "\u2203": { math: "\\exists" },
      "\u2204": { math: "\\nexists" },
      "\u2205": { math: "\\varnothing" },
      "\u2206": { math: "\\increment" },
      "\u2207": { math: "\\nabla" },
      "\u2208": { math: "\\in" },
      "\u2209": { math: "\\not\\in" },
      "\u220A": { math: "\\smallin" },
      "\u220B": { math: "\\ni" },
      "\u220C": { math: "\\not\\ni" },
      "\u220D": { math: "\\smallni" },
      "\u220E": { math: "\\QED" },
      "\u220F": { math: "\\prod" },
      "\u2210": { math: "\\coprod" },
      "\u2211": { math: "\\sum" },
      "\u2212": { math: "-", text: "-" },
      "\u2213": { math: "\\mp" },
      "\u2214": { math: "\\dotplus" },
      "\u2215": { text: "/" },
      "\u2216": { math: "\\setminus" },
      "\u2217": { math: "{_\\ast}" },
      "\u2218": { math: "\\circ" },
      "\u2219": { math: "\\bullet" },
      "\u221A": { math: "\\surd" },
      "\u221B": { math: "\\sqrt[3]" },
      "\u221C": { math: "\\sqrt[4]" },
      "\u221D": { math: "\\propto" },
      "\u221E": { math: "\\infty" },
      "\u221F": { math: "\\rightangle" },
      "\u2220": { math: "\\angle" },
      "\u2221": { math: "\\measuredangle" },
      "\u2222": { math: "\\sphericalangle" },
      "\u2223": { math: "\\mid" },
      "\u2224": { math: "\\nmid" },
      "\u2225": { math: "\\parallel" },
      "\u2226": { math: "\\nparallel" },
      "\u2227": { math: "\\wedge" },
      "\u2228": { math: "\\vee" },
      "\u2229": { math: "\\cap" },
      "\u222A": { math: "\\cup" },
      "\u222B": { math: "\\int" },
      "\u222C": { math: "{\\int\\!\\int}" },
      "\u222D": { math: "{\\int\\!\\int\\!\\int}" },
      "\u222E": { math: "\\oint" },
      "\u222F": { math: "\\surfintegral" },
      "\u2230": { math: "\\volintegral" },
      "\u2231": { math: "\\clwintegral" },
      "\u2232": { math: "\\lcirclerightint", mathpackages: ["MnSymbol"] },
      "\u2233": { math: "\\rcirclerightint", mathpackages: ["MnSymbol"] },
      "\u2234": { math: "\\therefore" },
      "\u2235": { math: "\\because" },
      "\u2236": { math: ":" },
      "\u2237": { math: "\\Colon" },
      "\u2238": { math: "\\dotdiv", mathpackages: ["mathabx"] },
      "\u2239": { math: "\\eqcolon" },
      "\u223A": { math: "\\mathbin{{:}\\!\\!{-}\\!\\!{:}}" },
      "\u223B": { math: "\\homothetic" },
      "\u223C": { math: "\\sim" },
      "\u223D": { math: "\\backsim" },
      "\u223E": { math: "\\lazysinv" },
      "\u223F": { math: "\\AC" },
      "\u2240": { math: "\\wr" },
      "\u2241": { math: "\\not\\sim" },
      "\u2242": { math: "\\texteqsim", mathpackages: ["xecjk"] },
      "\u2242\u0338": { math: "\\NotEqualTilde" },
      "\u2243": { math: "\\simeq" },
      "\u2244": { math: "\\not\\simeq" },
      "\u2245": { math: "\\cong" },
      "\u2246": { math: "\\approxnotequal" },
      "\u2247": { math: "\\not\\cong" },
      "\u2248": { math: "\\approx" },
      "\u2249": { math: "\\not\\approx" },
      "\u224A": { math: "\\approxeq" },
      "\u224B": { math: "\\tildetrpl" },
      "\u224B\u0338": { math: "\\not\\apid" },
      "\u224C": { math: "\\allequal" },
      "\u224D": { math: "\\asymp" },
      "\u224E": { math: "\\Bumpeq" },
      "\u224E\u0338": { math: "\\NotHumpDownHump" },
      "\u224F": { math: "\\bumpeq" },
      "\u224F\u0338": { math: "\\NotHumpEqual" },
      "\u2250": { math: "\\doteq" },
      "\u2250\u0338": { math: "\\not\\doteq" },
      "\u2251": { math: "\\doteqdot" },
      "\u2252": { math: "\\fallingdotseq" },
      "\u2253": { math: "\\risingdotseq" },
      "\u2254": { math: "\\coloneq", text: ":=" },
      "\u2255": { math: "=:" },
      "\u2256": { math: "\\eqcirc" },
      "\u2257": { math: "\\circeq" },
      "\u2258": { math: "\\arceq" },
      "\u2259": { math: "\\estimates" },
      "\u225B": { math: "\\starequal" },
      "\u225C": { math: "\\triangleq" },
      "\u225D": { math: "\\eqdef" },
      "\u225E": { math: "\\measeq" },
      "\u2260": { math: "\\neq" },
      "\u2261": { math: "\\equiv" },
      "\u2262": { math: "\\not\\equiv" },
      "\u2263": { math: "\\Equiv" },
      "\u2264": { math: "\\leq" },
      "\u2265": { math: "\\geq" },
      "\u2266": { math: "\\leqq" },
      "\u2267": { math: "\\geqq" },
      "\u2268": { math: "\\lneqq" },
      "\u2268\uFE00": { math: "\\lvertneqq" },
      "\u2269": { math: "\\gneqq" },
      "\u2269\uFE00": { math: "\\gvertneqq" },
      "\u226A": { math: "\\ll" },
      "\u226A\u0338": { math: "\\NotLessLess" },
      "\u226B": { math: "\\gg" },
      "\u226B\u0338": { math: "\\NotGreaterGreater" },
      "\u226C": { math: "\\between" },
      "\u226D": { math: "{\\not\\kern-0.3em\\times}" },
      "\u226E": { math: "\\not<" },
      "\u226F": { math: "\\not>" },
      "\u2270": { math: "\\not\\leq" },
      "\u2271": { math: "\\not\\geq" },
      "\u2272": { math: "\\lessequivlnt" },
      "\u2273": { math: "\\greaterequivlnt" },
      "\u2276": { math: "\\lessgtr" },
      "\u2277": { math: "\\gtrless" },
      "\u2278": { math: "\\notlessgreater" },
      "\u2279": { math: "\\notgreaterless" },
      "\u227A": { math: "\\prec" },
      "\u227B": { math: "\\succ" },
      "\u227C": { math: "\\preccurlyeq" },
      "\u227D": { math: "\\succcurlyeq" },
      "\u227E": { math: "\\precapprox" },
      "\u227E\u0338": { math: "\\NotPrecedesTilde" },
      "\u227F": { math: "\\succapprox" },
      "\u227F\u0338": { math: "\\NotSucceedsTilde" },
      "\u2280": { math: "\\not\\prec" },
      "\u2281": { math: "\\not\\succ" },
      "\u2282": { math: "\\subset" },
      "\u2283": { math: "\\supset" },
      "\u2284": { math: "\\not\\subset" },
      "\u2285": { math: "\\not\\supset" },
      "\u2286": { math: "\\subseteq" },
      "\u2287": { math: "\\supseteq" },
      "\u2288": { math: "\\not\\subseteq" },
      "\u2289": { math: "\\not\\supseteq" },
      "\u228A": { math: "\\subsetneq" },
      "\u228A\uFE00": { math: "\\varsubsetneqq" },
      "\u228B": { math: "\\supsetneq" },
      "\u228B\uFE00": { math: "\\varsupsetneq" },
      "\u228C": { math: "\\cupleftarrow" },
      "\u228D": { math: "\\cupdot" },
      "\u228E": { math: "\\uplus" },
      "\u228F": { math: "\\sqsubset" },
      "\u228F\u0338": { math: "\\NotSquareSubset" },
      "\u2290": { math: "\\sqsupset" },
      "\u2290\u0338": { math: "\\NotSquareSuperset" },
      "\u2291": { math: "\\sqsubseteq" },
      "\u2292": { math: "\\sqsupseteq" },
      "\u2293": { math: "\\sqcap" },
      "\u2294": { math: "\\sqcup" },
      "\u2295": { math: "\\oplus" },
      "\u2296": { math: "\\ominus" },
      "\u2297": { math: "\\otimes" },
      "\u2298": { math: "\\oslash" },
      "\u2299": { math: "\\odot" },
      "\u229A": { math: "\\circledcirc" },
      "\u229B": { math: "\\circledast" },
      "\u229C": { math: "\\circledequal" },
      "\u229D": { math: "\\circleddash" },
      "\u229E": { math: "\\boxplus" },
      "\u229F": { math: "\\boxminus" },
      "\u22A0": { math: "\\boxtimes" },
      "\u22A1": { math: "\\boxdot" },
      "\u22A2": { math: "\\vdash" },
      "\u22A3": { math: "\\dashv" },
      "\u22A4": { math: "\\top" },
      "\u22A5": { math: "\\perp" },
      "\u22A6": { math: "\\assert" },
      "\u22A7": { math: "\\truestate" },
      "\u22A8": { math: "\\forcesextra" },
      "\u22A9": { math: "\\Vdash" },
      "\u22AA": { math: "\\Vvdash" },
      "\u22AB": { math: "\\VDash" },
      "\u22AC": { math: "\\nvdash" },
      "\u22AD": { math: "\\nvDash" },
      "\u22AE": { math: "\\nVdash" },
      "\u22AF": { math: "\\nVDash" },
      "\u22B0": { math: "\\prurel" },
      "\u22B1": { math: "\\scurel" },
      "\u22B2": { math: "\\vartriangleleft" },
      "\u22B3": { math: "\\vartriangleright" },
      "\u22B4": { math: "\\trianglelefteq" },
      "\u22B5": { math: "\\trianglerighteq" },
      "\u22B6": { math: "\\original" },
      "\u22B7": { math: "\\image" },
      "\u22B8": { math: "\\multimap" },
      "\u22B9": { math: "\\hermitconjmatrix" },
      "\u22BA": { math: "\\intercal" },
      "\u22BB": { math: "\\veebar" },
      "\u22BC": { math: "\\barwedge" },
      "\u22BD": { math: "\\barvee" },
      "\u22BE": { math: "\\rightanglearc" },
      "\u22BF": { math: "\\varlrtriangle" },
      "\u22C2": { math: "\\bigcap" },
      "\u22C3": { math: "\\bigcup" },
      "\u22C4": { math: "\\diamond" },
      "\u22C5": { math: "\\cdot" },
      "\u22C6": { math: "\\star" },
      "\u22C7": { math: "\\divideontimes" },
      "\u22C8": { math: "\\bowtie" },
      "\u22C9": { math: "\\ltimes" },
      "\u22CA": { math: "\\rtimes" },
      "\u22CB": { math: "\\leftthreetimes" },
      "\u22CC": { math: "\\rightthreetimes" },
      "\u22CD": { math: "\\backsimeq" },
      "\u22CE": { math: "\\curlyvee" },
      "\u22CF": { math: "\\curlywedge" },
      "\u22D0": { math: "\\Subset" },
      "\u22D1": { math: "\\Supset" },
      "\u22D2": { math: "\\Cap" },
      "\u22D3": { math: "\\Cup" },
      "\u22D4": { math: "\\pitchfork" },
      "\u22D5": { math: "\\hash" },
      "\u22D6": { math: "\\lessdot" },
      "\u22D7": { math: "\\gtrdot" },
      "\u22D8": { math: "\\verymuchless" },
      "\u22D9": { math: "\\verymuchgreater" },
      "\u22DA": { math: "\\lesseqgtr" },
      "\u22DB": { math: "\\gtreqless" },
      "\u22DC": { math: "\\eqless" },
      "\u22DD": { math: "\\eqgtr" },
      "\u22DE": { math: "\\curlyeqprec" },
      "\u22DF": { math: "\\curlyeqsucc" },
      "\u22E0": { math: "\\npreceq" },
      "\u22E1": { math: "\\nsucceq" },
      "\u22E2": { math: "\\not\\sqsubseteq" },
      "\u22E3": { math: "\\not\\sqsupseteq" },
      "\u22E4": { math: "\\sqsubsetneq" },
      "\u22E5": { math: "\\Elzsqspne" },
      "\u22E6": { math: "\\lnsim" },
      "\u22E7": { math: "\\gnsim" },
      "\u22E8": { math: "\\precedesnotsimilar" },
      "\u22E9": { math: "\\succnsim" },
      "\u22EA": { math: "\\ntriangleleft" },
      "\u22EB": { math: "\\ntriangleright" },
      "\u22EC": { math: "\\ntrianglelefteq" },
      "\u22ED": { math: "\\ntrianglerighteq" },
      "\u22EE": { math: "\\vdots" },
      "\u22EF": { math: "\\cdots" },
      "\u22F0": { math: "\\upslopeellipsis" },
      "\u22F1": { math: "\\downslopeellipsis" },
      "\u22F2": { math: "\\disin" },
      "\u22F3": { math: "\\varisins" },
      "\u22F4": { math: "\\isins" },
      "\u22F5": { math: "\\isindot" },
      "\u22F6": { math: "\\barin" },
      "\u22F7": { math: "\\isinobar" },
      "\u22F8": { math: "\\isinvb" },
      "\u22F9": { math: "\\isinE" },
      "\u22FA": { math: "\\nisd" },
      "\u22FB": { math: "\\varnis" },
      "\u22FC": { math: "\\nis" },
      "\u22FD": { math: "\\varniobar" },
      "\u22FE": { math: "\\niobar" },
      "\u22FF": { math: "\\bagmember" },
      "\u2300": { math: "\\diameter" },
      "\u2302": { math: "\\house" },
      "\u2305": { math: "\\varbarwedge", text: "\\barwedge", commandspacer: true },
      "\u2306": { math: "\\perspcorrespond" },
      "\u2308": { math: "\\lceil" },
      "\u2309": { math: "\\rceil" },
      "\u230A": { math: "\\lfloor" },
      "\u230B": { math: "\\rfloor" },
      "\u2310": { math: "\\invneg" },
      "\u2311": { math: "\\wasylozenge" },
      "\u2312": { math: "\\profline" },
      "\u2313": { math: "\\profsurf" },
      "\u2315": { math: "\\recorder" },
      "\u2316": { math: '{\\mathchar"2208}' },
      "\u2317": { math: "\\viewdata" },
      "\u2319": { math: "\\turnednot" },
      "\u231C": { math: "\\ulcorner" },
      "\u231D": { math: "\\urcorner" },
      "\u231E": { math: "\\llcorner" },
      "\u231F": { math: "\\lrcorner" },
      "\u2320": { math: "\\inttop" },
      "\u2321": { math: "\\intbottom" },
      "\u2322": { math: "\\frown" },
      "\u2323": { math: "\\smile" },
      "\u2329": { math: "\\langle" },
      "\u232A": { math: "\\rangle" },
      "\u232C": { math: "\\varhexagonlrbonds" },
      "\u2332": { math: "\\conictaper" },
      "\u2336": { math: "\\topbot" },
      "\u2339": { math: "\\APLinv" },
      "\u233F": { math: "\\notslash" },
      "\u2340": { math: "\\notbackslash" },
      "\u2347": { math: "\\APLleftarrowbox" },
      "\u2348": { math: "\\APLrightarrowbox" },
      "\u2349": { math: "\\invdiameter" },
      "\u2350": { math: "\\APLuparrowbox" },
      "\u2353": { math: "\\APLboxupcaret" },
      "\u2357": { math: "\\APLdownarrowbox" },
      "\u235D": { math: "\\APLcomment" },
      "\u235E": { math: "\\APLinput" },
      "\u235F": { math: "\\APLlog" },
      "\u2370": { math: "\\APLboxquestion" },
      "\u237C": { math: "\\rangledownzigzagarrow" },
      "\u2394": { math: "\\hexagon" },
      "\u239B": { math: "\\lparenuend" },
      "\u239C": { math: "\\lparenextender" },
      "\u239D": { math: "\\lparenlend" },
      "\u239E": { math: "\\rparenuend" },
      "\u239F": { math: "\\rparenextender" },
      "\u23A0": { math: "\\rparenlend" },
      "\u23A1": { math: "\\lbrackuend" },
      "\u23A2": { math: "\\lbrackextender" },
      "\u23A3": { math: "\\Elzdlcorn" },
      "\u23A4": { math: "\\rbrackuend" },
      "\u23A5": { math: "\\rbrackextender" },
      "\u23A6": { math: "\\rbracklend" },
      "\u23A7": { math: "\\lbraceuend" },
      "\u23A8": { math: "\\lbracemid" },
      "\u23A9": { math: "\\lbracelend" },
      "\u23AA": { math: "\\vbraceextender" },
      "\u23AB": { math: "\\rbraceuend" },
      "\u23AC": { math: "\\rbracemid" },
      "\u23AD": { math: "\\rbracelend" },
      "\u23AE": { math: "\\intextender" },
      "\u23AF": { math: "\\harrowextender" },
      "\u23B0": { math: "\\lmoustache" },
      "\u23B1": { math: "\\rmoustache" },
      "\u23B2": { math: "\\sumtop" },
      "\u23B3": { math: "\\sumbottom" },
      "\u23B4": { math: "\\overbracket" },
      "\u23B5": { math: "\\underbracket" },
      "\u23B6": { math: "\\bbrktbrk" },
      "\u23B7": { math: "\\sqrtbottom" },
      "\u23B8": { math: "\\lvboxline" },
      "\u23B9": { math: "\\rvboxline" },
      "\u23CE": { math: "\\varcarriagereturn" },
      "\u23DC": { math: "\\overparen" },
      "\u23DD": { math: "\\underparen" },
      "\u23DE": { math: "\\overbrace" },
      "\u23DF": { math: "\\underbrace" },
      "\u23E0": { math: "\\obrbrak" },
      "\u23E1": { math: "\\ubrbrak" },
      "\u23E2": { math: "\\trapezium" },
      "\u23E3": { math: "\\benzenr" },
      "\u23E4": { math: "\\strns" },
      "\u23E5": { math: "\\fltns" },
      "\u23E6": { math: "\\accurrent" },
      "\u23E7": { math: "\\elinters" },
      "\u2460": { text: "\\ding{172}" },
      "\u2461": { text: "\\ding{173}" },
      "\u2462": { text: "\\ding{174}" },
      "\u2463": { text: "\\ding{175}" },
      "\u2464": { text: "\\ding{176}" },
      "\u2465": { text: "\\ding{177}" },
      "\u2466": { text: "\\ding{178}" },
      "\u2467": { text: "\\ding{179}" },
      "\u2468": { text: "\\ding{180}" },
      "\u2469": { text: "\\ding{181}" },
      "\u246A": { text: "(11)" },
      "\u246B": { text: "(12)" },
      "\u246C": { text: "(13)" },
      "\u246D": { text: "(14)" },
      "\u246E": { text: "(15)" },
      "\u246F": { text: "(16)" },
      "\u2470": { text: "(17)" },
      "\u2471": { text: "(18)" },
      "\u2472": { text: "(19)" },
      "\u2473": { text: "(20)" },
      "\u2474": { text: "(1)" },
      "\u2475": { text: "(2)" },
      "\u2476": { text: "(3)" },
      "\u2477": { text: "(4)" },
      "\u2478": { text: "(5)" },
      "\u2479": { text: "(6)" },
      "\u247A": { text: "(7)" },
      "\u247B": { text: "(8)" },
      "\u247C": { text: "(9)" },
      "\u247D": { text: "(10)" },
      "\u247E": { text: "(11)" },
      "\u247F": { text: "(12)" },
      "\u2480": { text: "(13)" },
      "\u2481": { text: "(14)" },
      "\u2482": { text: "(15)" },
      "\u2483": { text: "(16)" },
      "\u2484": { text: "(17)" },
      "\u2485": { text: "(18)" },
      "\u2486": { text: "(19)" },
      "\u2487": { text: "(20)" },
      "\u2488": { text: "1." },
      "\u2489": { text: "2." },
      "\u248A": { text: "3." },
      "\u248B": { text: "4." },
      "\u248C": { text: "5." },
      "\u248D": { text: "6." },
      "\u248E": { text: "7." },
      "\u248F": { text: "8." },
      "\u2490": { text: "9." },
      "\u2491": { text: "10." },
      "\u2492": { text: "11." },
      "\u2493": { text: "12." },
      "\u2494": { text: "13." },
      "\u2495": { text: "14." },
      "\u2496": { text: "15." },
      "\u2497": { text: "16." },
      "\u2498": { text: "17." },
      "\u2499": { text: "18." },
      "\u249A": { text: "19." },
      "\u249B": { text: "20." },
      "\u249C": { text: "(a)" },
      "\u249D": { text: "(b)" },
      "\u249E": { text: "(c)" },
      "\u249F": { text: "(d)" },
      "\u24A0": { text: "(e)" },
      "\u24A1": { text: "(f)" },
      "\u24A2": { text: "(g)" },
      "\u24A3": { text: "(h)" },
      "\u24A4": { text: "(i)" },
      "\u24A5": { text: "(j)" },
      "\u24A6": { text: "(k)" },
      "\u24A7": { text: "(l)" },
      "\u24A8": { text: "(m)" },
      "\u24A9": { text: "(n)" },
      "\u24AA": { text: "(o)" },
      "\u24AB": { text: "(p)" },
      "\u24AC": { text: "(q)" },
      "\u24AD": { text: "(r)" },
      "\u24AE": { text: "(s)" },
      "\u24AF": { text: "(t)" },
      "\u24B0": { text: "(u)" },
      "\u24B1": { text: "(v)" },
      "\u24B2": { text: "(w)" },
      "\u24B3": { text: "(x)" },
      "\u24B4": { text: "(y)" },
      "\u24B5": { text: "(z)" },
      "\u24B6": { text: "(A)" },
      "\u24B7": { text: "(B)" },
      "\u24B8": { text: "(C)" },
      "\u24B9": { text: "(D)" },
      "\u24BA": { text: "(E)" },
      "\u24BB": { text: "(F)" },
      "\u24BC": { text: "(G)" },
      "\u24BD": { text: "(H)" },
      "\u24BE": { text: "(I)" },
      "\u24BF": { text: "(J)" },
      "\u24C0": { text: "(K)" },
      "\u24C1": { text: "(L)" },
      "\u24C2": { text: "(M)" },
      "\u24C3": { text: "(N)" },
      "\u24C4": { text: "(O)" },
      "\u24C5": { text: "(P)" },
      "\u24C6": { text: "(Q)" },
      "\u24C7": { text: "(R)" },
      "\u24C8": { math: "\\circledS" },
      "\u24C9": { text: "(T)" },
      "\u24CA": { text: "(U)" },
      "\u24CB": { text: "(V)" },
      "\u24CC": { text: "(W)" },
      "\u24CD": { text: "(X)" },
      "\u24CE": { text: "(Y)" },
      "\u24CF": { text: "(Z)" },
      "\u24D0": { text: "(a)" },
      "\u24D1": { text: "(b)" },
      "\u24D2": { text: "(c)" },
      "\u24D3": { text: "(d)" },
      "\u24D4": { text: "(e)" },
      "\u24D5": { text: "(f)" },
      "\u24D6": { text: "(g)" },
      "\u24D7": { text: "(h)" },
      "\u24D8": { text: "(i)" },
      "\u24D9": { text: "(j)" },
      "\u24DA": { text: "(k)" },
      "\u24DB": { text: "(l)" },
      "\u24DC": { text: "(m)" },
      "\u24DD": { text: "(n)" },
      "\u24DE": { text: "(o)" },
      "\u24DF": { text: "(p)" },
      "\u24E0": { text: "(q)" },
      "\u24E1": { text: "(r)" },
      "\u24E2": { text: "(s)" },
      "\u24E3": { text: "(t)" },
      "\u24E4": { text: "(u)" },
      "\u24E5": { text: "(v)" },
      "\u24E6": { text: "(w)" },
      "\u24E7": { text: "(x)" },
      "\u24E8": { text: "(y)" },
      "\u24E9": { text: "(z)" },
      "\u24EA": { text: "(0)" },
      "\u2500": { text: "-" },
      "\u2501": { text: "=" },
      "\u2502": { text: "|" },
      "\u2503": { text: "|" },
      "\u2504": { text: "-" },
      "\u2505": { text: "=" },
      "\u2506": { math: "\\Elzdshfnc" },
      "\u2507": { text: "|" },
      "\u2508": { text: "-" },
      "\u2509": { text: "=" },
      "\u250A": { text: "|" },
      "\u250B": { text: "|" },
      "\u250C": { text: "+" },
      "\u250D": { text: "+" },
      "\u250E": { text: "+" },
      "\u250F": { text: "+" },
      "\u2510": { text: "+" },
      "\u2511": { text: "+" },
      "\u2512": { text: "+" },
      "\u2513": { text: "+" },
      "\u2514": { text: "+" },
      "\u2515": { text: "+" },
      "\u2516": { text: "+" },
      "\u2517": { text: "+" },
      "\u2518": { text: "+" },
      "\u2519": { math: "\\Elzsqfnw" },
      "\u251A": { text: "+" },
      "\u251B": { text: "+" },
      "\u251C": { text: "+" },
      "\u251D": { text: "+" },
      "\u251E": { text: "+" },
      "\u251F": { text: "+" },
      "\u2520": { text: "+" },
      "\u2521": { text: "+" },
      "\u2522": { text: "+" },
      "\u2523": { text: "+" },
      "\u2524": { text: "+" },
      "\u2525": { text: "+" },
      "\u2526": { text: "+" },
      "\u2527": { text: "+" },
      "\u2528": { text: "+" },
      "\u2529": { text: "+" },
      "\u252A": { text: "+" },
      "\u252B": { text: "+" },
      "\u252C": { text: "+" },
      "\u252D": { text: "+" },
      "\u252E": { text: "+" },
      "\u252F": { text: "+" },
      "\u2530": { text: "+" },
      "\u2531": { text: "+" },
      "\u2532": { text: "+" },
      "\u2533": { text: "+" },
      "\u2534": { text: "+" },
      "\u2535": { text: "+" },
      "\u2536": { text: "+" },
      "\u2537": { text: "+" },
      "\u2538": { text: "+" },
      "\u2539": { text: "+" },
      "\u253A": { text: "+" },
      "\u253B": { text: "+" },
      "\u253C": { text: "+" },
      "\u253D": { text: "+" },
      "\u253E": { text: "+" },
      "\u253F": { text: "+" },
      "\u2540": { text: "+" },
      "\u2541": { text: "+" },
      "\u2542": { text: "+" },
      "\u2543": { text: "+" },
      "\u2544": { text: "+" },
      "\u2545": { text: "+" },
      "\u2546": { text: "+" },
      "\u2547": { text: "+" },
      "\u2548": { text: "+" },
      "\u2549": { text: "+" },
      "\u254A": { text: "+" },
      "\u254B": { text: "+" },
      "\u254C": { text: "-" },
      "\u254D": { text: "=" },
      "\u254E": { text: "|" },
      "\u254F": { text: "|" },
      "\u2550": { text: "=" },
      "\u2551": { text: "|" },
      "\u2552": { text: "+" },
      "\u2553": { text: "+" },
      "\u2554": { text: "+" },
      "\u2555": { text: "+" },
      "\u2556": { text: "+" },
      "\u2557": { text: "+" },
      "\u2558": { text: "+" },
      "\u2559": { text: "+" },
      "\u255A": { text: "+" },
      "\u255B": { text: "+" },
      "\u255C": { text: "+" },
      "\u255D": { text: "+" },
      "\u255E": { text: "+" },
      "\u255F": { text: "+" },
      "\u2560": { text: "+" },
      "\u2561": { text: "+" },
      "\u2562": { text: "+" },
      "\u2563": { text: "+" },
      "\u2564": { text: "+" },
      "\u2565": { text: "+" },
      "\u2566": { text: "+" },
      "\u2567": { text: "+" },
      "\u2568": { text: "+" },
      "\u2569": { text: "+" },
      "\u256A": { text: "+" },
      "\u256B": { text: "+" },
      "\u256C": { text: "+" },
      "\u256D": { text: "+" },
      "\u256E": { text: "+" },
      "\u256F": { text: "+" },
      "\u2570": { text: "+" },
      "\u2571": { math: "\\diagup" },
      "\u2572": { text: "\\" },
      "\u2573": { text: "X" },
      "\u257C": { text: "-" },
      "\u257D": { text: "|" },
      "\u257E": { text: "-" },
      "\u257F": { text: "|" },
      "\u2580": { math: "\\blockuphalf" },
      "\u2584": { math: "\\blocklowhalf" },
      "\u2588": { math: "\\blockfull" },
      "\u258C": { math: "\\blocklefthalf" },
      "\u2590": { math: "\\blockrighthalf" },
      "\u2591": { math: "\\blockqtrshaded" },
      "\u2592": { math: "\\blockhalfshaded" },
      "\u2593": { math: "\\blockthreeqtrshaded" },
      "\u25A0": { math: "\\mdlgblksquare", text: "\\ding{110}" },
      "\u25A1": { math: "\\square" },
      "\u25A2": { math: "\\squoval" },
      "\u25A3": { math: "\\blackinwhitesquare" },
      "\u25A4": { math: "\\squarehfill" },
      "\u25A5": { math: "\\squarevfill" },
      "\u25A6": { math: "\\squarehvfill" },
      "\u25A7": { math: "\\squarenwsefill" },
      "\u25A8": { math: "\\squareneswfill" },
      "\u25A9": { math: "\\squarecrossfill" },
      "\u25AA": { math: "\\blacksquare" },
      "\u25AB": { math: "\\smwhtsquare" },
      "\u25AC": { math: "\\hrectangleblack" },
      "\u25AD": { math: "\\fbox{~~}" },
      "\u25AE": { math: "\\vrectangleblack" },
      "\u25AF": { math: "\\Elzvrecto" },
      "\u25B0": { math: "\\parallelogramblack" },
      "\u25B2": { math: "\\bigblacktriangleup", text: "\\ding{115}" },
      "\u25B3": { math: "\\bigtriangleup" },
      "\u25B4": { math: "\\blacktriangle" },
      "\u25B5": { math: "\\vartriangle" },
      "\u25B6": { math: "\\RHD" },
      "\u25B7": { math: "\\rhd" },
      "\u25B8": { math: "\\blacktriangleright" },
      "\u25B9": { math: "\\triangleright" },
      "\u25BA": { math: "\\blackpointerright" },
      "\u25BB": { math: "\\whitepointerright" },
      "\u25BC": { math: "\\bigblacktriangledown", text: "\\ding{116}" },
      "\u25BD": { math: "\\bigtriangledown" },
      "\u25BE": { math: "\\blacktriangledown" },
      "\u25BF": { math: "\\triangledown" },
      "\u25C0": { math: "\\LHD" },
      "\u25C1": { math: "\\lhd" },
      "\u25C2": { math: "\\blacktriangleleft" },
      "\u25C3": { math: "\\triangleleft" },
      "\u25C4": { math: "\\blackpointerleft" },
      "\u25C5": { math: "\\whitepointerleft" },
      "\u25C6": { math: "\\Diamondblack", text: "\\ding{117}" },
      "\u25C7": { math: "\\Diamond" },
      "\u25C8": { math: "\\blackinwhitediamond" },
      "\u25C9": { math: "\\fisheye" },
      "\u25CA": { math: "\\lozenge" },
      "\u25CB": { math: "\\bigcirc" },
      "\u25CC": { math: "\\dottedcircle" },
      "\u25CD": { math: "\\circlevertfill" },
      "\u25CE": { math: "\\bullseye" },
      "\u25CF": { math: "\\CIRCLE", text: "\\ding{108}" },
      "\u25D0": { math: "\\Elzcirfl" },
      "\u25D1": { math: "\\Elzcirfr" },
      "\u25D2": { math: "\\Elzcirfb" },
      "\u25D3": { math: "\\circletophalfblack" },
      "\u25D4": { math: "\\circleurquadblack" },
      "\u25D5": { math: "\\blackcircleulquadwhite" },
      "\u25D6": { math: "\\LEFTCIRCLE" },
      "\u25D7": { math: "\\RIGHTCIRCLE", text: "\\ding{119}" },
      "\u25D8": { math: "\\Elzrvbull" },
      "\u25D9": { math: "\\inversewhitecircle" },
      "\u25DA": { math: "\\invwhiteupperhalfcircle" },
      "\u25DB": { math: "\\invwhitelowerhalfcircle" },
      "\u25DC": { math: "\\ularc" },
      "\u25DD": { math: "\\urarc" },
      "\u25DE": { math: "\\lrarc" },
      "\u25DF": { math: "\\llarc" },
      "\u25E0": { math: "\\topsemicircle" },
      "\u25E1": { math: "\\botsemicircle" },
      "\u25E2": { math: "\\lrblacktriangle" },
      "\u25E3": { math: "\\llblacktriangle" },
      "\u25E4": { math: "\\ulblacktriangle" },
      "\u25E5": { math: "\\urblacktriangle" },
      "\u25E6": { math: "\\smwhtcircle" },
      "\u25E7": { math: "\\Elzsqfl" },
      "\u25E8": { math: "\\Elzsqfr" },
      "\u25E9": { math: "\\squareulblack" },
      "\u25EA": { math: "\\Elzsqfse" },
      "\u25EB": { math: "\\boxbar" },
      "\u25EC": { math: "\\trianglecdot" },
      "\u25ED": { math: "\\triangleleftblack" },
      "\u25EE": { math: "\\trianglerightblack" },
      "\u25EF": { math: "\\bigcirc" },
      "\u25F0": { math: "\\squareulquad" },
      "\u25F1": { math: "\\squarellquad" },
      "\u25F2": { math: "\\squarelrquad" },
      "\u25F3": { math: "\\squareurquad" },
      "\u25F4": { math: "\\circleulquad" },
      "\u25F5": { math: "\\circlellquad" },
      "\u25F6": { math: "\\circlelrquad" },
      "\u25F7": { math: "\\circleurquad" },
      "\u25F8": { math: "\\ultriangle" },
      "\u25F9": { math: "\\urtriangle" },
      "\u25FA": { math: "\\lltriangle" },
      "\u25FB": { math: "\\square" },
      "\u25FC": { math: "\\blacksquare" },
      "\u25FD": { math: "\\mdsmwhtsquare" },
      "\u25FE": { math: "\\mdsmblksquare" },
      "\u25FF": { math: "\\lrtriangle" },
      "\u2605": { math: "\\bigstar", text: "\\ding{72}" },
      "\u2606": { math: "\\bigwhitestar", text: "\\ding{73}" },
      "\u2609": { math: "\\Sun" },
      "\u260E": { text: "\\ding{37}" },
      "\u2610": { math: "\\Square" },
      "\u2611": { math: "\\CheckedBox" },
      "\u2612": { math: "\\XBox" },
      "\u2613": { text: "X" },
      "\u2615": { math: "\\steaming" },
      "\u261B": { text: "\\ding{42}" },
      "\u261E": { math: "\\pointright", text: "\\ding{43}" },
      "\u2620": { math: "\\skull" },
      "\u2621": { math: "\\danger" },
      "\u2622": { math: "\\radiation" },
      "\u2623": { math: "\\biohazard" },
      "\u262F": { math: "\\yinyang" },
      "\u2639": { math: "\\frownie" },
      "\u263A": { math: "\\smiley" },
      "\u263B": { math: "\\blacksmiley" },
      "\u263C": { math: "\\sun" },
      "\u263D": { text: "\\rightmoon", commandspacer: true, textpackages: ["wasysym"] },
      "\u263E": { text: "\\leftmoon", commandspacer: true, textpackages: ["wasysym"] },
      "\u263F": { math: "\\mercury", text: "\\mercury", commandspacer: true },
      "\u2640": { math: "\\female", text: "\\venus", commandspacer: true },
      "\u2641": { math: "\\earth" },
      "\u2642": { math: "\\male", text: "\\male", commandspacer: true },
      "\u2643": { math: "\\jupiter", text: "\\jupiter", commandspacer: true },
      "\u2644": { math: "\\saturn", text: "\\saturn", commandspacer: true },
      "\u2645": { math: "\\uranus", text: "\\uranus", commandspacer: true },
      "\u2646": { math: "\\neptune", text: "\\neptune", commandspacer: true },
      "\u2647": { math: "\\pluto", text: "\\pluto", commandspacer: true },
      "\u2648": { math: "\\aries", text: "\\aries", commandspacer: true },
      "\u2649": { math: "\\taurus", text: "\\taurus", commandspacer: true },
      "\u264A": { math: "\\gemini", text: "\\gemini", commandspacer: true },
      "\u264B": { math: "\\cancer", text: "\\cancer", commandspacer: true },
      "\u264C": { math: "\\leo", text: "\\leo", commandspacer: true },
      "\u264D": { math: "\\virgo", text: "\\virgo", commandspacer: true },
      "\u264E": { math: "\\libra", text: "\\libra", commandspacer: true },
      "\u264F": { math: "\\scorpio", text: "\\scorpio", commandspacer: true },
      "\u2650": { math: "\\sagittarius", text: "\\sagittarius", commandspacer: true },
      "\u2651": { math: "\\capricornus", text: "\\capricornus", commandspacer: true },
      "\u2652": { math: "\\aquarius", text: "\\aquarius", commandspacer: true },
      "\u2653": { math: "\\pisces", text: "\\pisces", commandspacer: true },
      "\u2660": { math: "\\spadesuit", text: "\\ding{171}" },
      "\u2661": { math: "\\heartsuit" },
      "\u2662": { math: "\\diamond" },
      "\u2663": { math: "\\clubsuit", text: "\\ding{168}" },
      "\u2664": { math: "\\varspadesuit" },
      "\u2665": { math: "\\varheartsuit", text: "\\ding{170}" },
      "\u2666": { math: "\\vardiamondsuit", text: "\\ding{169}" },
      "\u2667": { math: "\\varclubsuit" },
      "\u2669": { math: "\\quarternote", text: "\\quarternote", commandspacer: true },
      "\u266A": { math: "\\eighthnote", text: "\\eighthnote", commandspacer: true },
      "\u266B": { math: "\\twonotes" },
      "\u266C": { math: "\\sixteenthnote" },
      "\u266D": { math: "\\flat" },
      "\u266E": { math: "\\natural" },
      "\u266F": { math: "\\sharp" },
      "\u267B": { math: "\\recycle" },
      "\u267E": { math: "\\acidfree" },
      "\u2680": { math: "\\dicei" },
      "\u2681": { math: "\\diceii" },
      "\u2682": { math: "\\diceiii" },
      "\u2683": { math: "\\diceiv" },
      "\u2684": { math: "\\dicev" },
      "\u2685": { math: "\\dicevi" },
      "\u2686": { math: "\\circledrightdot" },
      "\u2687": { math: "\\circledtwodots" },
      "\u2688": { math: "\\blackcircledrightdot" },
      "\u2689": { math: "\\blackcircledtwodots" },
      "\u2693": { math: "\\anchor" },
      "\u2694": { math: "\\swords" },
      "\u26A0": { math: "\\warning" },
      "\u26A5": { math: "\\Hermaphrodite" },
      "\u26AA": { math: "\\medcirc" },
      "\u26AB": { math: "\\medbullet" },
      "\u26AC": { math: "\\mdsmwhtcircle" },
      "\u26B2": { math: "\\neuter" },
      "\u2701": { text: "\\ding{33}" },
      "\u2702": { text: "\\ding{34}" },
      "\u2703": { text: "\\ding{35}" },
      "\u2704": { text: "\\ding{36}" },
      "\u2706": { text: "\\ding{38}" },
      "\u2707": { text: "\\ding{39}" },
      "\u2708": { text: "\\ding{40}" },
      "\u2709": { text: "\\ding{41}" },
      "\u270C": { text: "\\ding{44}" },
      "\u270D": { text: "\\ding{45}" },
      "\u270E": { math: "\\pencil", text: "\\ding{46}" },
      "\u270F": { text: "\\ding{47}" },
      "\u2710": { text: "\\ding{48}" },
      "\u2711": { text: "\\ding{49}" },
      "\u2712": { text: "\\ding{50}" },
      "\u2713": { math: "\\checkmark", text: "\\ding{51}" },
      "\u2714": { text: "\\ding{52}" },
      "\u2715": { text: "\\ding{53}" },
      "\u2716": { text: "\\ding{54}" },
      "\u2717": { math: "\\ballotx", text: "\\ding{55}" },
      "\u2718": { text: "\\ding{56}" },
      "\u2719": { text: "\\ding{57}" },
      "\u271A": { text: "\\ding{58}" },
      "\u271B": { text: "\\ding{59}" },
      "\u271C": { text: "\\ding{60}" },
      "\u271D": { text: "\\ding{61}" },
      "\u271E": { text: "\\ding{62}" },
      "\u271F": { text: "\\ding{63}" },
      "\u2720": { math: "\\maltese", text: "\\ding{64}" },
      "\u2721": { text: "\\ding{65}" },
      "\u2722": { text: "\\ding{66}" },
      "\u2723": { text: "\\ding{67}" },
      "\u2724": { text: "\\ding{68}" },
      "\u2725": { text: "\\ding{69}" },
      "\u2726": { text: "\\ding{70}" },
      "\u2727": { text: "\\ding{71}" },
      "\u2729": { text: "\\ding{73}" },
      "\u272A": { math: "\\circledstar", text: "\\ding{74}" },
      "\u272B": { text: "\\ding{75}" },
      "\u272C": { text: "\\ding{76}" },
      "\u272D": { text: "\\ding{77}" },
      "\u272E": { text: "\\ding{78}" },
      "\u272F": { text: "\\ding{79}" },
      "\u2730": { text: "\\ding{80}" },
      "\u2731": { text: "\\ding{81}" },
      "\u2732": { text: "\\ding{82}" },
      "\u2733": { text: "\\ding{83}" },
      "\u2734": { text: "\\ding{84}" },
      "\u2735": { text: "\\ding{85}" },
      "\u2736": { math: "\\varstar", text: "\\ding{86}" },
      "\u2737": { text: "\\ding{87}" },
      "\u2738": { text: "\\ding{88}" },
      "\u2739": { text: "\\ding{89}" },
      "\u273A": { text: "\\ding{90}" },
      "\u273B": { text: "\\ding{91}" },
      "\u273C": { text: "\\ding{92}" },
      "\u273D": { math: "\\dingasterisk", text: "\\ding{93}" },
      "\u273E": { text: "\\ding{94}" },
      "\u273F": { text: "\\ding{95}" },
      "\u2740": { text: "\\ding{96}" },
      "\u2741": { text: "\\ding{97}" },
      "\u2742": { text: "\\ding{98}" },
      "\u2743": { text: "\\ding{99}" },
      "\u2744": { text: "\\ding{100}" },
      "\u2745": { text: "\\ding{101}" },
      "\u2746": { text: "\\ding{102}" },
      "\u2747": { text: "\\ding{103}" },
      "\u2748": { text: "\\ding{104}" },
      "\u2749": { text: "\\ding{105}" },
      "\u274A": { text: "\\ding{106}" },
      "\u274B": { text: "\\ding{107}" },
      "\u274D": { text: "\\ding{109}" },
      "\u274F": { text: "\\ding{111}" },
      "\u2750": { text: "\\ding{112}" },
      "\u2751": { text: "\\ding{113}" },
      "\u2752": { text: "\\ding{114}" },
      "\u2756": { text: "\\ding{118}" },
      "\u2758": { text: "\\ding{120}" },
      "\u2759": { text: "\\ding{121}" },
      "\u275A": { text: "\\ding{122}" },
      "\u275B": { text: "\\ding{123}" },
      "\u275C": { text: "\\ding{124}" },
      "\u275D": { text: "\\ding{125}" },
      "\u275E": { text: "\\ding{126}" },
      "\u2761": { text: "\\ding{161}" },
      "\u2762": { text: "\\ding{162}" },
      "\u2763": { text: "\\ding{163}" },
      "\u2764": { text: "\\ding{164}" },
      "\u2765": { text: "\\ding{165}" },
      "\u2766": { text: "\\ding{166}" },
      "\u2767": { text: "\\ding{167}" },
      "\u2772": { math: "\\lbrbrak" },
      "\u2773": { math: "\\rbrbrak" },
      "\u2776": { text: "\\ding{182}" },
      "\u2777": { text: "\\ding{183}" },
      "\u2778": { text: "\\ding{184}" },
      "\u2779": { text: "\\ding{185}" },
      "\u277A": { text: "\\ding{186}" },
      "\u277B": { text: "\\ding{187}" },
      "\u277C": { text: "\\ding{188}" },
      "\u277D": { text: "\\ding{189}" },
      "\u277E": { text: "\\ding{190}" },
      "\u277F": { text: "\\ding{191}" },
      "\u2780": { text: "\\ding{192}" },
      "\u2781": { text: "\\ding{193}" },
      "\u2782": { text: "\\ding{194}" },
      "\u2783": { text: "\\ding{195}" },
      "\u2784": { text: "\\ding{196}" },
      "\u2785": { text: "\\ding{197}" },
      "\u2786": { text: "\\ding{198}" },
      "\u2787": { text: "\\ding{199}" },
      "\u2788": { text: "\\ding{200}" },
      "\u2789": { text: "\\ding{201}" },
      "\u278A": { text: "\\ding{202}" },
      "\u278B": { text: "\\ding{203}" },
      "\u278C": { text: "\\ding{204}" },
      "\u278D": { text: "\\ding{205}" },
      "\u278E": { text: "\\ding{206}" },
      "\u278F": { text: "\\ding{207}" },
      "\u2790": { text: "\\ding{208}" },
      "\u2791": { text: "\\ding{209}" },
      "\u2792": { text: "\\ding{210}" },
      "\u2793": { text: "\\ding{211}" },
      "\u2794": { text: "\\ding{212}" },
      "\u2798": { text: "\\ding{216}" },
      "\u2799": { text: "\\ding{217}" },
      "\u279A": { text: "\\ding{218}" },
      "\u279B": { math: "\\draftingarrow", text: "\\ding{219}" },
      "\u279C": { text: "\\ding{220}" },
      "\u279D": { text: "\\ding{221}" },
      "\u279E": { text: "\\ding{222}" },
      "\u279F": { text: "\\ding{223}" },
      "\u27A0": { text: "\\ding{224}" },
      "\u27A1": { text: "\\ding{225}" },
      "\u27A2": { math: "\\arrowbullet", text: "\\ding{226}" },
      "\u27A3": { text: "\\ding{227}" },
      "\u27A4": { text: "\\ding{228}" },
      "\u27A5": { text: "\\ding{229}" },
      "\u27A6": { text: "\\ding{230}" },
      "\u27A7": { text: "\\ding{231}" },
      "\u27A8": { text: "\\ding{232}" },
      "\u27A9": { text: "\\ding{233}" },
      "\u27AA": { text: "\\ding{234}" },
      "\u27AB": { text: "\\ding{235}" },
      "\u27AC": { text: "\\ding{236}" },
      "\u27AD": { text: "\\ding{237}" },
      "\u27AE": { text: "\\ding{238}" },
      "\u27AF": { text: "\\ding{239}" },
      "\u27B1": { text: "\\ding{241}" },
      "\u27B2": { text: "\\ding{242}" },
      "\u27B3": { text: "\\ding{243}" },
      "\u27B4": { text: "\\ding{244}" },
      "\u27B5": { text: "\\ding{245}" },
      "\u27B6": { text: "\\ding{246}" },
      "\u27B7": { text: "\\ding{247}" },
      "\u27B8": { text: "\\ding{248}" },
      "\u27B9": { text: "\\ding{249}" },
      "\u27BA": { text: "\\ding{250}" },
      "\u27BB": { text: "\\ding{251}" },
      "\u27BC": { text: "\\ding{252}" },
      "\u27BD": { text: "\\ding{253}" },
      "\u27BE": { text: "\\ding{254}" },
      "\u27C0": { math: "\\threedangle" },
      "\u27C1": { math: "\\whiteinwhitetriangle" },
      "\u27C2": { math: "\\perp" },
      "\u27C3": { math: "\\subsetcirc" },
      "\u27C4": { math: "\\supsetcirc" },
      "\u27C5": { math: "\\Lbag" },
      "\u27C6": { math: "\\Rbag" },
      "\u27C7": { math: "\\veedot" },
      "\u27C8": { math: "\\bsolhsub" },
      "\u27C9": { math: "\\suphsol" },
      "\u27CC": { math: "\\longdivision" },
      "\u27D0": { math: "\\Diamonddot" },
      "\u27D1": { math: "\\wedgedot" },
      "\u27D2": { math: "\\upin" },
      "\u27D3": { math: "\\pullback" },
      "\u27D4": { math: "\\pushout" },
      "\u27D5": { math: "\\leftouterjoin" },
      "\u27D6": { math: "\\rightouterjoin" },
      "\u27D7": { math: "\\fullouterjoin" },
      "\u27D8": { math: "\\bigbot" },
      "\u27D9": { math: "\\bigtop" },
      "\u27DA": { math: "\\DashVDash" },
      "\u27DB": { math: "\\dashVdash" },
      "\u27DC": { math: "\\multimapinv" },
      "\u27DD": { math: "\\vlongdash" },
      "\u27DE": { math: "\\longdashv" },
      "\u27DF": { math: "\\cirbot" },
      "\u27E0": { math: "\\lozengeminus" },
      "\u27E1": { math: "\\concavediamond" },
      "\u27E2": { math: "\\concavediamondtickleft" },
      "\u27E3": { math: "\\concavediamondtickright" },
      "\u27E4": { math: "\\whitesquaretickleft" },
      "\u27E5": { math: "\\whitesquaretickright" },
      "\u27E6": { math: "\\llbracket" },
      "\u27E7": { math: "\\rrbracket" },
      "\u27E8": { math: "\\langle" },
      "\u27E9": { math: "\\rangle" },
      "\u27EA": { math: "\\lang" },
      "\u27EB": { math: "\\rang" },
      "\u27EC": { math: "\\Lbrbrak" },
      "\u27ED": { math: "\\Rbrbrak" },
      "\u27EE": { math: "\\lgroup" },
      "\u27EF": { math: "\\rgroup" },
      "\u27F0": { math: "\\UUparrow" },
      "\u27F1": { math: "\\DDownarrow" },
      "\u27F2": { math: "\\acwgapcirclearrow" },
      "\u27F3": { math: "\\cwgapcirclearrow" },
      "\u27F4": { math: "\\rightarrowonoplus" },
      "\u27F5": { math: "\\longleftarrow" },
      "\u27F6": { math: "\\longrightarrow" },
      "\u27F7": { math: "\\longleftrightarrow" },
      "\u27F8": { math: "\\Longleftarrow" },
      "\u27F9": { math: "\\Longrightarrow" },
      "\u27FA": { math: "\\Longleftrightarrow" },
      "\u27FB": { math: "\\longmapsfrom" },
      "\u27FC": { math: "\\longmapsto" },
      "\u27FD": { math: "\\Longmapsfrom" },
      "\u27FE": { math: "\\Longmapsto" },
      "\u27FF": { math: "\\sim\\joinrel\\leadsto" },
      "\u2900": { math: "\\psur" },
      "\u2901": { math: "\\nVtwoheadrightarrow" },
      "\u2902": { math: "\\nvLeftarrow" },
      "\u2903": { math: "\\nvRightarrow" },
      "\u2904": { math: "\\nvLeftrightarrow" },
      "\u2906": { math: "\\Mapsfrom" },
      "\u2907": { math: "\\Mapsto" },
      "\u2908": { math: "\\downarrowbarred" },
      "\u2909": { math: "\\uparrowbarred" },
      "\u290A": { math: "\\Uuparrow" },
      "\u290B": { math: "\\Ddownarrow" },
      "\u290C": { math: "\\leftbkarrow" },
      "\u290D": { math: "\\rightbkarrow" },
      "\u290E": { math: "\\leftdbkarrow" },
      "\u290F": { math: "\\dbkarow" },
      "\u2910": { math: "\\drbkarow" },
      "\u2911": { math: "\\rightdotarrow" },
      "\u2912": { math: "\\UpArrowBar" },
      "\u2913": { math: "\\DownArrowBar" },
      "\u2914": { math: "\\pinj" },
      "\u2915": { math: "\\finj" },
      "\u2916": { math: "\\bij" },
      "\u2917": { math: "\\nvtwoheadrightarrowtail" },
      "\u2918": { math: "\\nVtwoheadrightarrowtail" },
      "\u2919": { math: "\\lefttail" },
      "\u291A": { math: "\\righttail" },
      "\u291B": { math: "\\leftdbltail" },
      "\u291C": { math: "\\rightdbltail" },
      "\u291D": { math: "\\diamondleftarrow" },
      "\u291E": { math: "\\rightarrowdiamond" },
      "\u291F": { math: "\\diamondleftarrowbar" },
      "\u2920": { math: "\\barrightarrowdiamond" },
      "\u2921": { math: "\\nwsearrow" },
      "\u2922": { math: "\\neswarrow" },
      "\u292B": { math: "\\rdiagovfdiag" },
      "\u292C": { math: "\\fdiagovrdiag" },
      "\u292D": { math: "\\seovnearrow" },
      "\u292E": { math: "\\neovsearrow" },
      "\u292F": { math: "\\fdiagovnearrow" },
      "\u2930": { math: "\\rdiagovsearrow" },
      "\u2931": { math: "\\neovnwarrow" },
      "\u2932": { math: "\\nwovnearrow" },
      "\u2934": { math: "\\uprightcurvearrow" },
      "\u2935": { math: "\\downrightcurvedarrow" },
      "\u2938": { math: "\\cwrightarcarrow" },
      "\u2939": { math: "\\acwleftarcarrow" },
      "\u293A": { math: "\\acwoverarcarrow" },
      "\u293B": { math: "\\acwunderarcarrow" },
      "\u293C": { math: "\\curvearrowrightminus" },
      "\u293D": { math: "\\curvearrowleftplus" },
      "\u293E": { math: "\\cwundercurvearrow" },
      "\u293F": { math: "\\ccwundercurvearrow" },
      "\u2940": { math: "\\Elolarr" },
      "\u2941": { math: "\\Elorarr" },
      "\u2942": { math: "\\ElzRlarr" },
      "\u2943": { math: "\\leftarrowshortrightarrow" },
      "\u2944": { math: "\\ElzrLarr" },
      "\u2945": { math: "\\rightarrowplus" },
      "\u2946": { math: "\\leftarrowplus" },
      "\u2947": { math: "\\Elzrarrx" },
      "\u2948": { math: "\\leftrightarrowcircle" },
      "\u2949": { math: "\\twoheaduparrowcircle" },
      "\u294A": { math: "\\leftrightharpoon" },
      "\u294B": { math: "\\rightleftharpoon" },
      "\u294C": { math: "\\updownharpoonrightleft" },
      "\u294D": { math: "\\updownharpoonleftright" },
      "\u294E": { math: "\\LeftRightVector" },
      "\u294F": { math: "\\RightUpDownVector" },
      "\u2950": { math: "\\DownLeftRightVector" },
      "\u2951": { math: "\\LeftUpDownVector" },
      "\u2952": { math: "\\LeftVectorBar" },
      "\u2953": { math: "\\RightVectorBar" },
      "\u2954": { math: "\\RightUpVectorBar" },
      "\u2955": { math: "\\RightDownVectorBar" },
      "\u2956": { math: "\\DownLeftVectorBar" },
      "\u2957": { math: "\\DownRightVectorBar" },
      "\u2958": { math: "\\LeftUpVectorBar" },
      "\u2959": { math: "\\LeftDownVectorBar" },
      "\u295A": { math: "\\LeftTeeVector" },
      "\u295B": { math: "\\RightTeeVector" },
      "\u295C": { math: "\\RightUpTeeVector" },
      "\u295D": { math: "\\RightDownTeeVector" },
      "\u295E": { math: "\\DownLeftTeeVector" },
      "\u295F": { math: "\\DownRightTeeVector" },
      "\u2960": { math: "\\LeftUpTeeVector" },
      "\u2961": { math: "\\LeftDownTeeVector" },
      "\u2962": { math: "\\leftleftharpoons" },
      "\u2963": { math: "\\upupharpoons" },
      "\u2964": { math: "\\rightrightharpoons" },
      "\u2965": { math: "\\downdownharpoons" },
      "\u2966": { math: "\\leftrightharpoonsup" },
      "\u2967": { math: "\\leftrightharpoonsdown" },
      "\u2968": { math: "\\rightleftharpoonsup" },
      "\u2969": { math: "\\rightleftharpoonsdown" },
      "\u296A": { math: "\\leftbarharpoon" },
      "\u296B": { math: "\\barleftharpoon" },
      "\u296C": { math: "\\rightbarharpoon" },
      "\u296D": { math: "\\barrightharpoon" },
      "\u296E": { math: "\\UpEquilibrium" },
      "\u296F": { math: "\\ReverseUpEquilibrium" },
      "\u2970": { math: "\\RoundImplies" },
      "\u2971": { math: "\\equalrightarrow" },
      "\u2972": { math: "\\similarrightarrow" },
      "\u2973": { math: "\\leftarrowsimilar" },
      "\u2974": { math: "\\rightarrowsimilar" },
      "\u2975": { math: "\\rightarrowapprox" },
      "\u2976": { math: "\\ltlarr" },
      "\u2977": { math: "\\leftarrowless" },
      "\u2978": { math: "\\gtrarr" },
      "\u2979": { math: "\\subrarr" },
      "\u297A": { math: "\\leftarrowsubset" },
      "\u297B": { math: "\\suplarr" },
      "\u297E": { math: "\\upfishtail" },
      "\u297F": { math: "\\downfishtail" },
      "\u2980": { math: "\\Elztfnc" },
      "\u2981": { math: "\\spot" },
      "\u2982": { math: "\\typecolon" },
      "\u2983": { math: "\\lBrace" },
      "\u2984": { math: "\\rBrace" },
      "\u2986": { math: "\\Elroang" },
      "\u2987": { math: "\\limg" },
      "\u2988": { math: "\\rimg" },
      "\u2989": { math: "\\lblot" },
      "\u298A": { math: "\\rblot" },
      "\u298B": { math: "\\lbrackubar" },
      "\u298C": { math: "\\rbrackubar" },
      "\u298D": { math: "\\lbrackultick" },
      "\u298E": { math: "\\rbracklrtick" },
      "\u298F": { math: "\\lbracklltick" },
      "\u2990": { math: "\\rbrackurtick" },
      "\u2991": { math: "\\langledot" },
      "\u2992": { math: "\\rangledot" },
      "\u2993": { math: "<\\kern-0.58em(" },
      "\u2995": { math: "\\Lparengtr" },
      "\u2996": { math: "\\Rparenless" },
      "\u2997": { math: "\\lblkbrbrak" },
      "\u2998": { math: "\\rblkbrbrak" },
      "\u2999": { math: "\\Elzddfnc" },
      "\u299A": { math: "\\vzigzag" },
      "\u299B": { math: "\\measuredangleleft" },
      "\u299C": { math: "\\Angle" },
      "\u299D": { math: "\\rightanglemdot" },
      "\u299E": { math: "\\angles" },
      "\u299F": { math: "\\angdnr" },
      "\u29A0": { math: "\\Elzlpargt" },
      "\u29A1": { math: "\\sphericalangleup" },
      "\u29A2": { math: "\\turnangle" },
      "\u29A3": { math: "\\revangle" },
      "\u29A4": { math: "\\angleubar" },
      "\u29A5": { math: "\\revangleubar" },
      "\u29A6": { math: "\\wideangledown" },
      "\u29A7": { math: "\\wideangleup" },
      "\u29A8": { math: "\\measanglerutone" },
      "\u29A9": { math: "\\measanglelutonw" },
      "\u29AA": { math: "\\measanglerdtose" },
      "\u29AB": { math: "\\measangleldtosw" },
      "\u29AC": { math: "\\measangleurtone" },
      "\u29AD": { math: "\\measangleultonw" },
      "\u29AE": { math: "\\measangledrtose" },
      "\u29AF": { math: "\\measangledltosw" },
      "\u29B0": { math: "\\revemptyset" },
      "\u29B1": { math: "\\emptysetobar" },
      "\u29B2": { math: "\\emptysetocirc" },
      "\u29B3": { math: "\\emptysetoarr" },
      "\u29B4": { math: "\\emptysetoarrl" },
      "\u29B7": { math: "\\circledparallel" },
      "\u29B8": { math: "\\circledbslash" },
      "\u29B9": { math: "\\operp" },
      "\u29BA": { math: "\\obot" },
      "\u29BB": { math: "\\olcross" },
      "\u29BC": { math: "\\odotslashdot" },
      "\u29BD": { math: "\\uparrowoncircle" },
      "\u29BE": { math: "\\circledwhitebullet" },
      "\u29BF": { math: "\\circledbullet" },
      "\u29C0": { math: "\\circledless" },
      "\u29C1": { math: "\\circledgtr" },
      "\u29C2": { math: "\\cirscir" },
      "\u29C3": { math: "\\cirE" },
      "\u29C4": { math: "\\boxslash" },
      "\u29C5": { math: "\\boxbslash" },
      "\u29C6": { math: "\\boxast" },
      "\u29C7": { math: "\\boxcircle" },
      "\u29C8": { math: "\\boxbox" },
      "\u29C9": { math: "\\boxonbox" },
      "\u29CA": { math: "\\ElzLap" },
      "\u29CB": { math: "\\Elzdefas" },
      "\u29CC": { math: "\\triangles" },
      "\u29CD": { math: "\\triangleserifs" },
      "\u29CE": { math: "\\rtriltri" },
      "\u29CF": { math: "\\LeftTriangleBar" },
      "\u29CF\u0338": { math: "\\NotLeftTriangleBar" },
      "\u29D0": { math: "\\RightTriangleBar" },
      "\u29D0\u0338": { math: "\\NotRightTriangleBar" },
      "\u29D1": { math: "\\lfbowtie" },
      "\u29D2": { math: "\\rfbowtie" },
      "\u29D3": { math: "\\fbowtie" },
      "\u29D4": { math: "\\lftimes" },
      "\u29D5": { math: "\\rftimes" },
      "\u29D6": { math: "\\hourglass" },
      "\u29D7": { math: "\\blackhourglass" },
      "\u29D8": { math: "\\lvzigzag" },
      "\u29D9": { math: "\\rvzigzag" },
      "\u29DA": { math: "\\Lvzigzag" },
      "\u29DB": { math: "\\Rvzigzag" },
      "\u29DD": { math: "\\tieinfty" },
      "\u29DE": { math: "\\nvinfty" },
      "\u29DF": { math: "\\multimapboth" },
      "\u29E0": { math: "\\laplac" },
      "\u29E1": { math: "\\lrtriangleeq" },
      "\u29E2": { math: "\\shuffle" },
      "\u29E3": { math: "\\eparsl" },
      "\u29E4": { math: "\\smeparsl" },
      "\u29E5": { math: "\\eqvparsl" },
      "\u29E6": { math: "\\gleichstark" },
      "\u29E7": { math: "\\thermod" },
      "\u29E8": { math: "\\downtriangleleftblack" },
      "\u29E9": { math: "\\downtrianglerightblack" },
      "\u29EA": { math: "\\blackdiamonddownarrow" },
      "\u29EB": { math: "\\blacklozenge" },
      "\u29EC": { math: "\\circledownarrow" },
      "\u29ED": { math: "\\blackcircledownarrow" },
      "\u29EE": { math: "\\errbarsquare" },
      "\u29EF": { math: "\\errbarblacksquare" },
      "\u29F0": { math: "\\errbardiamond" },
      "\u29F1": { math: "\\errbarblackdiamond" },
      "\u29F2": { math: "\\errbarcircle" },
      "\u29F3": { math: "\\errbarblackcircle" },
      "\u29F4": { math: "\\RuleDelayed" },
      "\u29F5": { math: "\\setminus" },
      "\u29F6": { math: "\\dsol" },
      "\u29F7": { math: "\\rsolbar" },
      "\u29F8": { math: "\\xsol" },
      "\u29F9": { math: "\\zhide" },
      "\u29FA": { math: "\\doubleplus" },
      "\u29FB": { math: "\\tripleplus" },
      "\u29FC": { math: "\\lcurvyangle" },
      "\u29FD": { math: "\\rcurvyangle" },
      "\u29FE": { math: "\\tplus" },
      "\u29FF": { math: "\\tminus" },
      "\u2A00": { math: "\\bigodot" },
      "\u2A01": { math: "\\bigoplus" },
      "\u2A02": { math: "\\bigotimes" },
      "\u2A03": { math: "\\bigcupdot" },
      "\u2A04": { math: "\\Elxuplus" },
      "\u2A05": { math: "\\ElzThr" },
      "\u2A06": { math: "\\Elxsqcup" },
      "\u2A07": { math: "\\ElzInf" },
      "\u2A08": { math: "\\ElzSup" },
      "\u2A09": { math: "\\varprod" },
      "\u2A0A": { math: "\\modtwosum" },
      "\u2A0B": { math: "\\sumint" },
      "\u2A0C": { math: "\\iiiint" },
      "\u2A0D": { math: "\\ElzCint" },
      "\u2A0E": { math: "\\intBar" },
      "\u2A0F": { math: "\\clockoint" },
      "\u2A11": { math: "\\awint" },
      "\u2A12": { math: "\\rppolint" },
      "\u2A13": { math: "\\scpolint" },
      "\u2A14": { math: "\\npolint" },
      "\u2A15": { math: "\\pointint" },
      "\u2A16": { math: "\\sqrint" },
      "\u2A17": { math: "\\intlarhk" },
      "\u2A18": { math: "\\intx" },
      "\u2A19": { math: "\\intcap" },
      "\u2A1A": { math: "\\intcup" },
      "\u2A1B": { math: "\\upint" },
      "\u2A1C": { math: "\\lowint" },
      "\u2A1D": { math: "\\Join" },
      "\u2A1E": { math: "\\bigtriangleleft" },
      "\u2A1F": { math: "\\zcmp" },
      "\u2A20": { math: "\\zpipe" },
      "\u2A21": { math: "\\zproject" },
      "\u2A22": { math: "\\ringplus" },
      "\u2A23": { math: "\\plushat" },
      "\u2A24": { math: "\\simplus" },
      "\u2A26": { math: "\\plussim" },
      "\u2A27": { math: "\\plussubtwo" },
      "\u2A28": { math: "\\plustrif" },
      "\u2A29": { math: "\\commaminus" },
      "\u2A2B": { math: "\\minusfdots" },
      "\u2A2C": { math: "\\minusrdots" },
      "\u2A2F": { math: "\\ElzTimes" },
      "\u2A30": { math: "\\dottimes" },
      "\u2A31": { math: "\\timesbar" },
      "\u2A32": { math: "\\btimes" },
      "\u2A33": { math: "\\smashtimes" },
      "\u2A36": { math: "\\otimeshat" },
      "\u2A37": { math: "\\Otimes" },
      "\u2A38": { math: "\\odiv" },
      "\u2A39": { math: "\\triangleplus" },
      "\u2A3A": { math: "\\triangleminus" },
      "\u2A3B": { math: "\\triangletimes" },
      "\u2A3D": { math: "\\intprodr" },
      "\u2A3E": { math: "\\fcmp" },
      "\u2A3F": { math: "\\amalg" },
      "\u2A40": { math: "\\capdot" },
      "\u2A41": { math: "\\uminus" },
      "\u2A42": { math: "\\barcup" },
      "\u2A43": { math: "\\barcap" },
      "\u2A44": { math: "\\capwedge" },
      "\u2A45": { math: "\\cupvee" },
      "\u2A46": { math: "\\cupovercap" },
      "\u2A47": { math: "\\capovercup" },
      "\u2A48": { math: "\\cupbarcap" },
      "\u2A49": { math: "\\capbarcup" },
      "\u2A4A": { math: "\\twocups" },
      "\u2A4B": { math: "\\twocaps" },
      "\u2A4C": { math: "\\closedvarcup" },
      "\u2A4D": { math: "\\closedvarcap" },
      "\u2A4E": { math: "\\Sqcap" },
      "\u2A4F": { math: "\\Sqcup" },
      "\u2A50": { math: "\\closedvarcupsmashprod" },
      "\u2A51": { math: "\\wedgeodot" },
      "\u2A52": { math: "\\veeodot" },
      "\u2A53": { math: "\\ElzAnd" },
      "\u2A54": { math: "\\ElzOr" },
      "\u2A56": { math: "\\ElOr" },
      "\u2A57": { math: "\\bigslopedvee" },
      "\u2A58": { math: "\\bigslopedwedge" },
      "\u2A59": { math: "\\veeonwedge" },
      "\u2A5A": { math: "\\wedgemidvert" },
      "\u2A5B": { math: "\\veemidvert" },
      "\u2A5C": { math: "\\midbarwedge" },
      "\u2A5D": { math: "\\midbarvee" },
      "\u2A5E": { math: "\\perspcorrespond" },
      "\u2A5F": { math: "\\Elzminhat" },
      "\u2A60": { math: "\\wedgedoublebar" },
      "\u2A61": { math: "\\varveebar" },
      "\u2A62": { math: "\\doublebarvee" },
      "\u2A64": { math: "\\dsub" },
      "\u2A65": { math: "\\rsub" },
      "\u2A66": { math: "\\eqdot" },
      "\u2A67": { math: "\\dotequiv" },
      "\u2A68": { math: "\\equivVert" },
      "\u2A69": { math: "\\equivVvert" },
      "\u2A6A": { math: "\\dotsim" },
      "\u2A6B": { math: "\\simrdots" },
      "\u2A6C": { math: "\\simminussim" },
      "\u2A6D": { math: "\\congdot" },
      "\u2A6E": { math: "\\stackrel{*}{=}" },
      "\u2A6F": { math: "\\hatapprox" },
      "\u2A70": { math: "\\approxeqq" },
      "\u2A71": { math: "\\eqqplus" },
      "\u2A72": { math: "\\pluseqq" },
      "\u2A73": { math: "\\eqqsim" },
      "\u2A74": { math: "\\Coloneqq" },
      "\u2A75": { math: "\\Equal" },
      "\u2A76": { math: "\\Same" },
      "\u2A77": { math: "\\ddotseq" },
      "\u2A78": { math: "\\equivDD" },
      "\u2A79": { math: "\\ltcir" },
      "\u2A7A": { math: "\\gtcir" },
      "\u2A7B": { math: "\\ltquest" },
      "\u2A7C": { math: "\\gtquest" },
      "\u2A7D": { math: "\\leqslant", mathpackages: ["amssymb"] },
      "\u2A7D\u0338": { math: "\\nleqslant", mathpackages: ["amssymb"] },
      "\u2A7E": { math: "\\geqslant", mathpackages: ["amssymb"] },
      "\u2A7E\u0338": { math: "\\ngeqslant", mathpackages: ["amssymb"] },
      "\u2A7F": { math: "\\lesdot" },
      "\u2A80": { math: "\\gesdot" },
      "\u2A81": { math: "\\lesdoto" },
      "\u2A82": { math: "\\gesdoto" },
      "\u2A83": { math: "\\lesdotor" },
      "\u2A84": { math: "\\gesdotol" },
      "\u2A85": { math: "\\lessapprox" },
      "\u2A86": { math: "\\gtrapprox" },
      "\u2A87": { math: "\\lneq" },
      "\u2A88": { math: "\\gneq" },
      "\u2A89": { math: "\\lnapprox" },
      "\u2A8A": { math: "\\gnapprox" },
      "\u2A8B": { math: "\\lesseqqgtr" },
      "\u2A8C": { math: "\\gtreqqless" },
      "\u2A8D": { math: "\\lsime" },
      "\u2A8E": { math: "\\gsime" },
      "\u2A8F": { math: "\\lsimg" },
      "\u2A90": { math: "\\gsiml" },
      "\u2A91": { math: "\\lgE" },
      "\u2A92": { math: "\\glE" },
      "\u2A93": { math: "\\lesges" },
      "\u2A94": { math: "\\gesles" },
      "\u2A95": { math: "\\eqslantless" },
      "\u2A96": { math: "\\eqslantgtr" },
      "\u2A97": { math: "\\elsdot" },
      "\u2A98": { math: "\\egsdot" },
      "\u2A99": { math: "\\eqqless" },
      "\u2A9A": { math: "\\eqqgtr" },
      "\u2A9B": { math: "\\eqqslantless" },
      "\u2A9C": { math: "\\eqqslantgtr" },
      "\u2A9D": { math: "\\Pisymbol{ppi020}{117}" },
      "\u2A9E": { math: "\\Pisymbol{ppi020}{105}" },
      "\u2A9F": { math: "\\simlE" },
      "\u2AA0": { math: "\\simgE" },
      "\u2AA1": { math: "\\NestedLessLess" },
      "\u2AA1\u0338": { math: "\\NotNestedLessLess" },
      "\u2AA2": { math: "\\NestedGreaterGreater" },
      "\u2AA2\u0338": { math: "\\NotNestedGreaterGreater" },
      "\u2AA3": { math: "\\partialmeetcontraction" },
      "\u2AA4": { math: "\\glj" },
      "\u2AA5": { math: "\\gla" },
      "\u2AA6": { math: "\\leftslice" },
      "\u2AA7": { math: "\\rightslice" },
      "\u2AA8": { math: "\\lescc" },
      "\u2AA9": { math: "\\gescc" },
      "\u2AAA": { math: "\\smt" },
      "\u2AAB": { math: "\\lat" },
      "\u2AAC": { math: "\\smte" },
      "\u2AAD": { math: "\\late" },
      "\u2AAE": { math: "\\bumpeqq" },
      "\u2AAF": { math: "\\preceq" },
      "\u2AAF\u0338": { math: "\\not\\preceq" },
      "\u2AB0": { math: "\\succeq" },
      "\u2AB0\u0338": { math: "\\not\\succeq" },
      "\u2AB1": { math: "\\precneq" },
      "\u2AB2": { math: "\\succneq" },
      "\u2AB3": { math: "\\preceqq" },
      "\u2AB4": { math: "\\succeqq" },
      "\u2AB5": { math: "\\precneqq" },
      "\u2AB6": { math: "\\succneqq" },
      "\u2AB7": { math: "\\precapprox" },
      "\u2AB8": { math: "\\succapprox" },
      "\u2AB9": { math: "\\precnapprox" },
      "\u2ABA": { math: "\\succnapprox" },
      "\u2ABB": { math: "\\llcurly" },
      "\u2ABC": { math: "\\ggcurly" },
      "\u2ABD": { math: "\\subsetdot" },
      "\u2ABE": { math: "\\supsetdot" },
      "\u2ABF": { math: "\\subsetplus" },
      "\u2AC0": { math: "\\supsetplus" },
      "\u2AC1": { math: "\\submult" },
      "\u2AC2": { math: "\\supmult" },
      "\u2AC3": { math: "\\subedot" },
      "\u2AC4": { math: "\\supedot" },
      "\u2AC5": { math: "\\subseteqq" },
      "\u2AC5\u0338": { math: "\\nsubseteqq" },
      "\u2AC6": { math: "\\supseteqq" },
      "\u2AC6\u0338": { math: "\\nsupseteqq" },
      "\u2AC7": { math: "\\subsim" },
      "\u2AC8": { math: "\\supsim" },
      "\u2AC9": { math: "\\subsetapprox" },
      "\u2ACA": { math: "\\supsetapprox" },
      "\u2ACB": { math: "\\subsetneqq" },
      "\u2ACC": { math: "\\supsetneqq" },
      "\u2ACD": { math: "\\lsqhook" },
      "\u2ACE": { math: "\\rsqhook" },
      "\u2ACF": { math: "\\csub" },
      "\u2AD0": { math: "\\csup" },
      "\u2AD1": { math: "\\csube" },
      "\u2AD2": { math: "\\csupe" },
      "\u2AD3": { math: "\\subsup" },
      "\u2AD4": { math: "\\supsub" },
      "\u2AD5": { math: "\\subsub" },
      "\u2AD6": { math: "\\supsup" },
      "\u2AD7": { math: "\\suphsub" },
      "\u2AD8": { math: "\\supdsub" },
      "\u2AD9": { math: "\\forkv" },
      "\u2ADA": { math: "\\topfork" },
      "\u2ADB": { math: "\\mlcp" },
      "\u2ADC": { math: "\\forks" },
      "\u2ADD": { math: "\\forksnot" },
      "\u2ADD\u0338": { math: "\\forks" },
      "\u2ADE": { math: "\\shortlefttack" },
      "\u2ADF": { math: "\\shortdowntack" },
      "\u2AE0": { math: "\\shortuptack" },
      "\u2AE1": { math: "\\perps" },
      "\u2AE2": { math: "\\vDdash" },
      "\u2AE3": { math: "\\dashV" },
      "\u2AE4": { math: "\\Dashv" },
      "\u2AE5": { math: "\\DashV" },
      "\u2AE6": { math: "\\varVdash" },
      "\u2AE7": { math: "\\Barv" },
      "\u2AE8": { math: "\\vBar" },
      "\u2AE9": { math: "\\vBarv" },
      "\u2AEA": { math: "\\Top" },
      "\u2AEC": { math: "\\Not" },
      "\u2AED": { math: "\\bNot" },
      "\u2AEE": { math: "\\revnmid" },
      "\u2AEF": { math: "\\cirmid" },
      "\u2AF0": { math: "\\midcir" },
      "\u2AF1": { math: "\\topcir" },
      "\u2AF2": { math: "\\nhpar" },
      "\u2AF3": { math: "\\parsim" },
      "\u2AF4": { math: "\\interleave" },
      "\u2AF5": { math: "\\nhVvert" },
      "\u2AF6": { math: "\\Elztdcol" },
      "\u2AF7": { math: "\\lllnest" },
      "\u2AF8": { math: "\\gggnest" },
      "\u2AF9": { math: "\\leqqslant" },
      "\u2AFA": { math: "\\geqqslant" },
      "\u2AFB": { math: "\\trslash" },
      "\u2AFC": { math: "\\biginterleave" },
      "\u2AFD": { math: "{{/}\\!\\!{/}}" },
      "\u2AFD\u20E5": { math: "{\\rlap{\\textbackslash}{{/}\\!\\!{/}}}" },
      "\u2AFE": { math: "\\talloblong" },
      "\u2AFF": { math: "\\bigtalloblong" },
      "\u2B12": { math: "\\squaretopblack" },
      "\u2B13": { math: "\\squarebotblack" },
      "\u2B14": { math: "\\squareurblack" },
      "\u2B15": { math: "\\squarellblack" },
      "\u2B16": { math: "\\diamondleftblack" },
      "\u2B17": { math: "\\diamondrightblack" },
      "\u2B18": { math: "\\diamondtopblack" },
      "\u2B19": { math: "\\diamondbotblack" },
      "\u2B1A": { math: "\\dottedsquare" },
      "\u2B1B": { math: "\\blacksquare" },
      "\u2B1C": { math: "\\square" },
      "\u2B1D": { math: "\\vysmblksquare" },
      "\u2B1E": { math: "\\vysmwhtsquare" },
      "\u2B1F": { math: "\\pentagonblack" },
      "\u2B20": { math: "\\pentagon" },
      "\u2B21": { math: "\\varhexagon" },
      "\u2B22": { math: "\\varhexagonblack" },
      "\u2B23": { math: "\\hexagonblack" },
      "\u2B24": { math: "\\lgblkcircle" },
      "\u2B25": { math: "\\mdblkdiamond" },
      "\u2B26": { math: "\\mdwhtdiamond" },
      "\u2B27": { math: "\\mdblklozenge" },
      "\u2B28": { math: "\\mdwhtlozenge" },
      "\u2B29": { math: "\\smblkdiamond" },
      "\u2B2A": { math: "\\smblklozenge" },
      "\u2B2B": { math: "\\smwhtlozenge" },
      "\u2B2C": { math: "\\blkhorzoval" },
      "\u2B2D": { math: "\\whthorzoval" },
      "\u2B2E": { math: "\\blkvertoval" },
      "\u2B2F": { math: "\\whtvertoval" },
      "\u2B30": { math: "\\circleonleftarrow" },
      "\u2B31": { math: "\\leftthreearrows" },
      "\u2B32": { math: "\\leftarrowonoplus" },
      "\u2B33": { math: "\\longleftsquigarrow" },
      "\u2B34": { math: "\\nvtwoheadleftarrow" },
      "\u2B35": { math: "\\nVtwoheadleftarrow" },
      "\u2B36": { math: "\\twoheadmapsfrom" },
      "\u2B37": { math: "\\twoheadleftdbkarrow" },
      "\u2B38": { math: "\\leftdotarrow" },
      "\u2B39": { math: "\\nvleftarrowtail" },
      "\u2B3A": { math: "\\nVleftarrowtail" },
      "\u2B3B": { math: "\\twoheadleftarrowtail" },
      "\u2B3C": { math: "\\nvtwoheadleftarrowtail" },
      "\u2B3D": { math: "\\nVtwoheadleftarrowtail" },
      "\u2B3E": { math: "\\leftarrowx" },
      "\u2B3F": { math: "\\leftcurvedarrow" },
      "\u2B40": { math: "\\equalleftarrow" },
      "\u2B41": { math: "\\bsimilarleftarrow" },
      "\u2B42": { math: "\\leftarrowbackapprox" },
      "\u2B43": { math: "\\rightarrowgtr" },
      "\u2B44": { math: "\\rightarrowsupset" },
      "\u2B45": { math: "\\LLeftarrow" },
      "\u2B46": { math: "\\RRightarrow" },
      "\u2B47": { math: "\\bsimilarrightarrow" },
      "\u2B48": { math: "\\rightarrowbackapprox" },
      "\u2B49": { math: "\\similarleftarrow" },
      "\u2B4A": { math: "\\leftarrowapprox" },
      "\u2B4B": { math: "\\leftarrowbsimilar" },
      "\u2B4C": { math: "\\rightarrowbsimilar" },
      "\u2B50": { math: "\\medwhitestar" },
      "\u2B51": { math: "\\medblackstar" },
      "\u2B52": { math: "\\smwhitestar" },
      "\u2B53": { math: "\\rightpentagonblack" },
      "\u2B54": { math: "\\rightpentagon" },
      "\u3008": { math: "\\langle" },
      "\u3009": { math: "\\rangle" },
      "\u3012": { math: "\\postalmark" },
      "\u3014": { math: "\\lbrbrak" },
      "\u3015": { math: "\\rbrbrak" },
      "\u301A": { math: "\\openbracketleft" },
      "\u301B": { math: "\\openbracketright" },
      "\u3030": { math: "\\hzigzag" },
      \uFB00: { text: "ff" },
      \uFB01: { text: "fi" },
      \uFB02: { text: "fl" },
      \uFB03: { text: "ffi" },
      \uFB04: { text: "ffl" },
      \uFB05: { text: "st" },
      \uFB06: { text: "st" },
      "\uFFFD": { text: "\\dbend", commandspacer: true },
      "\u{1D400}": { math: "\\mathbf{A}" },
      "\u{1D401}": { math: "\\mathbf{B}" },
      "\u{1D402}": { math: "\\mathbf{C}" },
      "\u{1D403}": { math: "\\mathbf{D}" },
      "\u{1D404}": { math: "\\mathbf{E}" },
      "\u{1D405}": { math: "\\mathbf{F}" },
      "\u{1D406}": { math: "\\mathbf{G}" },
      "\u{1D407}": { math: "\\mathbf{H}" },
      "\u{1D408}": { math: "\\mathbf{I}" },
      "\u{1D409}": { math: "\\mathbf{J}" },
      "\u{1D40A}": { math: "\\mathbf{K}" },
      "\u{1D40B}": { math: "\\mathbf{L}" },
      "\u{1D40C}": { math: "\\mathbf{M}" },
      "\u{1D40D}": { math: "\\mathbf{N}" },
      "\u{1D40E}": { math: "\\mathbf{O}" },
      "\u{1D40F}": { math: "\\mathbf{P}" },
      "\u{1D410}": { math: "\\mathbf{Q}" },
      "\u{1D411}": { math: "\\mathbf{R}" },
      "\u{1D412}": { math: "\\mathbf{S}" },
      "\u{1D413}": { math: "\\mathbf{T}" },
      "\u{1D414}": { math: "\\mathbf{U}" },
      "\u{1D415}": { math: "\\mathbf{V}" },
      "\u{1D416}": { math: "\\mathbf{W}" },
      "\u{1D417}": { math: "\\mathbf{X}" },
      "\u{1D418}": { math: "\\mathbf{Y}" },
      "\u{1D419}": { math: "\\mathbf{Z}" },
      "\u{1D41A}": { math: "\\mathbf{a}" },
      "\u{1D41B}": { math: "\\mathbf{b}" },
      "\u{1D41C}": { math: "\\mathbf{c}" },
      "\u{1D41D}": { math: "\\mathbf{d}" },
      "\u{1D41E}": { math: "\\mathbf{e}" },
      "\u{1D41F}": { math: "\\mathbf{f}" },
      "\u{1D420}": { math: "\\mathbf{g}" },
      "\u{1D421}": { math: "\\mathbf{h}" },
      "\u{1D422}": { math: "\\mathbf{i}" },
      "\u{1D423}": { math: "\\mathbf{j}" },
      "\u{1D424}": { math: "\\mathbf{k}" },
      "\u{1D425}": { math: "\\mathbf{l}" },
      "\u{1D426}": { math: "\\mathbf{m}" },
      "\u{1D427}": { math: "\\mathbf{n}" },
      "\u{1D428}": { math: "\\mathbf{o}" },
      "\u{1D429}": { math: "\\mathbf{p}" },
      "\u{1D42A}": { math: "\\mathbf{q}" },
      "\u{1D42B}": { math: "\\mathbf{r}" },
      "\u{1D42C}": { math: "\\mathbf{s}" },
      "\u{1D42D}": { math: "\\mathbf{t}" },
      "\u{1D42E}": { math: "\\mathbf{u}" },
      "\u{1D42F}": { math: "\\mathbf{v}" },
      "\u{1D430}": { math: "\\mathbf{w}" },
      "\u{1D431}": { math: "\\mathbf{x}" },
      "\u{1D432}": { math: "\\mathbf{y}" },
      "\u{1D433}": { math: "\\mathbf{z}" },
      "\u{1D434}": { math: "\\mathsl{A}" },
      "\u{1D435}": { math: "\\mathsl{B}" },
      "\u{1D436}": { math: "\\mathsl{C}" },
      "\u{1D437}": { math: "\\mathsl{D}" },
      "\u{1D438}": { math: "\\mathsl{E}" },
      "\u{1D439}": { math: "\\mathsl{F}" },
      "\u{1D43A}": { math: "\\mathsl{G}" },
      "\u{1D43B}": { math: "\\mathsl{H}" },
      "\u{1D43C}": { math: "\\mathsl{I}" },
      "\u{1D43D}": { math: "\\mathsl{J}" },
      "\u{1D43E}": { math: "\\mathsl{K}" },
      "\u{1D43F}": { math: "\\mathsl{L}" },
      "\u{1D440}": { math: "\\mathsl{M}" },
      "\u{1D441}": { math: "\\mathsl{N}" },
      "\u{1D442}": { math: "\\mathsl{O}" },
      "\u{1D443}": { math: "\\mathsl{P}" },
      "\u{1D444}": { math: "\\mathsl{Q}" },
      "\u{1D445}": { math: "\\mathsl{R}" },
      "\u{1D446}": { math: "\\mathsl{S}" },
      "\u{1D447}": { math: "\\mathsl{T}" },
      "\u{1D448}": { math: "\\mathsl{U}" },
      "\u{1D449}": { math: "\\mathsl{V}" },
      "\u{1D44A}": { math: "\\mathsl{W}" },
      "\u{1D44B}": { math: "\\mathsl{X}" },
      "\u{1D44C}": { math: "\\mathsl{Y}" },
      "\u{1D44D}": { math: "\\mathsl{Z}" },
      "\u{1D44E}": { math: "\\mathsl{a}" },
      "\u{1D44F}": { math: "\\mathsl{b}" },
      "\u{1D450}": { math: "\\mathsl{c}" },
      "\u{1D451}": { math: "\\mathsl{d}" },
      "\u{1D452}": { math: "\\mathsl{e}" },
      "\u{1D453}": { math: "\\mathsl{f}" },
      "\u{1D454}": { math: "\\mathsl{g}" },
      "\u{1D456}": { math: "\\mathsl{i}" },
      "\u{1D457}": { math: "\\mathsl{j}" },
      "\u{1D458}": { math: "\\mathsl{k}" },
      "\u{1D459}": { math: "\\mathsl{l}" },
      "\u{1D45A}": { math: "\\mathsl{m}" },
      "\u{1D45B}": { math: "\\mathsl{n}" },
      "\u{1D45C}": { math: "\\mathsl{o}" },
      "\u{1D45D}": { math: "\\mathsl{p}" },
      "\u{1D45E}": { math: "\\mathsl{q}" },
      "\u{1D45F}": { math: "\\mathsl{r}" },
      "\u{1D460}": { math: "\\mathsl{s}" },
      "\u{1D461}": { math: "\\mathsl{t}" },
      "\u{1D462}": { math: "\\mathsl{u}" },
      "\u{1D463}": { math: "\\mathsl{v}" },
      "\u{1D464}": { math: "\\mathsl{w}" },
      "\u{1D465}": { math: "\\mathsl{x}" },
      "\u{1D466}": { math: "\\mathsl{y}" },
      "\u{1D467}": { math: "\\mathsl{z}" },
      "\u{1D468}": { math: "\\mathbit{A}" },
      "\u{1D469}": { math: "\\mathbit{B}" },
      "\u{1D46A}": { math: "\\mathbit{C}" },
      "\u{1D46B}": { math: "\\mathbit{D}" },
      "\u{1D46C}": { math: "\\mathbit{E}" },
      "\u{1D46D}": { math: "\\mathbit{F}" },
      "\u{1D46E}": { math: "\\mathbit{G}" },
      "\u{1D46F}": { math: "\\mathbit{H}" },
      "\u{1D470}": { math: "\\mathbit{I}" },
      "\u{1D471}": { math: "\\mathbit{J}" },
      "\u{1D472}": { math: "\\mathbit{K}" },
      "\u{1D473}": { math: "\\mathbit{L}" },
      "\u{1D474}": { math: "\\mathbit{M}" },
      "\u{1D475}": { math: "\\mathbit{N}" },
      "\u{1D476}": { math: "\\mathbit{O}" },
      "\u{1D477}": { math: "\\mathbit{P}" },
      "\u{1D478}": { math: "\\mathbit{Q}" },
      "\u{1D479}": { math: "\\mathbit{R}" },
      "\u{1D47A}": { math: "\\mathbit{S}" },
      "\u{1D47B}": { math: "\\mathbit{T}" },
      "\u{1D47C}": { math: "\\mathbit{U}" },
      "\u{1D47D}": { math: "\\mathbit{V}" },
      "\u{1D47E}": { math: "\\mathbit{W}" },
      "\u{1D47F}": { math: "\\mathbit{X}" },
      "\u{1D480}": { math: "\\mathbit{Y}" },
      "\u{1D481}": { math: "\\mathbit{Z}" },
      "\u{1D482}": { math: "\\mathbit{a}" },
      "\u{1D483}": { math: "\\mathbit{b}" },
      "\u{1D484}": { math: "\\mathbit{c}" },
      "\u{1D485}": { math: "\\mathbit{d}" },
      "\u{1D486}": { math: "\\mathbit{e}" },
      "\u{1D487}": { math: "\\mathbit{f}" },
      "\u{1D488}": { math: "\\mathbit{g}" },
      "\u{1D489}": { math: "\\mathbit{h}" },
      "\u{1D48A}": { math: "\\mathbit{i}" },
      "\u{1D48B}": { math: "\\mathbit{j}" },
      "\u{1D48C}": { math: "\\mathbit{k}" },
      "\u{1D48D}": { math: "\\mathbit{l}" },
      "\u{1D48E}": { math: "\\mathbit{m}" },
      "\u{1D48F}": { math: "\\mathbit{n}" },
      "\u{1D490}": { math: "\\mathbit{o}" },
      "\u{1D491}": { math: "\\mathbit{p}" },
      "\u{1D492}": { math: "\\mathbit{q}" },
      "\u{1D493}": { math: "\\mathbit{r}" },
      "\u{1D494}": { math: "\\mathbit{s}" },
      "\u{1D495}": { math: "\\mathbit{t}" },
      "\u{1D496}": { math: "\\mathbit{u}" },
      "\u{1D497}": { math: "\\mathbit{v}" },
      "\u{1D498}": { math: "\\mathbit{w}" },
      "\u{1D499}": { math: "\\mathbit{x}" },
      "\u{1D49A}": { math: "\\mathbit{y}" },
      "\u{1D49B}": { math: "\\mathbit{z}" },
      "\u{1D49C}": { math: "\\mathscr{A}" },
      "\u{1D49E}": { math: "\\mathscr{C}" },
      "\u{1D49F}": { math: "\\mathscr{D}" },
      "\u{1D4A2}": { math: "\\mathscr{G}" },
      "\u{1D4A5}": { math: "\\mathscr{J}" },
      "\u{1D4A6}": { math: "\\mathscr{K}" },
      "\u{1D4A9}": { math: "\\mathscr{N}" },
      "\u{1D4AA}": { math: "\\mathscr{O}" },
      "\u{1D4AB}": { math: "\\mathscr{P}" },
      "\u{1D4AC}": { math: "\\mathscr{Q}" },
      "\u{1D4AE}": { math: "\\mathscr{S}" },
      "\u{1D4AF}": { math: "\\mathscr{T}" },
      "\u{1D4B0}": { math: "\\mathscr{U}" },
      "\u{1D4B1}": { math: "\\mathscr{V}" },
      "\u{1D4B2}": { math: "\\mathscr{W}" },
      "\u{1D4B3}": { math: "\\mathscr{X}" },
      "\u{1D4B4}": { math: "\\mathscr{Y}" },
      "\u{1D4B5}": { math: "\\mathscr{Z}" },
      "\u{1D4B6}": { math: "\\mathscr{a}" },
      "\u{1D4B7}": { math: "\\mathscr{b}" },
      "\u{1D4B8}": { math: "\\mathscr{c}" },
      "\u{1D4B9}": { math: "\\mathscr{d}" },
      "\u{1D4BB}": { math: "\\mathscr{f}" },
      "\u{1D4BD}": { math: "\\mathscr{h}" },
      "\u{1D4BE}": { math: "\\mathscr{i}" },
      "\u{1D4BF}": { math: "\\mathscr{j}" },
      "\u{1D4C0}": { math: "\\mathscr{k}" },
      "\u{1D4C1}": { math: "\\mathscr{l}" },
      "\u{1D4C2}": { math: "\\mathscr{m}" },
      "\u{1D4C3}": { math: "\\mathscr{n}" },
      "\u{1D4C5}": { math: "\\mathscr{p}" },
      "\u{1D4C6}": { math: "\\mathscr{q}" },
      "\u{1D4C7}": { math: "\\mathscr{r}" },
      "\u{1D4C8}": { math: "\\mathscr{s}" },
      "\u{1D4C9}": { math: "\\mathscr{t}" },
      "\u{1D4CA}": { math: "\\mathscr{u}" },
      "\u{1D4CB}": { math: "\\mathscr{v}" },
      "\u{1D4CC}": { math: "\\mathscr{w}" },
      "\u{1D4CD}": { math: "\\mathscr{x}" },
      "\u{1D4CE}": { math: "\\mathscr{y}" },
      "\u{1D4CF}": { math: "\\mathscr{z}" },
      "\u{1D4D0}": { math: "\\mathmit{A}" },
      "\u{1D4D1}": { math: "\\mathmit{B}" },
      "\u{1D4D2}": { math: "\\mathmit{C}" },
      "\u{1D4D3}": { math: "\\mathmit{D}" },
      "\u{1D4D4}": { math: "\\mathmit{E}" },
      "\u{1D4D5}": { math: "\\mathmit{F}" },
      "\u{1D4D6}": { math: "\\mathmit{G}" },
      "\u{1D4D7}": { math: "\\mathmit{H}" },
      "\u{1D4D8}": { math: "\\mathmit{I}" },
      "\u{1D4D9}": { math: "\\mathmit{J}" },
      "\u{1D4DA}": { math: "\\mathmit{K}" },
      "\u{1D4DB}": { math: "\\mathmit{L}" },
      "\u{1D4DC}": { math: "\\mathmit{M}" },
      "\u{1D4DD}": { math: "\\mathmit{N}" },
      "\u{1D4DE}": { math: "\\mathmit{O}" },
      "\u{1D4DF}": { math: "\\mathmit{P}" },
      "\u{1D4E0}": { math: "\\mathmit{Q}" },
      "\u{1D4E1}": { math: "\\mathmit{R}" },
      "\u{1D4E2}": { math: "\\mathmit{S}" },
      "\u{1D4E3}": { math: "\\mathmit{T}" },
      "\u{1D4E4}": { math: "\\mathmit{U}" },
      "\u{1D4E5}": { math: "\\mathmit{V}" },
      "\u{1D4E6}": { math: "\\mathmit{W}" },
      "\u{1D4E7}": { math: "\\mathmit{X}" },
      "\u{1D4E8}": { math: "\\mathmit{Y}" },
      "\u{1D4E9}": { math: "\\mathmit{Z}" },
      "\u{1D4EA}": { math: "\\mathmit{a}" },
      "\u{1D4EB}": { math: "\\mathmit{b}" },
      "\u{1D4EC}": { math: "\\mathmit{c}" },
      "\u{1D4ED}": { math: "\\mathmit{d}" },
      "\u{1D4EE}": { math: "\\mathmit{e}" },
      "\u{1D4EF}": { math: "\\mathmit{f}" },
      "\u{1D4F0}": { math: "\\mathmit{g}" },
      "\u{1D4F1}": { math: "\\mathmit{h}" },
      "\u{1D4F2}": { math: "\\mathmit{i}" },
      "\u{1D4F3}": { math: "\\mathmit{j}" },
      "\u{1D4F4}": { math: "\\mathmit{k}" },
      "\u{1D4F5}": { math: "\\mathmit{l}" },
      "\u{1D4F6}": { math: "\\mathmit{m}" },
      "\u{1D4F7}": { math: "\\mathmit{n}" },
      "\u{1D4F8}": { math: "\\mathmit{o}" },
      "\u{1D4F9}": { math: "\\mathmit{p}" },
      "\u{1D4FA}": { math: "\\mathmit{q}" },
      "\u{1D4FB}": { math: "\\mathmit{r}" },
      "\u{1D4FC}": { math: "\\mathmit{s}" },
      "\u{1D4FD}": { math: "\\mathmit{t}" },
      "\u{1D4FE}": { math: "\\mathmit{u}" },
      "\u{1D4FF}": { math: "\\mathmit{v}" },
      "\u{1D500}": { math: "\\mathmit{w}" },
      "\u{1D501}": { math: "\\mathmit{x}" },
      "\u{1D502}": { math: "\\mathmit{y}" },
      "\u{1D503}": { math: "\\mathmit{z}" },
      "\u{1D504}": { math: "\\mathfrak{A}" },
      "\u{1D505}": { math: "\\mathfrak{B}" },
      "\u{1D507}": { math: "\\mathfrak{D}" },
      "\u{1D508}": { math: "\\mathfrak{E}" },
      "\u{1D509}": { math: "\\mathfrak{F}" },
      "\u{1D50A}": { math: "\\mathfrak{G}" },
      "\u{1D50D}": { math: "\\mathfrak{J}" },
      "\u{1D50E}": { math: "\\mathfrak{K}" },
      "\u{1D50F}": { math: "\\mathfrak{L}" },
      "\u{1D510}": { math: "\\mathfrak{M}" },
      "\u{1D511}": { math: "\\mathfrak{N}" },
      "\u{1D512}": { math: "\\mathfrak{O}" },
      "\u{1D513}": { math: "\\mathfrak{P}" },
      "\u{1D514}": { math: "\\mathfrak{Q}" },
      "\u{1D516}": { math: "\\mathfrak{S}" },
      "\u{1D517}": { math: "\\mathfrak{T}" },
      "\u{1D518}": { math: "\\mathfrak{U}" },
      "\u{1D519}": { math: "\\mathfrak{V}" },
      "\u{1D51A}": { math: "\\mathfrak{W}" },
      "\u{1D51B}": { math: "\\mathfrak{X}" },
      "\u{1D51C}": { math: "\\mathfrak{Y}" },
      "\u{1D51E}": { math: "\\mathfrak{a}" },
      "\u{1D51F}": { math: "\\mathfrak{b}" },
      "\u{1D520}": { math: "\\mathfrak{c}" },
      "\u{1D521}": { math: "\\mathfrak{d}" },
      "\u{1D522}": { math: "\\mathfrak{e}" },
      "\u{1D523}": { math: "\\mathfrak{f}" },
      "\u{1D524}": { math: "\\mathfrak{g}" },
      "\u{1D525}": { math: "\\mathfrak{h}" },
      "\u{1D526}": { math: "\\mathfrak{i}" },
      "\u{1D527}": { math: "\\mathfrak{j}" },
      "\u{1D528}": { math: "\\mathfrak{k}" },
      "\u{1D529}": { math: "\\mathfrak{l}" },
      "\u{1D52A}": { math: "\\mathfrak{m}" },
      "\u{1D52B}": { math: "\\mathfrak{n}" },
      "\u{1D52C}": { math: "\\mathfrak{o}" },
      "\u{1D52D}": { math: "\\mathfrak{p}" },
      "\u{1D52E}": { math: "\\mathfrak{q}" },
      "\u{1D52F}": { math: "\\mathfrak{r}" },
      "\u{1D530}": { math: "\\mathfrak{s}" },
      "\u{1D531}": { math: "\\mathfrak{t}" },
      "\u{1D532}": { math: "\\mathfrak{u}" },
      "\u{1D533}": { math: "\\mathfrak{v}" },
      "\u{1D534}": { math: "\\mathfrak{w}" },
      "\u{1D535}": { math: "\\mathfrak{x}" },
      "\u{1D536}": { math: "\\mathfrak{y}" },
      "\u{1D537}": { math: "\\mathfrak{z}" },
      "\u{1D538}": { math: "\\mathbb{A}" },
      "\u{1D539}": { math: "\\mathbb{B}" },
      "\u{1D53B}": { math: "\\mathbb{D}" },
      "\u{1D53C}": { math: "\\mathbb{E}" },
      "\u{1D53D}": { math: "\\mathbb{F}" },
      "\u{1D53E}": { math: "\\mathbb{G}" },
      "\u{1D540}": { math: "\\mathbb{I}" },
      "\u{1D541}": { math: "\\mathbb{J}" },
      "\u{1D542}": { math: "\\mathbb{K}" },
      "\u{1D543}": { math: "\\mathbb{L}" },
      "\u{1D544}": { math: "\\mathbb{M}" },
      "\u{1D546}": { math: "\\mathbb{O}" },
      "\u{1D54A}": { math: "\\mathbb{S}" },
      "\u{1D54B}": { math: "\\mathbb{T}" },
      "\u{1D54C}": { math: "\\mathbb{U}" },
      "\u{1D54D}": { math: "\\mathbb{V}" },
      "\u{1D54E}": { math: "\\mathbb{W}" },
      "\u{1D54F}": { math: "\\mathbb{X}" },
      "\u{1D550}": { math: "\\mathbb{Y}" },
      "\u{1D552}": { math: "\\mathbb{a}" },
      "\u{1D553}": { math: "\\mathbb{b}" },
      "\u{1D554}": { math: "\\mathbb{c}" },
      "\u{1D555}": { math: "\\mathbb{d}" },
      "\u{1D556}": { math: "\\mathbb{e}" },
      "\u{1D557}": { math: "\\mathbb{f}" },
      "\u{1D558}": { math: "\\mathbb{g}" },
      "\u{1D559}": { math: "\\mathbb{h}" },
      "\u{1D55A}": { math: "\\mathbb{i}" },
      "\u{1D55B}": { math: "\\mathbb{j}" },
      "\u{1D55C}": { math: "\\mathbb{k}" },
      "\u{1D55D}": { math: "\\mathbb{l}" },
      "\u{1D55E}": { math: "\\mathbb{m}" },
      "\u{1D55F}": { math: "\\mathbb{n}" },
      "\u{1D560}": { math: "\\mathbb{o}" },
      "\u{1D561}": { math: "\\mathbb{p}" },
      "\u{1D562}": { math: "\\mathbb{q}" },
      "\u{1D563}": { math: "\\mathbb{r}" },
      "\u{1D564}": { math: "\\mathbb{s}" },
      "\u{1D565}": { math: "\\mathbb{t}" },
      "\u{1D566}": { math: "\\mathbb{u}" },
      "\u{1D567}": { math: "\\mathbb{v}" },
      "\u{1D568}": { math: "\\mathbb{w}" },
      "\u{1D569}": { math: "\\mathbb{x}" },
      "\u{1D56A}": { math: "\\mathbb{y}" },
      "\u{1D56B}": { math: "\\mathbb{z}" },
      "\u{1D56C}": { math: "\\mathslbb{A}" },
      "\u{1D56D}": { math: "\\mathslbb{B}" },
      "\u{1D56E}": { math: "\\mathslbb{C}" },
      "\u{1D56F}": { math: "\\mathslbb{D}" },
      "\u{1D570}": { math: "\\mathslbb{E}" },
      "\u{1D571}": { math: "\\mathslbb{F}" },
      "\u{1D572}": { math: "\\mathslbb{G}" },
      "\u{1D573}": { math: "\\mathslbb{H}" },
      "\u{1D574}": { math: "\\mathslbb{I}" },
      "\u{1D575}": { math: "\\mathslbb{J}" },
      "\u{1D576}": { math: "\\mathslbb{K}" },
      "\u{1D577}": { math: "\\mathslbb{L}" },
      "\u{1D578}": { math: "\\mathslbb{M}" },
      "\u{1D579}": { math: "\\mathslbb{N}" },
      "\u{1D57A}": { math: "\\mathslbb{O}" },
      "\u{1D57B}": { math: "\\mathslbb{P}" },
      "\u{1D57C}": { math: "\\mathslbb{Q}" },
      "\u{1D57D}": { math: "\\mathslbb{R}" },
      "\u{1D57E}": { math: "\\mathslbb{S}" },
      "\u{1D57F}": { math: "\\mathslbb{T}" },
      "\u{1D580}": { math: "\\mathslbb{U}" },
      "\u{1D581}": { math: "\\mathslbb{V}" },
      "\u{1D582}": { math: "\\mathslbb{W}" },
      "\u{1D583}": { math: "\\mathslbb{X}" },
      "\u{1D584}": { math: "\\mathslbb{Y}" },
      "\u{1D585}": { math: "\\mathslbb{Z}" },
      "\u{1D586}": { math: "\\mathslbb{a}" },
      "\u{1D587}": { math: "\\mathslbb{b}" },
      "\u{1D588}": { math: "\\mathslbb{c}" },
      "\u{1D589}": { math: "\\mathslbb{d}" },
      "\u{1D58A}": { math: "\\mathslbb{e}" },
      "\u{1D58B}": { math: "\\mathslbb{f}" },
      "\u{1D58C}": { math: "\\mathslbb{g}" },
      "\u{1D58D}": { math: "\\mathslbb{h}" },
      "\u{1D58E}": { math: "\\mathslbb{i}" },
      "\u{1D58F}": { math: "\\mathslbb{j}" },
      "\u{1D590}": { math: "\\mathslbb{k}" },
      "\u{1D591}": { math: "\\mathslbb{l}" },
      "\u{1D592}": { math: "\\mathslbb{m}" },
      "\u{1D593}": { math: "\\mathslbb{n}" },
      "\u{1D594}": { math: "\\mathslbb{o}" },
      "\u{1D595}": { math: "\\mathslbb{p}" },
      "\u{1D596}": { math: "\\mathslbb{q}" },
      "\u{1D597}": { math: "\\mathslbb{r}" },
      "\u{1D598}": { math: "\\mathslbb{s}" },
      "\u{1D599}": { math: "\\mathslbb{t}" },
      "\u{1D59A}": { math: "\\mathslbb{u}" },
      "\u{1D59B}": { math: "\\mathslbb{v}" },
      "\u{1D59C}": { math: "\\mathslbb{w}" },
      "\u{1D59D}": { math: "\\mathslbb{x}" },
      "\u{1D59E}": { math: "\\mathslbb{y}" },
      "\u{1D59F}": { math: "\\mathslbb{z}" },
      "\u{1D5A0}": { math: "\\mathsf{A}" },
      "\u{1D5A1}": { math: "\\mathsf{B}" },
      "\u{1D5A2}": { math: "\\mathsf{C}" },
      "\u{1D5A3}": { math: "\\mathsf{D}" },
      "\u{1D5A4}": { math: "\\mathsf{E}" },
      "\u{1D5A5}": { math: "\\mathsf{F}" },
      "\u{1D5A6}": { math: "\\mathsf{G}" },
      "\u{1D5A7}": { math: "\\mathsf{H}" },
      "\u{1D5A8}": { math: "\\mathsf{I}" },
      "\u{1D5A9}": { math: "\\mathsf{J}" },
      "\u{1D5AA}": { math: "\\mathsf{K}" },
      "\u{1D5AB}": { math: "\\mathsf{L}" },
      "\u{1D5AC}": { math: "\\mathsf{M}" },
      "\u{1D5AD}": { math: "\\mathsf{N}" },
      "\u{1D5AE}": { math: "\\mathsf{O}" },
      "\u{1D5AF}": { math: "\\mathsf{P}" },
      "\u{1D5B0}": { math: "\\mathsf{Q}" },
      "\u{1D5B1}": { math: "\\mathsf{R}" },
      "\u{1D5B2}": { math: "\\mathsf{S}" },
      "\u{1D5B3}": { math: "\\mathsf{T}" },
      "\u{1D5B4}": { math: "\\mathsf{U}" },
      "\u{1D5B5}": { math: "\\mathsf{V}" },
      "\u{1D5B6}": { math: "\\mathsf{W}" },
      "\u{1D5B7}": { math: "\\mathsf{X}" },
      "\u{1D5B8}": { math: "\\mathsf{Y}" },
      "\u{1D5B9}": { math: "\\mathsf{Z}" },
      "\u{1D5BA}": { math: "\\mathsf{a}" },
      "\u{1D5BB}": { math: "\\mathsf{b}" },
      "\u{1D5BC}": { math: "\\mathsf{c}" },
      "\u{1D5BD}": { math: "\\mathsf{d}" },
      "\u{1D5BE}": { math: "\\mathsf{e}" },
      "\u{1D5BF}": { math: "\\mathsf{f}" },
      "\u{1D5C0}": { math: "\\mathsf{g}" },
      "\u{1D5C1}": { math: "\\mathsf{h}" },
      "\u{1D5C2}": { math: "\\mathsf{i}" },
      "\u{1D5C3}": { math: "\\mathsf{j}" },
      "\u{1D5C4}": { math: "\\mathsf{k}" },
      "\u{1D5C5}": { math: "\\mathsf{l}" },
      "\u{1D5C6}": { math: "\\mathsf{m}" },
      "\u{1D5C7}": { math: "\\mathsf{n}" },
      "\u{1D5C8}": { math: "\\mathsf{o}" },
      "\u{1D5C9}": { math: "\\mathsf{p}" },
      "\u{1D5CA}": { math: "\\mathsf{q}" },
      "\u{1D5CB}": { math: "\\mathsf{r}" },
      "\u{1D5CC}": { math: "\\mathsf{s}" },
      "\u{1D5CD}": { math: "\\mathsf{t}" },
      "\u{1D5CE}": { math: "\\mathsf{u}" },
      "\u{1D5CF}": { math: "\\mathsf{v}" },
      "\u{1D5D0}": { math: "\\mathsf{w}" },
      "\u{1D5D1}": { math: "\\mathsf{x}" },
      "\u{1D5D2}": { math: "\\mathsf{y}" },
      "\u{1D5D3}": { math: "\\mathsf{z}" },
      "\u{1D5D4}": { math: "\\mathsfbf{A}" },
      "\u{1D5D5}": { math: "\\mathsfbf{B}" },
      "\u{1D5D6}": { math: "\\mathsfbf{C}" },
      "\u{1D5D7}": { math: "\\mathsfbf{D}" },
      "\u{1D5D8}": { math: "\\mathsfbf{E}" },
      "\u{1D5D9}": { math: "\\mathsfbf{F}" },
      "\u{1D5DA}": { math: "\\mathsfbf{G}" },
      "\u{1D5DB}": { math: "\\mathsfbf{H}" },
      "\u{1D5DC}": { math: "\\mathsfbf{I}" },
      "\u{1D5DD}": { math: "\\mathsfbf{J}" },
      "\u{1D5DE}": { math: "\\mathsfbf{K}" },
      "\u{1D5DF}": { math: "\\mathsfbf{L}" },
      "\u{1D5E0}": { math: "\\mathsfbf{M}" },
      "\u{1D5E1}": { math: "\\mathsfbf{N}" },
      "\u{1D5E2}": { math: "\\mathsfbf{O}" },
      "\u{1D5E3}": { math: "\\mathsfbf{P}" },
      "\u{1D5E4}": { math: "\\mathsfbf{Q}" },
      "\u{1D5E5}": { math: "\\mathsfbf{R}" },
      "\u{1D5E6}": { math: "\\mathsfbf{S}" },
      "\u{1D5E7}": { math: "\\mathsfbf{T}" },
      "\u{1D5E8}": { math: "\\mathsfbf{U}" },
      "\u{1D5E9}": { math: "\\mathsfbf{V}" },
      "\u{1D5EA}": { math: "\\mathsfbf{W}" },
      "\u{1D5EB}": { math: "\\mathsfbf{X}" },
      "\u{1D5EC}": { math: "\\mathsfbf{Y}" },
      "\u{1D5ED}": { math: "\\mathsfbf{Z}" },
      "\u{1D5EE}": { math: "\\mathsfbf{a}" },
      "\u{1D5EF}": { math: "\\mathsfbf{b}" },
      "\u{1D5F0}": { math: "\\mathsfbf{c}" },
      "\u{1D5F1}": { math: "\\mathsfbf{d}" },
      "\u{1D5F2}": { math: "\\mathsfbf{e}" },
      "\u{1D5F3}": { math: "\\mathsfbf{f}" },
      "\u{1D5F4}": { math: "\\mathsfbf{g}" },
      "\u{1D5F5}": { math: "\\mathsfbf{h}" },
      "\u{1D5F6}": { math: "\\mathsfbf{i}" },
      "\u{1D5F7}": { math: "\\mathsfbf{j}" },
      "\u{1D5F8}": { math: "\\mathsfbf{k}" },
      "\u{1D5F9}": { math: "\\mathsfbf{l}" },
      "\u{1D5FA}": { math: "\\mathsfbf{m}" },
      "\u{1D5FB}": { math: "\\mathsfbf{n}" },
      "\u{1D5FC}": { math: "\\mathsfbf{o}" },
      "\u{1D5FD}": { math: "\\mathsfbf{p}" },
      "\u{1D5FE}": { math: "\\mathsfbf{q}" },
      "\u{1D5FF}": { math: "\\mathsfbf{r}" },
      "\u{1D600}": { math: "\\mathsfbf{s}" },
      "\u{1D601}": { math: "\\mathsfbf{t}" },
      "\u{1D602}": { math: "\\mathsfbf{u}" },
      "\u{1D603}": { math: "\\mathsfbf{v}" },
      "\u{1D604}": { math: "\\mathsfbf{w}" },
      "\u{1D605}": { math: "\\mathsfbf{x}" },
      "\u{1D606}": { math: "\\mathsfbf{y}" },
      "\u{1D607}": { math: "\\mathsfbf{z}" },
      "\u{1D608}": { math: "\\mathsfsl{A}" },
      "\u{1D609}": { math: "\\mathsfsl{B}" },
      "\u{1D60A}": { math: "\\mathsfsl{C}" },
      "\u{1D60B}": { math: "\\mathsfsl{D}" },
      "\u{1D60C}": { math: "\\mathsfsl{E}" },
      "\u{1D60D}": { math: "\\mathsfsl{F}" },
      "\u{1D60E}": { math: "\\mathsfsl{G}" },
      "\u{1D60F}": { math: "\\mathsfsl{H}" },
      "\u{1D610}": { math: "\\mathsfsl{I}" },
      "\u{1D611}": { math: "\\mathsfsl{J}" },
      "\u{1D612}": { math: "\\mathsfsl{K}" },
      "\u{1D613}": { math: "\\mathsfsl{L}" },
      "\u{1D614}": { math: "\\mathsfsl{M}" },
      "\u{1D615}": { math: "\\mathsfsl{N}" },
      "\u{1D616}": { math: "\\mathsfsl{O}" },
      "\u{1D617}": { math: "\\mathsfsl{P}" },
      "\u{1D618}": { math: "\\mathsfsl{Q}" },
      "\u{1D619}": { math: "\\mathsfsl{R}" },
      "\u{1D61A}": { math: "\\mathsfsl{S}" },
      "\u{1D61B}": { math: "\\mathsfsl{T}" },
      "\u{1D61C}": { math: "\\mathsfsl{U}" },
      "\u{1D61D}": { math: "\\mathsfsl{V}" },
      "\u{1D61E}": { math: "\\mathsfsl{W}" },
      "\u{1D61F}": { math: "\\mathsfsl{X}" },
      "\u{1D620}": { math: "\\mathsfsl{Y}" },
      "\u{1D621}": { math: "\\mathsfsl{Z}" },
      "\u{1D622}": { math: "\\mathsfsl{a}" },
      "\u{1D623}": { math: "\\mathsfsl{b}" },
      "\u{1D624}": { math: "\\mathsfsl{c}" },
      "\u{1D625}": { math: "\\mathsfsl{d}" },
      "\u{1D626}": { math: "\\mathsfsl{e}" },
      "\u{1D627}": { math: "\\mathsfsl{f}" },
      "\u{1D628}": { math: "\\mathsfsl{g}" },
      "\u{1D629}": { math: "\\mathsfsl{h}" },
      "\u{1D62A}": { math: "\\mathsfsl{i}" },
      "\u{1D62B}": { math: "\\mathsfsl{j}" },
      "\u{1D62C}": { math: "\\mathsfsl{k}" },
      "\u{1D62D}": { math: "\\mathsfsl{l}" },
      "\u{1D62E}": { math: "\\mathsfsl{m}" },
      "\u{1D62F}": { math: "\\mathsfsl{n}" },
      "\u{1D630}": { math: "\\mathsfsl{o}" },
      "\u{1D631}": { math: "\\mathsfsl{p}" },
      "\u{1D632}": { math: "\\mathsfsl{q}" },
      "\u{1D633}": { math: "\\mathsfsl{r}" },
      "\u{1D634}": { math: "\\mathsfsl{s}" },
      "\u{1D635}": { math: "\\mathsfsl{t}" },
      "\u{1D636}": { math: "\\mathsfsl{u}" },
      "\u{1D637}": { math: "\\mathsfsl{v}" },
      "\u{1D638}": { math: "\\mathsfsl{w}" },
      "\u{1D639}": { math: "\\mathsfsl{x}" },
      "\u{1D63A}": { math: "\\mathsfsl{y}" },
      "\u{1D63B}": { math: "\\mathsfsl{z}" },
      "\u{1D63C}": { math: "\\mathsfbfsl{A}" },
      "\u{1D63D}": { math: "\\mathsfbfsl{B}" },
      "\u{1D63E}": { math: "\\mathsfbfsl{C}" },
      "\u{1D63F}": { math: "\\mathsfbfsl{D}" },
      "\u{1D640}": { math: "\\mathsfbfsl{E}" },
      "\u{1D641}": { math: "\\mathsfbfsl{F}" },
      "\u{1D642}": { math: "\\mathsfbfsl{G}" },
      "\u{1D643}": { math: "\\mathsfbfsl{H}" },
      "\u{1D644}": { math: "\\mathsfbfsl{I}" },
      "\u{1D645}": { math: "\\mathsfbfsl{J}" },
      "\u{1D646}": { math: "\\mathsfbfsl{K}" },
      "\u{1D647}": { math: "\\mathsfbfsl{L}" },
      "\u{1D648}": { math: "\\mathsfbfsl{M}" },
      "\u{1D649}": { math: "\\mathsfbfsl{N}" },
      "\u{1D64A}": { math: "\\mathsfbfsl{O}" },
      "\u{1D64B}": { math: "\\mathsfbfsl{P}" },
      "\u{1D64C}": { math: "\\mathsfbfsl{Q}" },
      "\u{1D64D}": { math: "\\mathsfbfsl{R}" },
      "\u{1D64E}": { math: "\\mathsfbfsl{S}" },
      "\u{1D64F}": { math: "\\mathsfbfsl{T}" },
      "\u{1D650}": { math: "\\mathsfbfsl{U}" },
      "\u{1D651}": { math: "\\mathsfbfsl{V}" },
      "\u{1D652}": { math: "\\mathsfbfsl{W}" },
      "\u{1D653}": { math: "\\mathsfbfsl{X}" },
      "\u{1D654}": { math: "\\mathsfbfsl{Y}" },
      "\u{1D655}": { math: "\\mathsfbfsl{Z}" },
      "\u{1D656}": { math: "\\mathsfbfsl{a}" },
      "\u{1D657}": { math: "\\mathsfbfsl{b}" },
      "\u{1D658}": { math: "\\mathsfbfsl{c}" },
      "\u{1D659}": { math: "\\mathsfbfsl{d}" },
      "\u{1D65A}": { math: "\\mathsfbfsl{e}" },
      "\u{1D65B}": { math: "\\mathsfbfsl{f}" },
      "\u{1D65C}": { math: "\\mathsfbfsl{g}" },
      "\u{1D65D}": { math: "\\mathsfbfsl{h}" },
      "\u{1D65E}": { math: "\\mathsfbfsl{i}" },
      "\u{1D65F}": { math: "\\mathsfbfsl{j}" },
      "\u{1D660}": { math: "\\mathsfbfsl{k}" },
      "\u{1D661}": { math: "\\mathsfbfsl{l}" },
      "\u{1D662}": { math: "\\mathsfbfsl{m}" },
      "\u{1D663}": { math: "\\mathsfbfsl{n}" },
      "\u{1D664}": { math: "\\mathsfbfsl{o}" },
      "\u{1D665}": { math: "\\mathsfbfsl{p}" },
      "\u{1D666}": { math: "\\mathsfbfsl{q}" },
      "\u{1D667}": { math: "\\mathsfbfsl{r}" },
      "\u{1D668}": { math: "\\mathsfbfsl{s}" },
      "\u{1D669}": { math: "\\mathsfbfsl{t}" },
      "\u{1D66A}": { math: "\\mathsfbfsl{u}" },
      "\u{1D66B}": { math: "\\mathsfbfsl{v}" },
      "\u{1D66C}": { math: "\\mathsfbfsl{w}" },
      "\u{1D66D}": { math: "\\mathsfbfsl{x}" },
      "\u{1D66E}": { math: "\\mathsfbfsl{y}" },
      "\u{1D66F}": { math: "\\mathsfbfsl{z}" },
      "\u{1D670}": { math: "\\mathtt{A}" },
      "\u{1D671}": { math: "\\mathtt{B}" },
      "\u{1D672}": { math: "\\mathtt{C}" },
      "\u{1D673}": { math: "\\mathtt{D}" },
      "\u{1D674}": { math: "\\mathtt{E}" },
      "\u{1D675}": { math: "\\mathtt{F}" },
      "\u{1D676}": { math: "\\mathtt{G}" },
      "\u{1D677}": { math: "\\mathtt{H}" },
      "\u{1D678}": { math: "\\mathtt{I}" },
      "\u{1D679}": { math: "\\mathtt{J}" },
      "\u{1D67A}": { math: "\\mathtt{K}" },
      "\u{1D67B}": { math: "\\mathtt{L}" },
      "\u{1D67C}": { math: "\\mathtt{M}" },
      "\u{1D67D}": { math: "\\mathtt{N}" },
      "\u{1D67E}": { math: "\\mathtt{O}" },
      "\u{1D67F}": { math: "\\mathtt{P}" },
      "\u{1D680}": { math: "\\mathtt{Q}" },
      "\u{1D681}": { math: "\\mathtt{R}" },
      "\u{1D682}": { math: "\\mathtt{S}" },
      "\u{1D683}": { math: "\\mathtt{T}" },
      "\u{1D684}": { math: "\\mathtt{U}" },
      "\u{1D685}": { math: "\\mathtt{V}" },
      "\u{1D686}": { math: "\\mathtt{W}" },
      "\u{1D687}": { math: "\\mathtt{X}" },
      "\u{1D688}": { math: "\\mathtt{Y}" },
      "\u{1D689}": { math: "\\mathtt{Z}" },
      "\u{1D68A}": { math: "\\mathtt{a}" },
      "\u{1D68B}": { math: "\\mathtt{b}" },
      "\u{1D68C}": { math: "\\mathtt{c}" },
      "\u{1D68D}": { math: "\\mathtt{d}" },
      "\u{1D68E}": { math: "\\mathtt{e}" },
      "\u{1D68F}": { math: "\\mathtt{f}" },
      "\u{1D690}": { math: "\\mathtt{g}" },
      "\u{1D691}": { math: "\\mathtt{h}" },
      "\u{1D692}": { math: "\\mathtt{i}" },
      "\u{1D693}": { math: "\\mathtt{j}" },
      "\u{1D694}": { math: "\\mathtt{k}" },
      "\u{1D695}": { math: "\\mathtt{l}" },
      "\u{1D696}": { math: "\\mathtt{m}" },
      "\u{1D697}": { math: "\\mathtt{n}" },
      "\u{1D698}": { math: "\\mathtt{o}" },
      "\u{1D699}": { math: "\\mathtt{p}" },
      "\u{1D69A}": { math: "\\mathtt{q}" },
      "\u{1D69B}": { math: "\\mathtt{r}" },
      "\u{1D69C}": { math: "\\mathtt{s}" },
      "\u{1D69D}": { math: "\\mathtt{t}" },
      "\u{1D69E}": { math: "\\mathtt{u}" },
      "\u{1D69F}": { math: "\\mathtt{v}" },
      "\u{1D6A0}": { math: "\\mathtt{w}" },
      "\u{1D6A1}": { math: "\\mathtt{x}" },
      "\u{1D6A2}": { math: "\\mathtt{y}" },
      "\u{1D6A3}": { math: "\\mathtt{z}" },
      "\u{1D6A4}": { math: "\\imath" },
      "\u{1D6A5}": { math: "\\jmath" },
      "\u{1D6A8}": { math: "\\mathbf{A}" },
      "\u{1D6A9}": { math: "\\mathbf{B}" },
      "\u{1D6AA}": { math: "\\mathbf{\\Gamma}" },
      "\u{1D6AB}": { math: "\\mathbf{\\Delta}" },
      "\u{1D6AC}": { math: "\\mathbf{E}" },
      "\u{1D6AD}": { math: "\\mathbf{Z}" },
      "\u{1D6AE}": { math: "\\mathbf{H}" },
      "\u{1D6AF}": { math: "\\mathbf{\\Theta}" },
      "\u{1D6B0}": { math: "\\mathbf{I}" },
      "\u{1D6B1}": { math: "\\mathbf{K}" },
      "\u{1D6B2}": { math: "\\mathbf{\\Lambda}" },
      "\u{1D6B3}": { math: "M" },
      "\u{1D6B4}": { math: "N" },
      "\u{1D6B5}": { math: "\\mathbf{\\Xi}" },
      "\u{1D6B6}": { math: "O" },
      "\u{1D6B7}": { math: "\\mathbf{\\Pi}" },
      "\u{1D6B8}": { math: "\\mathbf{P}" },
      "\u{1D6B9}": { math: "\\mathbf{\\vartheta}" },
      "\u{1D6BA}": { math: "\\mathbf{\\Sigma}" },
      "\u{1D6BB}": { math: "\\mathbf{T}" },
      "\u{1D6BC}": { math: "\\mathbf{\\Upsilon}" },
      "\u{1D6BD}": { math: "\\mathbf{\\Phi}" },
      "\u{1D6BE}": { math: "\\mathbf{X}" },
      "\u{1D6BF}": { math: "\\mathbf{\\Psi}" },
      "\u{1D6C0}": { math: "\\mathbf{\\Omega}" },
      "\u{1D6C1}": { math: "\\mathbf{\\nabla}" },
      "\u{1D6C2}": { math: "\\mathbf{\\alpha}" },
      "\u{1D6C3}": { math: "\\mathbf{\\beta}" },
      "\u{1D6C4}": { math: "\\mathbf{\\gamma}" },
      "\u{1D6C5}": { math: "\\mathbf{\\delta}" },
      "\u{1D6C6}": { math: "\\mathbf{\\epsilon}" },
      "\u{1D6C7}": { math: "\\mathbf{\\zeta}" },
      "\u{1D6C8}": { math: "\\mathbf{\\eta}" },
      "\u{1D6C9}": { math: "\\mathbf{\\theta}" },
      "\u{1D6CA}": { math: "\\mathbf{I}" },
      "\u{1D6CB}": { math: "\\mathbf{K}" },
      "\u{1D6CC}": { math: "\\mathbf{\\lambda}" },
      "\u{1D6CD}": { math: "M" },
      "\u{1D6CE}": { math: "N" },
      "\u{1D6CF}": { math: "\\mathbf{\\xi}" },
      "\u{1D6D0}": { math: "O" },
      "\u{1D6D1}": { math: "\\mathbf{\\pi}" },
      "\u{1D6D2}": { math: "\\mathbf{P}" },
      "\u{1D6D3}": { math: "\\mathbf{\\varsigma}" },
      "\u{1D6D4}": { math: "\\mathbf{\\sigma}" },
      "\u{1D6D5}": { math: "\\mathbf{T}" },
      "\u{1D6D6}": { math: "\\mathbf{\\upsilon}" },
      "\u{1D6D7}": { math: "\\mathbf{\\phi}" },
      "\u{1D6D8}": { math: "\\mathbf{X}" },
      "\u{1D6D9}": { math: "\\mathbf{\\psi}" },
      "\u{1D6DA}": { math: "\\mathbf{\\omega}" },
      "\u{1D6DB}": { math: "\\partial" },
      "\u{1D6DC}": { math: "\\in" },
      "\u{1D6DD}": { math: "\\mathbf{\\vartheta}" },
      "\u{1D6DE}": { math: "\\mathbf{\\varkappa}" },
      "\u{1D6DF}": { math: "\\mathbf{\\phi}" },
      "\u{1D6E0}": { math: "\\mathbf{\\varrho}" },
      "\u{1D6E1}": { math: "\\mathbf{\\varpi}" },
      "\u{1D6E2}": { math: "\\mathsl{A}" },
      "\u{1D6E3}": { math: "\\mathsl{B}" },
      "\u{1D6E4}": { math: "\\mathsl{\\Gamma}" },
      "\u{1D6E5}": { math: "\\mathsl{\\Delta}" },
      "\u{1D6E6}": { math: "\\mathsl{E}" },
      "\u{1D6E7}": { math: "\\mathsl{Z}" },
      "\u{1D6E8}": { math: "\\mathsl{H}" },
      "\u{1D6E9}": { math: "\\mathsl{\\Theta}" },
      "\u{1D6EA}": { math: "\\mathsl{I}" },
      "\u{1D6EB}": { math: "\\mathsl{K}" },
      "\u{1D6EC}": { math: "\\mathsl{\\Lambda}" },
      "\u{1D6ED}": { math: "M" },
      "\u{1D6EE}": { math: "N" },
      "\u{1D6EF}": { math: "\\mathsl{\\Xi}" },
      "\u{1D6F0}": { math: "O" },
      "\u{1D6F1}": { math: "\\mathsl{\\Pi}" },
      "\u{1D6F2}": { math: "\\mathsl{P}" },
      "\u{1D6F3}": { math: "\\mathsl{\\Theta}" },
      "\u{1D6F4}": { math: "\\mathsl{\\Sigma}" },
      "\u{1D6F5}": { math: "\\mathsl{T}" },
      "\u{1D6F6}": { math: "\\mathsl{\\Upsilon}" },
      "\u{1D6F7}": { math: "\\mathsl{\\Phi}" },
      "\u{1D6F8}": { math: "\\mathsl{X}" },
      "\u{1D6F9}": { math: "\\mathsl{\\Psi}" },
      "\u{1D6FA}": { math: "\\mathsl{\\Omega}" },
      "\u{1D6FB}": { math: "\\mathsl{\\nabla}" },
      "\u{1D6FC}": { math: "\\mathsl{A}" },
      "\u{1D6FD}": { math: "\\mathsl{B}" },
      "\u{1D6FE}": { math: "\\mathsl{\\gamma}" },
      "\u{1D6FF}": { math: "\\mathsl{\\delta}" },
      "\u{1D700}": { math: "\\mathsl{E}" },
      "\u{1D701}": { math: "\\mathsl{Z}" },
      "\u{1D702}": { math: "\\mathsl{H}" },
      "\u{1D703}": { math: "\\mathsl{\\theta}" },
      "\u{1D704}": { math: "\\mathsl{I}" },
      "\u{1D705}": { math: "\\mathsl{K}" },
      "\u{1D706}": { math: "\\mathsl{\\lambda}" },
      "\u{1D707}": { math: "\\mu" },
      "\u{1D708}": { math: "\\nu" },
      "\u{1D709}": { math: "\\mathsl{\\xi}" },
      "\u{1D70A}": { math: "o" },
      "\u{1D70B}": { math: "\\mathsl{\\pi}" },
      "\u{1D70C}": { math: "\\mathsl{P}" },
      "\u{1D70D}": { math: "\\mathsl{\\varsigma}" },
      "\u{1D70E}": { math: "\\mathsl{\\sigma}" },
      "\u{1D70F}": { math: "\\mathsl{T}" },
      "\u{1D710}": { math: "\\mathsl{\\upsilon}" },
      "\u{1D711}": { math: "\\mathsl{\\varphi}" },
      "\u{1D712}": { math: "\\mathsl{X}" },
      "\u{1D713}": { math: "\\mathsl{\\psi}" },
      "\u{1D714}": { math: "\\mathsl{\\omega}" },
      "\u{1D715}": { math: "\\partial" },
      "\u{1D716}": { math: "\\in" },
      "\u{1D717}": { math: "\\mathsl{\\vartheta}" },
      "\u{1D718}": { math: "\\mathsl{\\varkappa}" },
      "\u{1D719}": { math: "\\mathsl{\\phi}" },
      "\u{1D71A}": { math: "\\mathsl{\\varrho}" },
      "\u{1D71B}": { math: "\\mathsl{\\varpi}" },
      "\u{1D71C}": { math: "\\mathbit{A}" },
      "\u{1D71D}": { math: "\\mathbit{B}" },
      "\u{1D71E}": { math: "\\mathbit{\\Gamma}" },
      "\u{1D71F}": { math: "\\mathbit{\\Delta}" },
      "\u{1D720}": { math: "\\mathbit{E}" },
      "\u{1D721}": { math: "\\mathbit{Z}" },
      "\u{1D722}": { math: "\\mathbit{H}" },
      "\u{1D723}": { math: "\\mathbit{\\Theta}" },
      "\u{1D724}": { math: "\\mathbit{I}" },
      "\u{1D725}": { math: "\\mathbit{K}" },
      "\u{1D726}": { math: "\\mathbit{\\Lambda}" },
      "\u{1D727}": { math: "M" },
      "\u{1D728}": { math: "N" },
      "\u{1D729}": { math: "\\mathbit{\\Xi}" },
      "\u{1D72A}": { math: "O" },
      "\u{1D72B}": { math: "\\mathbit{\\Pi}" },
      "\u{1D72C}": { math: "\\mathbit{P}" },
      "\u{1D72D}": { math: "\\mathbit{O}" },
      "\u{1D72E}": { math: "\\mathbit{\\Sigma}" },
      "\u{1D72F}": { math: "\\mathbit{T}" },
      "\u{1D730}": { math: "\\mathbit{\\Upsilon}" },
      "\u{1D731}": { math: "\\mathbit{\\Phi}" },
      "\u{1D732}": { math: "\\mathbit{X}" },
      "\u{1D733}": { math: "\\mathbit{\\Psi}" },
      "\u{1D734}": { math: "\\mathbit{\\Omega}" },
      "\u{1D735}": { math: "\\mathbit{\\nabla}" },
      "\u{1D736}": { math: "\\mathbit{\\alpha}" },
      "\u{1D737}": { math: "\\mathbit{\\beta}" },
      "\u{1D738}": { math: "\\mathbit{\\gamma}" },
      "\u{1D739}": { math: "\\mathbit{\\delta}" },
      "\u{1D73A}": { math: "\\mathbit{\\epsilon}" },
      "\u{1D73B}": { math: "\\mathbit{\\zeta}" },
      "\u{1D73C}": { math: "\\mathbit{\\eta}" },
      "\u{1D73D}": { math: "\\mathbit{\\theta}" },
      "\u{1D73E}": { math: "\\mathbit{\\imath}" },
      "\u{1D73F}": { math: "\\mathbit{\\kappa}" },
      "\u{1D740}": { math: "\\mathbit{\\lambda}" },
      "\u{1D741}": { math: "\\mu" },
      "\u{1D742}": { math: "N" },
      "\u{1D743}": { math: "\\mathbit{\\xi}" },
      "\u{1D744}": { math: "O" },
      "\u{1D745}": { math: "\\mathbit{\\pi}" },
      "\u{1D746}": { math: "\\mathbit{\\rho}" },
      "\u{1D747}": { math: "\\mathbit{\\varsigma}" },
      "\u{1D748}": { math: "\\mathbit{\\sigma}" },
      "\u{1D749}": { math: "\\mathbit{\\tau}" },
      "\u{1D74A}": { math: "\\mathbit{\\upsilon}" },
      "\u{1D74B}": { math: "\\mathbit{\\varphi}" },
      "\u{1D74C}": { math: "\\mathbit{\\chi}" },
      "\u{1D74D}": { math: "\\mathbit{\\psi}" },
      "\u{1D74E}": { math: "\\mathbit{\\omega}" },
      "\u{1D74F}": { math: "\\partial" },
      "\u{1D750}": { math: "\\in" },
      "\u{1D751}": { math: "\\mathbit{\\vartheta}" },
      "\u{1D752}": { math: "\\mathbit{\\varkappa}" },
      "\u{1D753}": { math: "\\mathbit{\\phi}" },
      "\u{1D754}": { math: "\\mathbit{\\varrho}" },
      "\u{1D755}": { math: "\\mathbit{\\varpi}" },
      "\u{1D756}": { math: "\\mathsfbf{A}" },
      "\u{1D757}": { math: "\\mathsfbf{B}" },
      "\u{1D758}": { math: "\\mathsfbf{\\Gamma}" },
      "\u{1D759}": { math: "\\mathsfbf{\\Delta}" },
      "\u{1D75A}": { math: "\\mathsfbf{E}" },
      "\u{1D75B}": { math: "\\mathsfbf{Z}" },
      "\u{1D75C}": { math: "\\mathsfbf{H}" },
      "\u{1D75D}": { math: "\\mathsfbf{\\Theta}" },
      "\u{1D75E}": { math: "\\mathsfbf{I}" },
      "\u{1D75F}": { math: "\\mathsfbf{K}" },
      "\u{1D760}": { math: "\\mathsfbf{\\Lambda}" },
      "\u{1D761}": { math: "M" },
      "\u{1D762}": { math: "N" },
      "\u{1D763}": { math: "\\mathsfbf{\\Xi}" },
      "\u{1D764}": { math: "O" },
      "\u{1D765}": { math: "\\mathsfbf{\\Pi}" },
      "\u{1D766}": { math: "\\mathsfbf{P}" },
      "\u{1D767}": { math: "\\mathsfbf{\\Theta}" },
      "\u{1D768}": { math: "\\mathsfbf{\\Sigma}" },
      "\u{1D769}": { math: "\\mathsfbf{T}" },
      "\u{1D76A}": { math: "\\mathsfbf{\\Upsilon}" },
      "\u{1D76B}": { math: "\\mathsfbf{\\Phi}" },
      "\u{1D76C}": { math: "\\mathsfbf{X}" },
      "\u{1D76D}": { math: "\\mathsfbf{\\Psi}" },
      "\u{1D76E}": { math: "\\mathsfbf{\\Omega}" },
      "\u{1D76F}": { math: "\\mathsfbf{\\nabla}" },
      "\u{1D770}": { math: "\\mathsfbf{\\alpha}" },
      "\u{1D771}": { math: "\\mathsfbf{\\beta}" },
      "\u{1D772}": { math: "\\mathsfbf{\\gamma}" },
      "\u{1D773}": { math: "\\mathsfbf{\\delta}" },
      "\u{1D774}": { math: "\\mathsfbf{\\varepsilon}" },
      "\u{1D775}": { math: "\\mathsfbf{\\zeta}" },
      "\u{1D776}": { math: "\\mathsfbf{\\eta}" },
      "\u{1D777}": { math: "\\mathsfbf{\\theta}" },
      "\u{1D778}": { math: "\\mathsfbf{\\imath}" },
      "\u{1D779}": { math: "\\mathsfbf{\\kappa}" },
      "\u{1D77A}": { math: "\\mathsfbf{\\lambda}" },
      "\u{1D77B}": { math: "\\mu" },
      "\u{1D77C}": { math: "\\nu" },
      "\u{1D77D}": { math: "\\mathsfbf{\\xi}" },
      "\u{1D77E}": { math: "o" },
      "\u{1D77F}": { math: "\\mathsfbf{\\pi}" },
      "\u{1D780}": { math: "\\mathsfbf{\\rho}" },
      "\u{1D781}": { math: "\\mathsfbf{\\varsigma}" },
      "\u{1D782}": { math: "\\mathsfbf{\\sigma}" },
      "\u{1D783}": { math: "\\mathsfbf{\\tau}" },
      "\u{1D784}": { math: "\\mathsfbf{\\upsilon}" },
      "\u{1D785}": { math: "\\mathsfbf{\\varphi}" },
      "\u{1D786}": { math: "\\mathsfbf{\\chi}" },
      "\u{1D787}": { math: "\\mathsfbf{\\psi}" },
      "\u{1D788}": { math: "\\mathsfbf{\\omega}" },
      "\u{1D789}": { math: "\\partial" },
      "\u{1D78A}": { math: "\\in" },
      "\u{1D78B}": { math: "\\mathsfbf{\\vartheta}" },
      "\u{1D78C}": { math: "\\mathsfbf{\\varkappa}" },
      "\u{1D78D}": { math: "\\mathsfbf{\\phi}" },
      "\u{1D78E}": { math: "\\mathsfbf{\\varrho}" },
      "\u{1D78F}": { math: "\\mathsfbf{\\varpi}" },
      "\u{1D790}": { math: "\\mathsfbfsl{A}" },
      "\u{1D791}": { math: "\\mathsfbfsl{B}" },
      "\u{1D792}": { math: "\\mathsfbfsl{\\Gamma}" },
      "\u{1D793}": { math: "\\mathsfbfsl{\\Delta}" },
      "\u{1D794}": { math: "\\mathsfbfsl{E}" },
      "\u{1D795}": { math: "\\mathsfbfsl{Z}" },
      "\u{1D796}": { math: "\\mathsfbfsl{H}" },
      "\u{1D797}": { math: "\\mathsfbfsl{\\Theta}" },
      "\u{1D798}": { math: "\\mathsfbfsl{I}" },
      "\u{1D799}": { math: "\\mathsfbfsl{K}" },
      "\u{1D79A}": { math: "\\mathsfbfsl{\\Lambda}" },
      "\u{1D79B}": { math: "\\mathsfbfsl{M}" },
      "\u{1D79C}": { math: "\\mathsfbfsl{N}" },
      "\u{1D79D}": { math: "\\mathsfbfsl{\\Xi}" },
      "\u{1D79E}": { math: "\\mathsfbfsl{O}" },
      "\u{1D79F}": { math: "\\mathsfbfsl{\\Pi}" },
      "\u{1D7A0}": { math: "\\mathsfbfsl{P}" },
      "\u{1D7A1}": { math: "\\mathsfbfsl{\\Theta}" },
      "\u{1D7A2}": { math: "\\mathsfbfsl{\\Sigma}" },
      "\u{1D7A3}": { math: "\\mathsfbfsl{T}" },
      "\u{1D7A4}": { math: "\\mathsfbfsl{\\Upsilon}" },
      "\u{1D7A5}": { math: "\\mathsfbfsl{\\Phi}" },
      "\u{1D7A6}": { math: "\\mathsfbfsl{X}" },
      "\u{1D7A7}": { math: "\\mathsfbfsl{\\Psi}" },
      "\u{1D7A8}": { math: "\\mathsfbfsl{\\Omega}" },
      "\u{1D7A9}": { math: "\\mathsfbfsl{\\nabla}" },
      "\u{1D7AA}": { math: "\\mathsfbfsl{\\alpha}" },
      "\u{1D7AB}": { math: "\\mathsfbfsl{\\beta}" },
      "\u{1D7AC}": { math: "\\mathsfbfsl{\\gamma}" },
      "\u{1D7AD}": { math: "\\mathsfbfsl{\\delta}" },
      "\u{1D7AE}": { math: "\\mathsfbfsl{\\varepsilon}" },
      "\u{1D7AF}": { math: "\\mathsfbfsl{\\zeta}" },
      "\u{1D7B0}": { math: "\\mathsfbfsl{\\eta}" },
      "\u{1D7B1}": { math: "\\mathsfbfsl{\\theta}" },
      "\u{1D7B2}": { math: "\\mathsfbfsl{\\imath}" },
      "\u{1D7B3}": { math: "\\mathsfbfsl{\\kappa}" },
      "\u{1D7B4}": { math: "\\mathsfbfsl{\\lambda}" },
      "\u{1D7B5}": { math: "\\mu" },
      "\u{1D7B6}": { math: "\\nu" },
      "\u{1D7B7}": { math: "\\mathsfbfsl{\\xi}" },
      "\u{1D7B8}": { math: "o" },
      "\u{1D7B9}": { math: "\\mathsfbfsl{\\pi}" },
      "\u{1D7BA}": { math: "\\mathsfbfsl{\\rho}" },
      "\u{1D7BB}": { math: "\\mathsfbfsl{\\varsigma}" },
      "\u{1D7BC}": { math: "\\mathsfbfsl{\\sigma}" },
      "\u{1D7BD}": { math: "\\mathsfbfsl{\\tau}" },
      "\u{1D7BE}": { math: "\\mathsfbfsl{\\upsilon}" },
      "\u{1D7BF}": { math: "\\mathsfbfsl{\\varphi}" },
      "\u{1D7C0}": { math: "\\mathsfbfsl{\\chi}" },
      "\u{1D7C1}": { math: "\\mathsfbfsl{\\psi}" },
      "\u{1D7C2}": { math: "\\mathsfbfsl{\\omega}" },
      "\u{1D7C3}": { math: "\\partial" },
      "\u{1D7C4}": { math: "\\in" },
      "\u{1D7C5}": { math: "\\mathsfbfsl{\\vartheta}" },
      "\u{1D7C6}": { math: "\\mathsfbfsl{\\varkappa}" },
      "\u{1D7C7}": { math: "\\mathsfbfsl{\\phi}" },
      "\u{1D7C8}": { math: "\\mathsfbfsl{\\varrho}" },
      "\u{1D7C9}": { math: "\\mathsfbfsl{\\varpi}" },
      "\u{1D7CA}": { math: "\\mbfDigamma" },
      "\u{1D7CB}": { math: "\\mbfdigamma" },
      "\u{1D7CE}": { math: "\\mathbf{0}" },
      "\u{1D7CF}": { math: "\\mathbf{1}" },
      "\u{1D7D0}": { math: "\\mathbf{2}" },
      "\u{1D7D1}": { math: "\\mathbf{3}" },
      "\u{1D7D2}": { math: "\\mathbf{4}" },
      "\u{1D7D3}": { math: "\\mathbf{5}" },
      "\u{1D7D4}": { math: "\\mathbf{6}" },
      "\u{1D7D5}": { math: "\\mathbf{7}" },
      "\u{1D7D6}": { math: "\\mathbf{8}" },
      "\u{1D7D7}": { math: "\\mathbf{9}" },
      "\u{1D7D8}": { math: "\\mathbb{0}" },
      "\u{1D7D9}": { math: "\\mathbb{1}" },
      "\u{1D7DA}": { math: "\\mathbb{2}" },
      "\u{1D7DB}": { math: "\\mathbb{3}" },
      "\u{1D7DC}": { math: "\\mathbb{4}" },
      "\u{1D7DD}": { math: "\\mathbb{5}" },
      "\u{1D7DE}": { math: "\\mathbb{6}" },
      "\u{1D7DF}": { math: "\\mathbb{7}" },
      "\u{1D7E0}": { math: "\\mathbb{8}" },
      "\u{1D7E1}": { math: "\\mathbb{9}" },
      "\u{1D7E2}": { math: "\\mathsf{0}" },
      "\u{1D7E3}": { math: "\\mathsf{1}" },
      "\u{1D7E4}": { math: "\\mathsf{2}" },
      "\u{1D7E5}": { math: "\\mathsf{3}" },
      "\u{1D7E6}": { math: "\\mathsf{4}" },
      "\u{1D7E7}": { math: "\\mathsf{5}" },
      "\u{1D7E8}": { math: "\\mathsf{6}" },
      "\u{1D7E9}": { math: "\\mathsf{7}" },
      "\u{1D7EA}": { math: "\\mathsf{8}" },
      "\u{1D7EB}": { math: "\\mathsf{9}" },
      "\u{1D7EC}": { math: "\\mathsfbf{0}" },
      "\u{1D7ED}": { math: "\\mathsfbf{1}" },
      "\u{1D7EE}": { math: "\\mathsfbf{2}" },
      "\u{1D7EF}": { math: "\\mathsfbf{3}" },
      "\u{1D7F0}": { math: "\\mathsfbf{4}" },
      "\u{1D7F1}": { math: "\\mathsfbf{5}" },
      "\u{1D7F2}": { math: "\\mathsfbf{6}" },
      "\u{1D7F3}": { math: "\\mathsfbf{7}" },
      "\u{1D7F4}": { math: "\\mathsfbf{8}" },
      "\u{1D7F5}": { math: "\\mathsfbf{9}" },
      "\u{1D7F6}": { math: "\\mathtt{0}" },
      "\u{1D7F7}": { math: "\\mathtt{1}" },
      "\u{1D7F8}": { math: "\\mathtt{2}" },
      "\u{1D7F9}": { math: "\\mathtt{3}" },
      "\u{1D7FA}": { math: "\\mathtt{4}" },
      "\u{1D7FB}": { math: "\\mathtt{5}" },
      "\u{1D7FC}": { math: "\\mathtt{6}" },
      "\u{1D7FD}": { math: "\\mathtt{7}" },
      "\u{1D7FE}": { math: "\\mathtt{8}" },
      "\u{1D7FF}": { math: "\\mathtt{9}" }
    };
  }
});

// node_modules/unicode2latex/tables/ascii-bibtex-creator.json
var require_ascii_bibtex_creator = __commonJS({
  "node_modules/unicode2latex/tables/ascii-bibtex-creator.json"(exports, module2) {
    module2.exports = {
      "#": { math: "\\#", text: "\\#" },
      $: { math: "\\$", text: "\\$" },
      "%": { math: "\\%", text: "\\%" },
      "&": { math: "\\&", text: "\\&" },
      "/\u200B": { text: "{\\slash}" },
      "<": { math: "<" },
      ">": { math: ">" },
      "\\": { math: "\\backslash", text: "{\\textbackslash}" },
      "^": { math: "\\sphat", text: "\\^" },
      _: { math: "\\_", text: "\\_" },
      i\uFE20a\uFE21: { text: "\\t{ia}" },
      "{": { math: "\\lbrace", text: "\\{" },
      "}": { math: "\\rbrace", text: "\\}" },
      "~": { math: "\\sptilde", text: "{\\textasciitilde}" },
      "\xA0": { math: "~", space: true, text: "~" },
      "\xA1": { text: "{\\textexclamdown}" },
      "\xA2": { math: "\\cent", text: "{\\textcent}", textpackages: ["textcomp"] },
      "\xA3": { math: "\\pounds", text: "{\\textsterling}", textpackages: ["textcomp"] },
      "\xA4": { text: "{\\textcurrency}", textpackages: ["textcomp"] },
      "\xA5": { math: "\\yen", text: "{\\textyen}", textpackages: ["textcomp"] },
      "\xA6": { text: "{\\textbrokenbar}", textpackages: ["textcomp"] },
      "\xA7": { text: "{\\textsection}", textpackages: ["textcomp"] },
      "\xA8": { math: "\\spddot", text: "{\\textasciidieresis}" },
      "\xA9": { text: "{\\textcopyright}", textpackages: ["textcomp"] },
      \u00AA: { text: "{\\textordfeminine}", textpackages: ["textcomp"] },
      "\xAB": { text: "{\\guillemotleft}" },
      "\xAC": { math: "\\lnot" },
      "\xAD": { math: "\\-", text: "\\-" },
      "\xAE": { math: "\\circledR", text: "{\\textregistered}", textpackages: ["textcomp"] },
      "\xAF": { text: "{\\textasciimacron}" },
      "\xB0": { math: "^\\circ", text: "{\\textdegree}", textpackages: ["textcomp"] },
      "\xB1": { math: "\\pm" },
      "\xB2": { math: "^{2}" },
      "\xB3": { math: "^{3}" },
      "\xB4": { text: "{\\textasciiacute}" },
      \u00B5: { text: "{\\textmu}" },
      "\xB6": { text: "{\\textparagraph}", textpackages: ["textcomp"] },
      "\xB7": { math: "\\cdot" },
      "\xB8": { text: "{\\c}" },
      "\xB9": { math: "^{1}" },
      \u00BA: { text: "{\\textordmasculine}", textpackages: ["textcomp"] },
      "\xBB": { text: "{\\guillemotright}" },
      "\xBC": { math: "\\frac{1}{4}" },
      "\xBD": { math: "\\frac{1}{2}" },
      "\xBE": { math: "\\frac{3}{4}" },
      "\xBF": { text: "{\\textquestiondown}" },
      \u00C0: { text: "{\\`A}" },
      \u00C1: { text: "{\\'A}" },
      \u00C2: { text: "{\\^A}" },
      \u00C3: { text: "{\\~A}" },
      \u00C4: { text: '{\\"A}' },
      \u00C5: { text: "{\\AA}" },
      \u00C6: { text: "{\\AE}" },
      \u00C7: { text: "{\\c C}" },
      \u00C8: { text: "{\\`E}" },
      \u00C9: { text: "{\\'E}" },
      \u00CA: { text: "{\\^E}" },
      \u00CB: { text: '{\\"E}' },
      \u00CC: { text: "{\\`I}" },
      \u00CD: { text: "{\\'I}" },
      \u00CE: { text: "{\\^I}" },
      \u00CF: { text: '{\\"I}' },
      \u00D0: { text: "{\\DH}" },
      \u00D1: { text: "{\\~N}" },
      \u00D2: { text: "{\\`O}" },
      \u00D3: { text: "{\\'O}" },
      \u00D4: { text: "{\\^O}" },
      \u00D5: { text: "{\\~O}" },
      \u00D6: { text: '{\\"O}' },
      "\xD7": { math: "\\times", text: "{\\texttimes}" },
      \u00D8: { text: "{\\O}" },
      \u00D9: { text: "{\\`U}" },
      \u00DA: { text: "{\\'U}" },
      \u00DB: { text: "{\\^U}" },
      \u00DC: { text: '{\\"U}' },
      \u00DD: { text: "{\\'Y}" },
      \u00DE: { text: "{\\TH}" },
      \u00DF: { text: "{\\ss}" },
      \u00E0: { text: "{\\`a}" },
      \u00E1: { text: "{\\'a}" },
      \u00E2: { text: "{\\^a}" },
      \u00E3: { text: "{\\~a}" },
      \u00E4: { text: '{\\"a}' },
      \u00E5: { text: "{\\aa}" },
      \u00E6: { text: "{\\ae}" },
      \u00E7: { text: "{\\c c}" },
      \u00E8: { text: "{\\`e}" },
      \u00E9: { text: "{\\'e}" },
      \u00EA: { text: "{\\^e}" },
      \u00EB: { text: '{\\"e}' },
      \u00EC: { text: "{\\`i}" },
      \u00ED: { text: "{\\'i}" },
      \u00EE: { text: "{\\^i}" },
      \u00EF: { text: '{\\"i}' },
      \u00F0: { math: "\\eth", mathpackages: ["amssymb", "arevmath"], text: "{\\dh}" },
      \u00F1: { text: "{\\~n}" },
      \u00F2: { text: "{\\`o}" },
      \u00F3: { text: "{\\'o}" },
      \u00F4: { text: "{\\^o}" },
      \u00F5: { text: "{\\~o}" },
      \u00F6: { text: '{\\"o}' },
      "\xF7": { math: "\\div" },
      \u00F8: { text: "{\\o}" },
      \u00F9: { text: "{\\`u}" },
      \u00FA: { text: "{\\'u}" },
      \u00FB: { text: "{\\^u}" },
      \u00FC: { text: '{\\"u}' },
      \u00FD: { text: "{\\'y}" },
      \u00FE: { text: "{\\th}" },
      \u00FF: { text: '{\\"y}' },
      \u0100: { text: "{\\=A}" },
      \u0101: { text: "{\\=a}" },
      \u0102: { text: "{\\u A}" },
      \u0103: { text: "{\\u a}" },
      \u0104: { text: "{\\k{A}}" },
      \u0105: { text: "{\\k{a}}" },
      \u0106: { text: "{\\'C}" },
      \u0107: { text: "{\\'c}" },
      \u0108: { text: "{\\^C}" },
      \u0109: { text: "{\\^c}" },
      \u010A: { text: "{\\.C}" },
      \u010B: { text: "{\\.c}" },
      \u010C: { text: "{\\v C}" },
      \u010D: { text: "{\\v c}" },
      \u010E: { text: "{\\v D}" },
      \u010F: { text: "{\\v d}" },
      \u0110: { text: "{\\DJ}" },
      \u0111: { text: "{\\dj}" },
      \u0112: { text: "{\\=E}" },
      \u0113: { text: "{\\=e}" },
      \u0114: { text: "{\\u E}" },
      \u0115: { text: "{\\u e}" },
      \u0116: { text: "{\\.E}" },
      \u0117: { text: "{\\.e}" },
      \u0118: { text: "{\\k{E}}" },
      \u0119: { text: "{\\k{e}}" },
      \u011A: { text: "{\\v E}" },
      \u011B: { text: "{\\v e}" },
      \u011C: { text: "{\\^G}" },
      \u011D: { text: "{\\^g}" },
      \u011E: { text: "{\\u G}" },
      \u011F: { text: "{\\u g}" },
      \u0120: { text: "{\\.G}" },
      \u0121: { text: "{\\.g}" },
      \u0122: { text: "{\\c G}" },
      \u0123: { text: "{\\c g}" },
      \u0124: { text: "{\\^H}" },
      \u0125: { text: "{\\^h}" },
      \u0126: { text: "{\\fontencoding{LELA}\\selectfont\\char40}" },
      \u0127: { math: "\\Elzxh" },
      \u0128: { text: "{\\~I}" },
      \u0129: { text: "{\\~i}" },
      \u012A: { text: "{\\=I}" },
      \u012B: { text: "{\\=i}" },
      \u012C: { text: "{\\u I}" },
      \u012D: { text: "{\\u \\i}" },
      \u012E: { text: "{\\k{I}}" },
      \u012F: { text: "{\\k{i}}" },
      \u0130: { text: "{\\.I}" },
      \u0131: { math: "\\imath", text: "{\\i}" },
      \u0132: { text: "IJ" },
      \u0133: { text: "ij" },
      \u0134: { text: "{\\^J}" },
      \u0135: { text: "{\\^\\j}" },
      \u0136: { text: "{\\c K}" },
      \u0137: { text: "{\\c k}" },
      \u0138: { text: "{\\fontencoding{LELA}\\selectfont\\char91}" },
      \u0139: { text: "{\\'L}" },
      \u013A: { text: "{\\'l}" },
      \u013B: { text: "{\\c L}" },
      \u013C: { text: "{\\c l}" },
      \u013D: { text: "{\\v L}" },
      \u013E: { text: "{\\v l}" },
      \u013F: { text: "{\\fontencoding{LELA}\\selectfont\\char201}" },
      \u0140: { text: "{\\fontencoding{LELA}\\selectfont\\char202}" },
      \u0141: { text: "{\\L}" },
      \u0142: { text: "{\\l}" },
      \u0143: { text: "{\\'N}" },
      \u0144: { text: "{\\'n}" },
      \u0145: { text: "{\\c N}" },
      \u0146: { text: "{\\c n}" },
      \u0147: { text: "{\\v N}" },
      \u0148: { text: "{\\v n}" },
      \u0149: { text: "'n" },
      \u014A: { text: "{\\NG}" },
      \u014B: { text: "{\\ng}" },
      \u014C: { text: "{\\=O}" },
      \u014D: { text: "{\\=o}" },
      \u014E: { text: "{\\u O}" },
      \u014F: { text: "{\\u o}" },
      \u0150: { text: "{\\H O}" },
      \u0151: { text: "{\\H o}" },
      \u0152: { text: "{\\OE}" },
      \u0153: { text: "{\\oe}" },
      \u0154: { text: "{\\'R}" },
      \u0155: { text: "{\\'r}" },
      \u0156: { text: "{\\c R}" },
      \u0157: { text: "{\\c r}" },
      \u0158: { text: "{\\v R}" },
      \u0159: { text: "{\\v r}" },
      \u015A: { text: "{\\'S}" },
      \u015B: { text: "{\\'s}" },
      \u015C: { text: "{\\^S}" },
      \u015D: { text: "{\\^s}" },
      \u015E: { text: "{\\c S}" },
      \u015F: { text: "{\\c s}" },
      \u0160: { text: "{\\v S}" },
      \u0161: { text: "{\\v s}" },
      \u0162: { text: "{\\c T}" },
      \u0163: { text: "{\\c t}" },
      \u0164: { text: "{\\v T}" },
      \u0165: { text: "{\\v t}" },
      \u0166: { text: "{\\fontencoding{LELA}\\selectfont\\char47}" },
      \u0167: { text: "{\\fontencoding{LELA}\\selectfont\\char63}" },
      \u0168: { text: "{\\~U}" },
      \u0169: { text: "{\\~u}" },
      \u016A: { text: "{\\=U}" },
      \u016B: { text: "{\\=u}" },
      \u016C: { text: "{\\u U}" },
      \u016D: { text: "{\\u u}" },
      \u016E: { text: "{\\r{U}}" },
      \u016F: { text: "{\\r{u}}" },
      \u0170: { text: "{\\H U}" },
      \u0171: { text: "{\\H u}" },
      \u0172: { text: "{\\k{U}}" },
      \u0173: { text: "{\\k{u}}" },
      \u0174: { text: "{\\^W}" },
      \u0175: { text: "{\\^w}" },
      \u0176: { text: "{\\^Y}" },
      \u0177: { text: "{\\^y}" },
      \u0178: { text: '{\\"Y}' },
      \u0179: { text: "{\\'Z}" },
      \u017A: { text: "{\\'z}" },
      \u017B: { text: "{\\.Z}" },
      \u017C: { text: "{\\.z}" },
      \u017D: { text: "{\\v Z}" },
      \u017E: { text: "{\\v z}" },
      \u017F: { text: "s" },
      \u0192: { math: "f" },
      \u0195: { text: "{\\texthvlig}" },
      \u019E: { text: "{\\textnrleg}" },
      \u01AA: { text: "{\\textesh}" },
      \u01B5: { math: "\\Zbar" },
      \u01BA: { text: "{\\fontencoding{LELA}\\selectfont\\char195}" },
      \u01C2: { text: "{\\textdoublepipe}" },
      \u01CD: { text: "{\\v A}" },
      \u01CE: { text: "{\\v a}" },
      \u01CF: { text: "{\\v I}" },
      \u01D0: { text: "{\\v i}" },
      \u01D1: { text: "{\\v O}" },
      \u01D2: { text: "{\\v o}" },
      \u01D3: { text: "{\\v U}" },
      \u01D4: { text: "{\\v u}" },
      \u01E6: { text: "{\\v G}" },
      \u01E7: { text: "{\\v g}" },
      \u01E8: { text: "{\\v K}" },
      \u01E9: { text: "{\\v k}" },
      \u01EA: { text: "{\\k{O}}" },
      \u01EB: { text: "{\\k{o}}" },
      \u01F0: { text: "{\\v j}" },
      \u01F4: { text: "{\\'G}" },
      \u01F5: { text: "{\\'g}" },
      \u0228: { text: "{\\c E}" },
      \u0229: { text: "{\\c e}" },
      "\u0237": { math: "\\jmath" },
      \u0250: { math: "\\Elztrna" },
      \u0252: { math: "\\Elztrnsa" },
      \u0254: { math: "\\Elzopeno" },
      \u0256: { math: "\\Elzrtld" },
      \u0258: { text: "{\\fontencoding{LEIP}\\selectfont\\char61}" },
      \u0259: { math: "\\Elzschwa" },
      \u025B: { math: "\\varepsilon" },
      \u0261: { text: "g" },
      \u0263: { math: "\\Elzpgamma" },
      \u0264: { math: "\\Elzpbgam" },
      \u0265: { math: "\\Elztrnh" },
      \u026C: { math: "\\Elzbtdl" },
      \u026D: { math: "\\Elzrtll" },
      \u026F: { math: "\\Elztrnm" },
      \u0270: { math: "\\Elztrnmlr" },
      \u0271: { math: "\\Elzltlmr" },
      \u0272: { text: "{\\Elzltln}" },
      \u0273: { math: "\\Elzrtln" },
      \u0277: { math: "\\Elzclomeg" },
      \u0278: { text: "{\\textphi}" },
      \u0279: { math: "\\Elztrnr" },
      \u027A: { math: "\\Elztrnrl" },
      \u027B: { math: "\\Elzrttrnr" },
      \u027C: { math: "\\Elzrl" },
      \u027D: { math: "\\Elzrtlr" },
      \u027E: { math: "\\Elzfhr" },
      \u027F: { text: "{\\fontencoding{LEIP}\\selectfont\\char202}" },
      \u0282: { math: "\\Elzrtls" },
      \u0283: { math: "\\Elzesh" },
      \u0287: { math: "\\Elztrnt" },
      \u0288: { math: "\\Elzrtlt" },
      \u028A: { math: "\\Elzpupsil" },
      \u028B: { math: "\\Elzpscrv" },
      \u028C: { math: "\\Elzinvv" },
      \u028D: { math: "\\Elzinvw" },
      \u028E: { math: "\\Elztrny" },
      \u0290: { math: "\\Elzrtlz" },
      \u0292: { math: "\\Elzyogh" },
      \u0294: { math: "\\Elzglst" },
      \u0295: { math: "\\Elzreglst" },
      \u0296: { math: "\\Elzinglst" },
      \u029E: { text: "{\\textturnk}" },
      \u02A4: { math: "\\Elzdyogh" },
      \u02A7: { math: "\\Elztesh" },
      \u02B0: { math: "^{h}", text: "\\textsuperscript{h}" },
      \u02B2: { math: "^{j}", text: "\\textsuperscript{j}" },
      \u02B3: { math: "^{r}", text: "\\textsuperscript{r}" },
      \u02B7: { math: "^{w}", text: "\\textsuperscript{w}" },
      \u02B8: { math: "^{y}", text: "\\textsuperscript{y}" },
      "\u02B9": { text: "'" },
      \u02BB: { text: "'" },
      \u02BC: { text: "'" },
      \u02BD: { text: "'" },
      \u02BF: { text: "{\\lasp}", textpackages: ["mathscinet"] },
      "\u02C6": { text: "{\\textasciicircum}" },
      "\u02C7": { text: "{\\textasciicaron}" },
      "\u02C8": { math: "\\Elzverts" },
      "\u02C9": { text: "-" },
      "\u02CC": { math: "\\Elzverti" },
      \u02D0: { math: "\\Elzlmrk" },
      \u02D1: { math: "\\Elzhlmrk" },
      "\u02D2": { math: "\\Elzsbrhr" },
      "\u02D3": { math: "\\Elzsblhr" },
      "\u02D4": { math: "\\Elzrais" },
      "\u02D5": { math: "\\Elzlow" },
      "\u02D8": { text: "{\\textasciibreve}" },
      "\u02D9": { text: "{\\textperiodcentered}", textpackages: ["textcomp"] },
      "\u02DA": { text: "{\\r{}}" },
      "\u02DB": { text: "{\\k{}}" },
      "\u02DC": { text: "{\\texttildelow}" },
      "\u02DD": { text: "{\\H{}}" },
      \u02E1: { math: "^{l}", text: "\\textsuperscript{l}" },
      \u02E2: { math: "^{s}", text: "\\textsuperscript{s}" },
      \u02E3: { math: "^{x}", text: "\\textsuperscript{x}" },
      "\u02E5": { text: "\\tone{55}" },
      "\u02E6": { text: "\\tone{44}" },
      "\u02E7": { text: "\\tone{33}" },
      "\u02E8": { text: "\\tone{22}" },
      "\u02E9": { text: "\\tone{11}" },
      "\u0300": { math: "\\grave", combiningdiacritic: true, text: "\\`" },
      "\u0300\u0304": { text: "{\\textgravemacron}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0304\u0300": { text: "{\\textgravemacron}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0300\u0307": { text: "{\\textgravedot}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0307\u0300": { text: "{\\textgravedot}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0301": { math: "\\acute", combiningdiacritic: true, text: "\\'" },
      "\u0301\u0304": { text: "{\\textacutemacron}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0304\u0301": { text: "{\\textacutemacron}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0301\u030C": { text: "{\\textacutewedge}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u030C\u0301": { text: "{\\textacutewedge}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0302": { math: "\\hat", combiningdiacritic: true, text: "\\^" },
      "\u0302\u0307": { text: "{\\textcircumdot}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0307\u0302": { text: "{\\textcircumdot}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0303": { math: "\\tilde", combiningdiacritic: true, text: "\\~" },
      "\u0303\u0307": { text: "{\\texttildedot}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0307\u0303": { text: "{\\texttildedot}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0304": { math: "\\bar", combiningdiacritic: true, text: "\\=" },
      "\u0305": { math: "\\overline", combiningdiacritic: true },
      "\u0306": { math: "\\breve", combiningdiacritic: true, text: "{\\u}" },
      "\u0306\u0304": { text: "{\\textbrevemacron}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0304\u0306": { text: "{\\textbrevemacron}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0307": { math: "\\dot", combiningdiacritic: true, text: "\\." },
      "\u0307\u0301": { text: "{\\textdotacute}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0301\u0307": { text: "{\\textdotacute}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0307\u0306": { text: "{\\textdotbreve}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0306\u0307": { text: "{\\textdotbreve}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0308": { math: "\\ddot", combiningdiacritic: true, text: '\\"' },
      "\u0309": { math: "\\ovhook" },
      "\u030A": { math: "\\mathring", combiningdiacritic: true, text: "{\\r}" },
      "\u030A\u0304": { text: "{\\textringmacron}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0304\u030A": { text: "{\\textringmacron}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u030B": { text: "{\\H}", combiningdiacritic: true },
      "\u030C": { math: "\\check", text: "{\\v}", combiningdiacritic: true },
      "\u030D": { text: "{\\textvbaraccent}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u030E": { text: "{\\textdoublevbaraccent}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u030F": { text: "{\\textdoublegrave}", combiningdiacritic: true },
      "\u0310": { text: "{\\textdotbreve}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0311": { text: "{\\fontencoding{LECO}\\selectfont\\char177}" },
      "\u0312": { math: "\\oturnedcomma" },
      "\u0315": { math: "\\ocommatopright" },
      "\u0316": { text: "{\\textsubgrave}", combiningdiacritic: true },
      "\u0318": { text: "{\\textadvancing}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0319": { text: "{\\textretracting}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u031A": { math: "\\droang", text: "{\\textcorner}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u031C": { text: "{\\textsublhalfring}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u031D": { text: "{\\textraising}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u031E": { text: "{\\textlowering}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u031F": { text: "{\\textsubplus}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0321": { math: "\\Elzpalh" },
      "\u0322": { text: "{\\Elzrh}" },
      "\u0323": { text: "{\\d}", combiningdiacritic: true },
      "\u0324": { text: "{\\textsubumlaut}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0325": { text: "{\\textsubring}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0327": { text: "{\\c}", combiningdiacritic: true },
      "\u0328": { text: "{\\k}", combiningdiacritic: true },
      "\u0329": { text: "{\\textsyllabic}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u032A": { math: "\\Elzsbbrg", text: "{\\textsubbridge}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u032B": { text: "{\\fontencoding{LECO}\\selectfont\\char203}" },
      "\u032C": { text: "{\\textsubwedge}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u032F": { text: "{\\textsubarch}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0330": { math: "\\utilde", text: "{\\textsubtilde}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0331": { math: "\\underbar", combiningdiacritic: true, text: "{\\textsubbar}", textpackages: ["tipa"] },
      "\u0332": { math: "\\underline" },
      "\u0334": { text: "{\\textsuperimposetilde}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0335": { text: "{\\Elzxl}" },
      "\u0336": { text: "{\\Elzbar}" },
      "\u0337": { text: "{\\fontencoding{LECO}\\selectfont\\char215}" },
      "\u0338": { math: "\\not" },
      "\u0339": { text: "{\\textsubrhalfring}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u033A": { text: "{\\textinvsubbridge}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u033B": { text: "{\\textsubsquare}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u033C": { text: "{\\textseagull}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u033D": { text: "{\\textovercross}", combiningdiacritic: true, textpackages: ["tipa"] },
      "\u0361": { text: "{\\fontencoding{LECO}\\selectfont\\char225}" },
      "\u0374": { text: "'" },
      "\u0375": { text: "," },
      "\u037E": { text: ";" },
      \u0386: { text: "{\\'A}" },
      \u0388: { text: "{\\'E}" },
      \u0389: { text: "{\\'H}" },
      \u038A: { text: "{\\'{}I}" },
      \u038C: { text: "{\\'{}O}" },
      \u038E: { math: "\\mathrm{'Y}" },
      \u038F: { math: "\\mathrm{'\\Omega}" },
      \u0390: { math: "\\acute{\\ddot{\\iota}}" },
      \u0391: { math: "A" },
      \u0392: { math: "B" },
      \u0393: { math: "\\Gamma" },
      \u0394: { math: "\\Delta" },
      \u0395: { math: "E" },
      \u0396: { math: "Z" },
      \u0397: { math: "H" },
      \u0398: { math: "\\Theta" },
      \u0399: { math: "I" },
      \u039A: { math: "K" },
      \u039B: { math: "\\Lambda" },
      \u039C: { math: "M" },
      \u039D: { math: "N" },
      \u039E: { math: "\\Xi" },
      \u039F: { math: "O" },
      \u03A0: { math: "\\Pi" },
      \u03A1: { math: "P" },
      \u03A3: { math: "\\Sigma" },
      \u03A4: { math: "T" },
      \u03A5: { math: "\\Upsilon" },
      \u03A6: { math: "\\Phi" },
      \u03A7: { math: "X" },
      \u03A8: { math: "\\Psi" },
      \u03A9: { math: "\\Omega" },
      \u03AA: { math: "\\mathrm{\\ddot{I}}" },
      \u03AB: { math: "\\mathrm{\\ddot{Y}}" },
      \u03AC: { text: "{\\'$\\alpha$}" },
      \u03AD: { math: "\\acute{\\epsilon}" },
      \u03AE: { math: "\\acute{\\eta}" },
      \u03AF: { math: "\\acute{\\iota}" },
      \u03B0: { math: "\\acute{\\ddot{\\upsilon}}" },
      \u03B1: { math: "\\alpha" },
      \u03B2: { math: "\\beta" },
      \u03B3: { math: "\\gamma" },
      \u03B4: { math: "\\delta" },
      \u03B5: { math: "\\epsilon" },
      \u03B6: { math: "\\zeta" },
      \u03B7: { math: "\\eta" },
      \u03B8: { math: "\\theta", text: "{\\texttheta}" },
      \u03B9: { math: "\\iota" },
      \u03BA: { math: "\\kappa" },
      \u03BB: { math: "\\lambda" },
      \u03BC: { math: "\\mu" },
      \u03BD: { math: "\\nu" },
      \u03BE: { math: "\\xi" },
      \u03BF: { math: "o" },
      \u03C0: { math: "\\pi" },
      \u03C1: { math: "\\rho" },
      \u03C2: { math: "\\varsigma" },
      \u03C3: { math: "\\sigma" },
      \u03C4: { math: "\\tau" },
      \u03C5: { math: "\\upsilon" },
      \u03C6: { math: "\\varphi" },
      \u03C7: { math: "\\chi" },
      \u03C8: { math: "\\psi" },
      \u03C9: { math: "\\omega" },
      \u03CA: { math: "\\ddot{\\iota}" },
      \u03CB: { math: "\\ddot{\\upsilon}" },
      \u03CC: { text: "{\\'o}" },
      \u03CD: { math: "\\acute{\\upsilon}" },
      \u03CE: { math: "\\acute{\\omega}" },
      \u03D0: { math: "\\varbeta", text: "\\Pisymbol{ppi022}{87}" },
      \u03D1: { math: "\\vartheta", text: "{\\textvartheta}" },
      \u03D2: { math: "\\Upsilon" },
      \u03D5: { math: "\\phi" },
      \u03D6: { math: "\\varpi" },
      "\u03D8": { math: "\\Qoppa" },
      "\u03D9": { math: "\\qoppa" },
      \u03DA: { math: "\\Stigma" },
      \u03DB: { math: "\\stigma" },
      \u03DC: { math: "\\Digamma" },
      \u03DD: { math: "\\digamma" },
      \u03DE: { math: "\\Koppa" },
      \u03DF: { math: "\\koppa" },
      \u03E0: { math: "\\Sampi" },
      \u03E1: { math: "\\sampi" },
      \u03F0: { math: "\\varkappa" },
      \u03F1: { math: "\\varrho" },
      "\u03F4": { math: "\\upvarTheta", text: "{\\textTheta}" },
      "\u03F5": { math: "\\epsilon" },
      "\u03F6": { math: "\\backepsilon" },
      \u0401: { text: "{\\cyrchar\\CYRYO}" },
      \u0402: { text: "{\\cyrchar\\CYRDJE}" },
      \u0403: { text: "{\\cyrchar{\\'\\CYRG}}" },
      \u0404: { text: "{\\cyrchar\\CYRIE}" },
      \u0405: { text: "{\\cyrchar\\CYRDZE}" },
      \u0406: { text: "{\\cyrchar\\CYRII}" },
      \u0407: { text: "{\\cyrchar\\CYRYI}" },
      \u0408: { text: "{\\cyrchar\\CYRJE}" },
      \u0409: { text: "{\\cyrchar\\CYRLJE}" },
      \u040A: { text: "{\\cyrchar\\CYRNJE}" },
      \u040B: { text: "{\\cyrchar\\CYRTSHE}" },
      \u040C: { text: "{\\cyrchar{\\'\\CYRK}}" },
      \u040E: { text: "{\\cyrchar\\CYRUSHRT}" },
      \u040F: { text: "{\\cyrchar\\CYRDZHE}" },
      \u0410: { text: "{\\cyrchar\\CYRA}" },
      \u0411: { text: "{\\cyrchar\\CYRB}" },
      \u0412: { text: "{\\cyrchar\\CYRV}" },
      \u0413: { text: "{\\cyrchar\\CYRG}" },
      \u0414: { text: "{\\cyrchar\\CYRD}" },
      \u0415: { text: "{\\cyrchar\\CYRE}" },
      \u0416: { text: "{\\cyrchar\\CYRZH}" },
      \u0417: { text: "{\\cyrchar\\CYRZ}" },
      \u0418: { text: "{\\cyrchar\\CYRI}" },
      \u0419: { text: "{\\cyrchar\\CYRISHRT}" },
      \u041A: { text: "{\\cyrchar\\CYRK}" },
      \u041B: { text: "{\\cyrchar\\CYRL}" },
      \u041C: { text: "{\\cyrchar\\CYRM}" },
      \u041D: { text: "{\\cyrchar\\CYRN}" },
      \u041E: { text: "{\\cyrchar\\CYRO}" },
      \u041F: { text: "{\\cyrchar\\CYRP}" },
      \u0420: { text: "{\\cyrchar\\CYRR}" },
      \u0421: { text: "{\\cyrchar\\CYRS}" },
      \u0422: { text: "{\\cyrchar\\CYRT}" },
      \u0423: { text: "{\\cyrchar\\CYRU}" },
      \u0424: { text: "{\\cyrchar\\CYRF}" },
      \u0425: { text: "{\\cyrchar\\CYRH}" },
      \u0426: { text: "{\\cyrchar\\CYRC}" },
      \u0427: { text: "{\\cyrchar\\CYRCH}" },
      \u0428: { text: "{\\cyrchar\\CYRSH}" },
      \u0429: { text: "{\\cyrchar\\CYRSHCH}" },
      \u042A: { text: "{\\cyrchar\\CYRHRDSN}" },
      \u042B: { text: "{\\cyrchar\\CYRERY}" },
      \u042C: { text: "{\\cyrchar\\CYRSFTSN}" },
      \u042D: { text: "{\\cyrchar\\CYREREV}" },
      \u042E: { text: "{\\cyrchar\\CYRYU}" },
      \u042F: { text: "{\\cyrchar\\CYRYA}" },
      \u0430: { text: "{\\cyrchar\\cyra}" },
      \u0431: { text: "{\\cyrchar\\cyrb}" },
      \u0432: { text: "{\\cyrchar\\cyrv}" },
      \u0433: { text: "{\\cyrchar\\cyrg}" },
      \u0434: { text: "{\\cyrchar\\cyrd}" },
      \u0435: { text: "{\\cyrchar\\cyre}" },
      \u0436: { text: "{\\cyrchar\\cyrzh}" },
      \u0437: { text: "{\\cyrchar\\cyrz}" },
      \u0438: { text: "{\\cyrchar\\cyri}" },
      \u0439: { text: "{\\cyrchar\\cyrishrt}" },
      \u043A: { text: "{\\cyrchar\\cyrk}" },
      \u043B: { text: "{\\cyrchar\\cyrl}" },
      \u043C: { text: "{\\cyrchar\\cyrm}" },
      \u043D: { text: "{\\cyrchar\\cyrn}" },
      \u043E: { text: "{\\cyrchar\\cyro}" },
      \u043F: { text: "{\\cyrchar\\cyrp}" },
      \u0440: { text: "{\\cyrchar\\cyrr}" },
      \u0441: { text: "{\\cyrchar\\cyrs}" },
      \u0442: { text: "{\\cyrchar\\cyrt}" },
      \u0443: { text: "{\\cyrchar\\cyru}" },
      \u0444: { text: "{\\cyrchar\\cyrf}" },
      \u0445: { text: "{\\cyrchar\\cyrh}" },
      \u0446: { text: "{\\cyrchar\\cyrc}" },
      \u0447: { text: "{\\cyrchar\\cyrch}" },
      \u0448: { text: "{\\cyrchar\\cyrsh}" },
      \u0449: { text: "{\\cyrchar\\cyrshch}" },
      \u044A: { text: "{\\cyrchar\\cyrhrdsn}" },
      \u044B: { text: "{\\cyrchar\\cyrery}" },
      \u044C: { text: "{\\cyrchar\\cyrsftsn}" },
      \u044D: { text: "{\\cyrchar\\cyrerev}" },
      \u044E: { text: "{\\cyrchar\\cyryu}" },
      \u044F: { text: "{\\cyrchar\\cyrya}" },
      \u0451: { text: "{\\cyrchar\\cyryo}" },
      \u0452: { text: "{\\cyrchar\\cyrdje}" },
      \u0453: { text: "{\\cyrchar{\\'\\cyrg}}" },
      \u0454: { text: "{\\cyrchar\\cyrie}" },
      \u0455: { text: "{\\cyrchar\\cyrdze}" },
      \u0456: { text: "{\\cyrchar\\cyrii}" },
      \u0457: { text: "{\\cyrchar\\cyryi}" },
      \u0458: { text: "{\\cyrchar\\cyrje}" },
      \u0459: { text: "{\\cyrchar\\cyrlje}" },
      \u045A: { text: "{\\cyrchar\\cyrnje}" },
      \u045B: { text: "{\\cyrchar\\cyrtshe}" },
      \u045C: { text: "{\\cyrchar{\\'\\cyrk}}" },
      \u045E: { text: "{\\cyrchar\\cyrushrt}" },
      \u045F: { text: "{\\cyrchar\\cyrdzhe}" },
      \u0460: { text: "{\\cyrchar\\CYROMEGA}" },
      \u0461: { text: "{\\cyrchar\\cyromega}" },
      \u0462: { text: "{\\cyrchar\\CYRYAT}" },
      \u0464: { text: "{\\cyrchar\\CYRIOTE}" },
      \u0465: { text: "{\\cyrchar\\cyriote}" },
      \u0466: { text: "{\\cyrchar\\CYRLYUS}" },
      \u0467: { text: "{\\cyrchar\\cyrlyus}" },
      \u0468: { text: "{\\cyrchar\\CYRIOTLYUS}" },
      \u0469: { text: "{\\cyrchar\\cyriotlyus}" },
      \u046A: { text: "{\\cyrchar\\CYRBYUS}" },
      \u046C: { text: "{\\cyrchar\\CYRIOTBYUS}" },
      \u046D: { text: "{\\cyrchar\\cyriotbyus}" },
      \u046E: { text: "{\\cyrchar\\CYRKSI}" },
      \u046F: { text: "{\\cyrchar\\cyrksi}" },
      \u0470: { text: "{\\cyrchar\\CYRPSI}" },
      \u0471: { text: "{\\cyrchar\\cyrpsi}" },
      \u0472: { text: "{\\cyrchar\\CYRFITA}" },
      \u0474: { text: "{\\cyrchar\\CYRIZH}" },
      \u0478: { text: "{\\cyrchar\\CYRUK}" },
      \u0479: { text: "{\\cyrchar\\cyruk}" },
      \u047A: { text: "{\\cyrchar\\CYROMEGARND}" },
      \u047B: { text: "{\\cyrchar\\cyromegarnd}" },
      \u047C: { text: "{\\cyrchar\\CYROMEGATITLO}" },
      \u047D: { text: "{\\cyrchar\\cyromegatitlo}" },
      \u047E: { text: "{\\cyrchar\\CYROT}" },
      \u047F: { text: "{\\cyrchar\\cyrot}" },
      \u0480: { text: "{\\cyrchar\\CYRKOPPA}" },
      \u0481: { text: "{\\cyrchar\\cyrkoppa}" },
      "\u0482": { text: "{\\cyrchar\\cyrthousands}" },
      "\u0488": { text: "{\\cyrchar\\cyrhundredthousands}" },
      "\u0489": { text: "{\\cyrchar\\cyrmillions}" },
      \u048C: { text: "{\\cyrchar\\CYRSEMISFTSN}" },
      \u048D: { text: "{\\cyrchar\\cyrsemisftsn}" },
      \u048E: { text: "{\\cyrchar\\CYRRTICK}" },
      \u048F: { text: "{\\cyrchar\\cyrrtick}" },
      \u0490: { text: "{\\cyrchar\\CYRGUP}" },
      \u0491: { text: "{\\cyrchar\\cyrgup}" },
      \u0492: { text: "{\\cyrchar\\CYRGHCRS}" },
      \u0493: { text: "{\\cyrchar\\cyrghcrs}" },
      \u0494: { text: "{\\cyrchar\\CYRGHK}" },
      \u0495: { text: "{\\cyrchar\\cyrghk}" },
      \u0496: { text: "{\\cyrchar\\CYRZHDSC}" },
      \u0497: { text: "{\\cyrchar\\cyrzhdsc}" },
      \u0498: { text: "{\\cyrchar\\CYRZDSC}" },
      \u0499: { text: "{\\cyrchar\\cyrzdsc}" },
      \u049A: { text: "{\\cyrchar\\CYRKDSC}" },
      \u049B: { text: "{\\cyrchar\\cyrkdsc}" },
      \u049C: { text: "{\\cyrchar\\CYRKVCRS}" },
      \u049D: { text: "{\\cyrchar\\cyrkvcrs}" },
      \u049E: { text: "{\\cyrchar\\CYRKHCRS}" },
      \u049F: { text: "{\\cyrchar\\cyrkhcrs}" },
      \u04A0: { text: "{\\cyrchar\\CYRKBEAK}" },
      \u04A1: { text: "{\\cyrchar\\cyrkbeak}" },
      \u04A2: { text: "{\\cyrchar\\CYRNDSC}" },
      \u04A3: { text: "{\\cyrchar\\cyrndsc}" },
      \u04A4: { text: "{\\cyrchar\\CYRNG}" },
      \u04A5: { text: "{\\cyrchar\\cyrng}" },
      \u04A6: { text: "{\\cyrchar\\CYRPHK}" },
      \u04A7: { text: "{\\cyrchar\\cyrphk}" },
      \u04A8: { text: "{\\cyrchar\\CYRABHHA}" },
      \u04A9: { text: "{\\cyrchar\\cyrabhha}" },
      \u04AA: { text: "{\\cyrchar\\CYRSDSC}" },
      \u04AB: { text: "{\\cyrchar\\cyrsdsc}" },
      \u04AC: { text: "{\\cyrchar\\CYRTDSC}" },
      \u04AD: { text: "{\\cyrchar\\cyrtdsc}" },
      \u04AE: { text: "{\\cyrchar\\CYRY}" },
      \u04AF: { text: "{\\cyrchar\\cyry}" },
      \u04B0: { text: "{\\cyrchar\\CYRYHCRS}" },
      \u04B1: { text: "{\\cyrchar\\cyryhcrs}" },
      \u04B2: { text: "{\\cyrchar\\CYRHDSC}" },
      \u04B3: { text: "{\\cyrchar\\cyrhdsc}" },
      \u04B4: { text: "{\\cyrchar\\CYRTETSE}" },
      \u04B5: { text: "{\\cyrchar\\cyrtetse}" },
      \u04B6: { text: "{\\cyrchar\\CYRCHRDSC}" },
      \u04B7: { text: "{\\cyrchar\\cyrchrdsc}" },
      \u04B8: { text: "{\\cyrchar\\CYRCHVCRS}" },
      \u04B9: { text: "{\\cyrchar\\cyrchvcrs}" },
      \u04BA: { text: "{\\cyrchar\\CYRSHHA}" },
      \u04BB: { text: "{\\cyrchar\\cyrshha}" },
      \u04BC: { text: "{\\cyrchar\\CYRABHCH}" },
      \u04BD: { text: "{\\cyrchar\\cyrabhch}" },
      \u04BE: { text: "{\\cyrchar\\CYRABHCHDSC}" },
      \u04BF: { text: "{\\cyrchar\\cyrabhchdsc}" },
      \u04C0: { text: "{\\cyrchar\\CYRpalochka}" },
      \u04C3: { text: "{\\cyrchar\\CYRKHK}" },
      \u04C4: { text: "{\\cyrchar\\cyrkhk}" },
      \u04C7: { text: "{\\cyrchar\\CYRNHK}" },
      \u04C8: { text: "{\\cyrchar\\cyrnhk}" },
      \u04CB: { text: "{\\cyrchar\\CYRCHLDSC}" },
      \u04CC: { text: "{\\cyrchar\\cyrchldsc}" },
      \u04D4: { text: "{\\cyrchar\\CYRAE}" },
      \u04D5: { text: "{\\cyrchar\\cyrae}" },
      \u04D8: { text: "{\\cyrchar\\CYRSCHWA}" },
      \u04D9: { text: "{\\cyrchar\\cyrschwa}" },
      \u04E0: { text: "{\\cyrchar\\CYRABHDZE}" },
      \u04E1: { text: "{\\cyrchar\\cyrabhdze}" },
      \u04E8: { text: "{\\cyrchar\\CYROTLD}" },
      \u04E9: { text: "{\\cyrchar\\cyrotld}" },
      "\u0871": { math: "\\\\backslash" },
      "\u1D43": { math: "^{a}", text: "\\textsuperscript{a}" },
      "\u1D47": { math: "^{b}", text: "\\textsuperscript{b}" },
      "\u1D48": { math: "^{d}", text: "\\textsuperscript{d}" },
      "\u1D49": { math: "^{e}", text: "\\textsuperscript{e}" },
      "\u1D4D": { math: "^{g}", text: "\\textsuperscript{g}" },
      "\u1D4F": { math: "^{k}", text: "\\textsuperscript{k}" },
      "\u1D50": { math: "^{m}", text: "\\textsuperscript{m}" },
      "\u1D52": { math: "^{o}", text: "\\textsuperscript{o}" },
      "\u1D56": { math: "^{p}", text: "\\textsuperscript{p}" },
      "\u1D57": { math: "^{t}", text: "\\textsuperscript{t}" },
      "\u1D58": { math: "^{u}", text: "\\textsuperscript{u}" },
      "\u1D5B": { math: "^{v}", text: "\\textsuperscript{v}" },
      "\u1D9C": { math: "^{c}", text: "\\textsuperscript{c}" },
      "\u1DA0": { math: "^{f}", text: "\\textsuperscript{f}" },
      "\u1DBB": { math: "^{z}", text: "\\textsuperscript{z}" },
      \u1E02: { text: "{\\.B}" },
      \u1E03: { text: "{\\.b}" },
      \u1E04: { text: "{\\d B}" },
      \u1E05: { text: "{\\d b}" },
      \u1E06: { text: "{\\b B}" },
      \u1E07: { text: "{\\b b}" },
      \u1E0A: { text: "{\\.D}" },
      \u1E0B: { text: "{\\.d}" },
      \u1E0C: { text: "{\\d D}" },
      \u1E0D: { text: "{\\d d}" },
      \u1E0E: { text: "{\\b D}" },
      \u1E0F: { text: "{\\b d}" },
      \u1E10: { text: "{\\c D}" },
      \u1E11: { text: "{\\c d}" },
      \u1E1C: { text: "{\\c{\\u{E}}}" },
      \u1E1D: { text: "{\\c{\\u{e}}}" },
      \u1E1E: { text: "{\\.F}" },
      \u1E1F: { text: "{\\.f}" },
      \u1E20: { text: "{\\=G}" },
      \u1E21: { text: "{\\=g}" },
      \u1E22: { text: "{\\.H}" },
      \u1E23: { text: "{\\.h}" },
      \u1E24: { text: "{\\d H}" },
      \u1E25: { text: "{\\d h}" },
      \u1E26: { text: '{\\"H}' },
      \u1E27: { text: '{\\"h}' },
      \u1E28: { text: "{\\c H}" },
      \u1E29: { text: "{\\c h}" },
      \u1E30: { text: "{\\'K}" },
      \u1E31: { text: "{\\'k}" },
      \u1E32: { text: "{\\d K}" },
      \u1E33: { text: "{\\d k}" },
      \u1E34: { text: "{\\b K}" },
      \u1E35: { text: "{\\b k}" },
      \u1E36: { text: "{\\d L}" },
      \u1E37: { text: "{\\d l}" },
      \u1E3A: { text: "{\\b L}" },
      \u1E3B: { text: "{\\b l}" },
      \u1E3E: { text: "{\\'M}" },
      \u1E3F: { text: "{\\'m}" },
      \u1E40: { text: "{\\.M}" },
      \u1E41: { text: "{\\.m}" },
      \u1E42: { text: "{\\d M}" },
      \u1E43: { text: "{\\d m}" },
      \u1E44: { text: "{\\.N}" },
      \u1E45: { text: "{\\.n}" },
      \u1E46: { text: "{\\d N}" },
      \u1E47: { text: "{\\d n}" },
      \u1E48: { text: "{\\b N}" },
      \u1E49: { text: "{\\b n}" },
      \u1E54: { text: "{\\'P}" },
      \u1E55: { text: "{\\'p}" },
      \u1E56: { text: "{\\.P}" },
      \u1E57: { text: "{\\.p}" },
      \u1E58: { text: "{\\.R}" },
      \u1E59: { text: "{\\.r}" },
      \u1E5A: { text: "{\\d R}" },
      \u1E5B: { text: "{\\d r}" },
      \u1E5E: { text: "{\\b R}" },
      \u1E5F: { text: "{\\b r}" },
      \u1E60: { text: "{\\.S}" },
      \u1E61: { text: "{\\.s}" },
      \u1E62: { text: "{\\d S}" },
      \u1E63: { text: "{\\d s}" },
      \u1E6A: { text: "{\\.T}" },
      \u1E6B: { text: "{\\.t}" },
      \u1E6C: { text: "{\\d T}" },
      \u1E6D: { text: "{\\d t}" },
      \u1E6E: { text: "{\\b T}" },
      \u1E6F: { text: "{\\b t}" },
      \u1E7C: { text: "{\\~V}" },
      \u1E7D: { text: "{\\~v}" },
      \u1E7E: { text: "{\\d V}" },
      \u1E7F: { text: "{\\d v}" },
      \u1E80: { text: "{\\`W}" },
      \u1E81: { text: "{\\`w}" },
      \u1E82: { text: "{\\'W}" },
      \u1E83: { text: "{\\'w}" },
      \u1E84: { text: '{\\"W}' },
      \u1E85: { text: '{\\"w}' },
      \u1E86: { text: "{\\.W}" },
      \u1E87: { text: "{\\.w}" },
      \u1E88: { text: "{\\d W}" },
      \u1E89: { text: "{\\d w}" },
      \u1E8A: { text: "{\\.X}" },
      \u1E8B: { text: "{\\.x}" },
      \u1E8C: { text: '{\\"X}' },
      \u1E8D: { text: '{\\"x}' },
      \u1E8E: { text: "{\\.Y}" },
      \u1E8F: { text: "{\\.y}" },
      \u1E90: { text: "{\\^Z}" },
      \u1E91: { text: "{\\^z}" },
      \u1E92: { text: "{\\d Z}" },
      \u1E93: { text: "{\\d z}" },
      \u1E94: { text: "{\\b Z}" },
      \u1E95: { text: "{\\b z}" },
      \u1E96: { text: "{\\b h}" },
      \u1E97: { text: '{\\"t}' },
      \u1E98: { text: "{\\r{w}}" },
      \u1E99: { text: "{\\r{y}}" },
      \u1EA0: { text: "{\\d A}" },
      \u1EA1: { text: "{\\d a}" },
      \u1EB8: { text: "{\\d E}" },
      \u1EB9: { text: "{\\d e}" },
      \u1EBC: { text: "{\\~E}" },
      \u1EBD: { text: "{\\~e}" },
      \u1ECA: { text: "{\\d I}" },
      \u1ECB: { text: "{\\d i}" },
      \u1ECC: { text: "{\\d O}" },
      \u1ECD: { text: "{\\d o}" },
      \u1EE4: { text: "{\\d U}" },
      \u1EE5: { text: "{\\d u}" },
      \u1EF2: { text: "{\\`Y}" },
      \u1EF3: { text: "{\\`y}" },
      \u1EF4: { text: "{\\d Y}" },
      \u1EF5: { text: "{\\d y}" },
      \u1EF8: { text: "{\\~Y}" },
      \u1EF9: { text: "{\\~y}" },
      "\u2000": { text: "\\hspace{0.6em}", space: true },
      "\u2001": { math: "\\quad", space: true },
      "\u2002": { text: "\\hspace{0.6em}", space: true },
      "\u2003": { math: "\\quad", space: true },
      "\u2004": { text: "\\;", space: true },
      "\u2005": { text: "\\hspace{0.25em}", space: true },
      "\u2006": { text: "\\hspace{0.166em}", space: true },
      "\u2007": { text: "\\hphantom{0}", space: true },
      "\u2008": { text: "\\hphantom{,}", space: true },
      "\u2009": { text: "\\,", space: true },
      "\u200A": { math: "\\mkern1mu", space: true },
      "\u200B": { text: "\\hspace{0pt}", space: true },
      "\u200C": { text: "{\\aftergroup\\ignorespaces}" },
      "\u2010": { text: "-" },
      "\u2011": { text: "-" },
      "\u2012": { text: "-" },
      "\u2013": { text: "{\\textendash}" },
      "\u2014": { text: "{\\textemdash}" },
      "\u2015": { math: "\\horizbar", text: "\\rule{1em}{1pt}" },
      "\u2016": { math: "\\Vert" },
      "\u2017": { math: "\\twolowline" },
      "\u2018": { text: "`" },
      "\u2019": { text: "'" },
      "\u201A": { text: "," },
      "\u201B": { math: "\\Elzreapos" },
      "\u201C": { text: "``" },
      "\u201D": { text: "''" },
      "\u201E": { text: ",," },
      "\u201F": { text: "{\\quotedblbase}" },
      "\u2020": { math: "\\dagger", text: "{\\textdagger}", textpackages: ["textcomp"] },
      "\u2021": { math: "\\ddagger", text: "{\\textdaggerdbl}", textpackages: ["textcomp"] },
      "\u2022": { math: "\\bullet", text: "{\\textbullet}", textpackages: ["textcomp"] },
      "\u2023": { text: ">" },
      "\u2024": { text: "." },
      "\u2025": { math: "\\enleadertwodots", text: ".." },
      "\u2026": { math: "\\ldots", text: "{\\ldots}" },
      "\u2027": { text: "-" },
      "\u202F": { text: "\\,", space: true },
      "\u2030": { text: "{\\textperthousand}", textpackages: ["textcomp"] },
      "\u2031": { text: "{\\textpertenthousand}", textpackages: ["textcomp"] },
      "\u2032": { math: "{'}" },
      "\u2033": { math: "{''}" },
      "\u2034": { math: "{'''}" },
      "\u2035": { math: "\\backprime" },
      "\u2036": { math: "\\backdprime" },
      "\u2037": { math: "\\backtrprime" },
      "\u2038": { math: "\\caretinsert" },
      "\u2039": { text: "{\\guilsinglleft}" },
      "\u203A": { text: "{\\guilsinglright}" },
      "\u203C": { math: "\\Exclam" },
      "\u203E": { text: "-" },
      "\u2043": { math: "\\hyphenbullet" },
      "\u2044": { math: "\\fracslash" },
      "\u2047": { math: "\\Question" },
      "\u2048": { text: "?!" },
      "\u2049": { text: "!?" },
      "\u204A": { text: "7" },
      "\u2050": { math: "\\closure" },
      "\u2057": { math: "''''" },
      "\u205F": { math: "\\:", space: true, text: "\\:" },
      "\u2060": { text: "{\\nolinebreak}" },
      "\u2070": { math: "^{0}" },
      "\u2071": { math: "^{i}", text: "\\textsuperscript{i}" },
      "\u2074": { math: "^{4}" },
      "\u2075": { math: "^{5}" },
      "\u2076": { math: "^{6}" },
      "\u2077": { math: "^{7}" },
      "\u2078": { math: "^{8}" },
      "\u2079": { math: "^{9}" },
      "\u207A": { math: "^{+}" },
      "\u207B": { math: "^{-}" },
      "\u207C": { math: "^{=}" },
      "\u207D": { math: "^{(}" },
      "\u207E": { math: "^{)}" },
      \u207F: { math: "^{n}", text: "\\textsuperscript{n}" },
      "\u2080": { math: "_{0}" },
      "\u2081": { math: "_{1}" },
      "\u2082": { math: "_{2}" },
      "\u2083": { math: "_{3}" },
      "\u2084": { math: "_{4}" },
      "\u2085": { math: "_{5}" },
      "\u2086": { math: "_{6}" },
      "\u2087": { math: "_{7}" },
      "\u2088": { math: "_{8}" },
      "\u2089": { math: "_{9}" },
      "\u208A": { math: "_{+}" },
      "\u208B": { math: "_{-}" },
      "\u208C": { math: "_{=}" },
      "\u208D": { math: "_{(}" },
      "\u208E": { math: "_{)}" },
      "\u2090": { math: "_{a}", text: "\\textsubscript{a}" },
      "\u2091": { math: "_{e}", text: "\\textsubscript{e}" },
      "\u2092": { math: "_{o}", text: "\\textsubscript{o}" },
      "\u2093": { math: "_{x}", text: "\\textsubscript{x}" },
      "\u2094": { text: "\\textsubscript{\\textschwa}", textpackages: ["tipa"] },
      "\u2095": { math: "_{h}", text: "\\textsubscript{h}" },
      "\u2096": { math: "_{k}", text: "\\textsubscript{k}" },
      "\u2097": { math: "_{l}", text: "\\textsubscript{l}" },
      "\u2098": { math: "_{m}", text: "\\textsubscript{m}" },
      "\u2099": { math: "_{n}", text: "\\textsubscript{n}" },
      "\u209A": { math: "_{p}", text: "\\textsubscript{p}" },
      "\u209B": { math: "_{s}", text: "\\textsubscript{s}" },
      "\u209C": { math: "_{t}", text: "\\textsubscript{t}" },
      "\u20A7": { text: "\\ensuremath{\\Elzpes}" },
      "\u20AC": { math: "\\euro", text: "{\\texteuro}" },
      "\u20D0": { math: "\\lvec" },
      "\u20D1": { math: "\\rightharpoonup", mathpackages: ["amsmath", "amssymb"] },
      "\u20D2": { math: "\\vertoverlay" },
      "\u20D6": { math: "\\LVec" },
      "\u20D7": { math: "\\vec" },
      "\u20DB": { math: "\\dddot" },
      "\u20DC": { math: "\\ddddot" },
      "\u20DD": { math: "\\enclosecircle" },
      "\u20DE": { math: "\\enclosesquare" },
      "\u20DF": { math: "\\enclosediamond" },
      "\u20E1": { math: "\\overleftrightarrow" },
      "\u20E4": { math: "\\enclosetriangle" },
      "\u20E7": { math: "\\annuity" },
      "\u20E8": { math: "\\threeunderdot" },
      "\u20E9": { math: "\\widebridgeabove" },
      "\u20EC": { math: "\\underrightharpoondown" },
      "\u20ED": { math: "\\underleftharpoondown" },
      "\u20EE": { math: "\\underleftarrow" },
      "\u20EF": { math: "\\underrightarrow" },
      "\u20F0": { math: "\\asteraccent" },
      "\u2100": { text: "a/c" },
      "\u2101": { text: "a/s" },
      \u2102: { math: "\\mathbb{C}" },
      "\u2103": { text: "{\\textcelsius}" },
      "\u2105": { text: "c/o" },
      "\u2106": { text: "c/u" },
      \u2107: { math: "\\Euler" },
      "\u2109": { text: "F" },
      \u210A: { math: "\\mathscr{g}" },
      \u210B: { math: "\\mathscr{H}" },
      \u210C: { math: "\\mathfrak{H}" },
      \u210D: { math: "\\mathbb{H}" },
      \u210E: { math: "\\Planckconst" },
      \u210F: { math: "\\hslash" },
      \u2110: { math: "\\mathscr{I}" },
      \u2111: { math: "\\mathfrak{I}" },
      \u2112: { math: "\\mathscr{L}" },
      \u2113: { math: "\\mathscr{l}" },
      \u2115: { math: "\\mathbb{N}" },
      "\u2116": { text: "{\\cyrchar\\textnumero}" },
      "\u2117": { text: "{\\textcircledP}" },
      "\u2118": { math: "\\wp" },
      \u2119: { math: "\\mathbb{P}" },
      \u211A: { math: "\\mathbb{Q}" },
      \u211B: { math: "\\mathscr{R}" },
      \u211C: { math: "\\mathfrak{R}" },
      \u211D: { math: "\\mathbb{R}" },
      "\u211E": { math: "\\Elzxrat" },
      "\u2120": { text: "{\\textservicemark}" },
      "\u2121": { text: "TEL" },
      "\u2122": { text: "{\\texttrademark}", textpackages: ["textcomp"] },
      \u2124: { math: "\\mathbb{Z}" },
      \u2126: { math: "\\Omega" },
      "\u2127": { math: "\\mho" },
      \u2128: { math: "\\mathfrak{Z}" },
      "\u2129": { text: "{\\textriota}" },
      \u212A: { text: "K" },
      \u212B: { math: "\\Angstroem", text: "{\\AA}" },
      \u212C: { math: "\\mathscr{B}" },
      \u212D: { math: "\\mathfrak{C}" },
      "\u212E": { text: "{\\textestimated}" },
      \u212F: { math: "\\mathscr{e}" },
      \u2130: { math: "\\mathscr{E}" },
      \u2131: { math: "\\mathscr{F}" },
      "\u2132": { math: "\\Finv" },
      \u2133: { math: "\\mathscr{M}" },
      \u2134: { math: "\\mathscr{o}" },
      \u2135: { math: "\\aleph" },
      \u2136: { math: "\\beth" },
      \u2137: { math: "\\gimel" },
      \u2138: { math: "\\daleth" },
      "\u213C": { math: "\\mathbb{\\pi}" },
      "\u213D": { math: "\\mathbb{\\gamma}" },
      "\u213E": { math: "\\mathbb{\\Gamma}" },
      "\u213F": { math: "\\mathbb{\\Pi}" },
      "\u2140": { math: "\\mathbb{\\Sigma}" },
      "\u2141": { math: "\\Game" },
      "\u2142": { math: "\\sansLturned" },
      "\u2143": { math: "\\sansLmirrored" },
      "\u2144": { math: "\\Yup" },
      "\u2145": { math: "\\CapitalDifferentialD" },
      "\u2146": { math: "\\DifferentialD" },
      "\u2147": { math: "\\ExponetialE" },
      "\u2148": { math: "\\ComplexI" },
      "\u2149": { math: "\\ComplexJ" },
      "\u214A": { math: "\\PropertyLine" },
      "\u214B": { math: "\\invamp" },
      "\u2150": { math: "\\frac{1}{7}" },
      "\u2151": { math: "\\frac{1}{9}" },
      "\u2152": { math: "\\frac{1}{10}" },
      "\u2153": { math: "\\frac{1}{3}" },
      "\u2154": { math: "\\frac{2}{3}" },
      "\u2155": { math: "\\frac{1}{5}" },
      "\u2156": { math: "\\frac{2}{5}" },
      "\u2157": { math: "\\frac{3}{5}" },
      "\u2158": { math: "\\frac{4}{5}" },
      "\u2159": { math: "\\frac{1}{6}" },
      "\u215A": { math: "\\frac{5}{6}" },
      "\u215B": { math: "\\frac{1}{8}" },
      "\u215C": { math: "\\frac{3}{8}" },
      "\u215D": { math: "\\frac{5}{8}" },
      "\u215E": { math: "\\frac{7}{8}" },
      "\u215F": { math: "\\frac{1}" },
      "\u2160": { text: "I" },
      "\u2161": { text: "II" },
      "\u2162": { text: "III" },
      "\u2163": { text: "IV" },
      "\u2164": { text: "V" },
      "\u2165": { text: "VI" },
      "\u2166": { text: "VII" },
      "\u2167": { text: "VIII" },
      "\u2168": { text: "IX" },
      "\u2169": { text: "X" },
      "\u216A": { text: "XI" },
      "\u216B": { text: "XII" },
      "\u216C": { text: "L" },
      "\u216D": { text: "C" },
      "\u216E": { text: "D" },
      "\u216F": { text: "M" },
      "\u2170": { text: "i" },
      "\u2171": { text: "ii" },
      "\u2172": { text: "iii" },
      "\u2173": { text: "iv" },
      "\u2174": { text: "v" },
      "\u2175": { text: "vi" },
      "\u2176": { text: "vii" },
      "\u2177": { text: "viii" },
      "\u2178": { text: "ix" },
      "\u2179": { text: "x" },
      "\u217A": { text: "xi" },
      "\u217B": { text: "xii" },
      "\u217C": { text: "l" },
      "\u217D": { text: "c" },
      "\u217E": { text: "d" },
      "\u217F": { text: "m" },
      "\u2189": { math: "\\frac{0}{3}" },
      "\u2190": { math: "\\leftarrow" },
      "\u2191": { math: "\\uparrow" },
      "\u2192": { math: "\\rightarrow", text: "{\\textrightarrow}", textpackages: ["textcomp"] },
      "\u2193": { math: "\\downarrow" },
      "\u2194": { math: "\\leftrightarrow" },
      "\u2195": { math: "\\updownarrow" },
      "\u2196": { math: "\\nwarrow" },
      "\u2197": { math: "\\nearrow" },
      "\u2198": { math: "\\searrow" },
      "\u2199": { math: "\\swarrow" },
      "\u219A": { math: "\\nleftarrow" },
      "\u219B": { math: "\\nrightarrow" },
      "\u219C": { math: "\\arrowwaveleft" },
      "\u219D": { math: "\\arrowwaveright" },
      "\u219E": { math: "\\twoheadleftarrow" },
      "\u219F": { math: "\\twoheaduparrow" },
      "\u21A0": { math: "\\twoheadrightarrow" },
      "\u21A1": { math: "\\twoheaddownarrow" },
      "\u21A2": { math: "\\leftarrowtail" },
      "\u21A3": { math: "\\rightarrowtail" },
      "\u21A4": { math: "\\mapsfrom" },
      "\u21A5": { math: "\\MapsUp" },
      "\u21A6": { math: "\\mapsto" },
      "\u21A7": { math: "\\MapsDown" },
      "\u21A8": { math: "\\updownarrowbar" },
      "\u21A9": { math: "\\hookleftarrow" },
      "\u21AA": { math: "\\hookrightarrow" },
      "\u21AB": { math: "\\looparrowleft" },
      "\u21AC": { math: "\\looparrowright" },
      "\u21AD": { math: "\\leftrightsquigarrow" },
      "\u21AE": { math: "\\nleftrightarrow" },
      "\u21AF": { math: "\\lightning" },
      "\u21B0": { math: "\\Lsh" },
      "\u21B1": { math: "\\Rsh" },
      "\u21B2": { math: "\\dlsh" },
      "\u21B3": { text: "\\reflectbox{\\carriagereturn}", textpackages: ["graphics", "unicode-math"] },
      "\u21B4": { math: "\\linefeed" },
      "\u21B5": { math: "\\carriagereturn" },
      "\u21B6": { math: "\\curvearrowleft" },
      "\u21B7": { math: "\\curvearrowright" },
      "\u21B8": { math: "\\barovernorthwestarrow" },
      "\u21B9": { math: "\\barleftarrowrightarrowba" },
      "\u21BA": { math: "\\circlearrowleft" },
      "\u21BB": { math: "\\circlearrowright" },
      "\u21BC": { math: "\\leftharpoonup" },
      "\u21BD": { math: "\\leftharpoondown" },
      "\u21BE": { math: "\\upharpoonright" },
      "\u21BF": { math: "\\upharpoonleft" },
      "\u21C0": { math: "\\rightharpoonup", mathpackages: ["amsmath", "amssymb"] },
      "\u21C1": { math: "\\rightharpoondown" },
      "\u21C2": { math: "\\downharpoonright" },
      "\u21C3": { math: "\\downharpoonleft" },
      "\u21C4": { math: "\\rightleftarrows" },
      "\u21C5": { math: "\\dblarrowupdown" },
      "\u21C6": { math: "\\leftrightarrows" },
      "\u21C7": { math: "\\leftleftarrows" },
      "\u21C8": { math: "\\upuparrows" },
      "\u21C9": { math: "\\rightrightarrows" },
      "\u21CA": { math: "\\downdownarrows" },
      "\u21CB": { math: "\\leftrightharpoons" },
      "\u21CC": { math: "\\rightleftharpoons" },
      "\u21CD": { math: "\\nLeftarrow" },
      "\u21CE": { math: "\\nLeftrightarrow" },
      "\u21CF": { math: "\\nRightarrow" },
      "\u21D0": { math: "\\Leftarrow" },
      "\u21D1": { math: "\\Uparrow" },
      "\u21D2": { math: "\\Rightarrow" },
      "\u21D3": { math: "\\Downarrow" },
      "\u21D4": { math: "\\Leftrightarrow" },
      "\u21D5": { math: "\\Updownarrow" },
      "\u21D6": { math: "\\Nwarrow" },
      "\u21D7": { math: "\\Nearrow" },
      "\u21D8": { math: "\\Searrow" },
      "\u21D9": { math: "\\Swarrow" },
      "\u21DA": { math: "\\Lleftarrow" },
      "\u21DB": { math: "\\Rrightarrow" },
      "\u21DC": { math: "\\leftsquigarrow" },
      "\u21DD": { math: "\\rightsquigarrow" },
      "\u21DE": { math: "\\nHuparrow" },
      "\u21DF": { math: "\\nHdownarrow" },
      "\u21E0": { math: "\\dashleftarrow" },
      "\u21E1": { math: "\\updasharrow" },
      "\u21E2": { math: "\\dashrightarrow" },
      "\u21E3": { math: "\\downdasharrow" },
      "\u21E4": { math: "\\LeftArrowBar" },
      "\u21E5": { math: "\\RightArrowBar" },
      "\u21E6": { math: "\\leftwhitearrow" },
      "\u21E7": { math: "\\upwhitearrow" },
      "\u21E8": { math: "\\rightwhitearrow" },
      "\u21E9": { math: "\\downwhitearrow" },
      "\u21EA": { math: "\\whitearrowupfrombar" },
      "\u21F4": { math: "\\circleonrightarrow" },
      "\u21F5": { math: "\\DownArrowUpArrow" },
      "\u21F6": { math: "\\rightthreearrows" },
      "\u21F7": { math: "\\nvleftarrow" },
      "\u21F8": { math: "\\pfun" },
      "\u21F9": { math: "\\nvleftrightarrow" },
      "\u21FA": { math: "\\nVleftarrow" },
      "\u21FB": { math: "\\ffun" },
      "\u21FC": { math: "\\nVleftrightarrow" },
      "\u21FD": { math: "\\leftarrowtriangle" },
      "\u21FE": { math: "\\rightarrowtriangle" },
      "\u21FF": { math: "\\leftrightarrowtriangle" },
      "\u2200": { math: "\\forall" },
      "\u2201": { math: "\\complement" },
      "\u2202": { math: "\\partial" },
      "\u2203": { math: "\\exists" },
      "\u2204": { math: "\\nexists" },
      "\u2205": { math: "\\varnothing" },
      "\u2206": { math: "\\increment" },
      "\u2207": { math: "\\nabla" },
      "\u2208": { math: "\\in" },
      "\u2209": { math: "\\not\\in" },
      "\u220A": { math: "\\smallin" },
      "\u220B": { math: "\\ni" },
      "\u220C": { math: "\\not\\ni" },
      "\u220D": { math: "\\smallni" },
      "\u220E": { math: "\\QED" },
      "\u220F": { math: "\\prod" },
      "\u2210": { math: "\\coprod" },
      "\u2211": { math: "\\sum" },
      "\u2212": { math: "-", text: "-" },
      "\u2213": { math: "\\mp" },
      "\u2214": { math: "\\dotplus" },
      "\u2215": { text: "/" },
      "\u2216": { math: "\\setminus" },
      "\u2217": { math: "{_\\ast}" },
      "\u2218": { math: "\\circ" },
      "\u2219": { math: "\\bullet" },
      "\u221A": { math: "\\surd" },
      "\u221B": { math: "\\sqrt[3]" },
      "\u221C": { math: "\\sqrt[4]" },
      "\u221D": { math: "\\propto" },
      "\u221E": { math: "\\infty" },
      "\u221F": { math: "\\rightangle" },
      "\u2220": { math: "\\angle" },
      "\u2221": { math: "\\measuredangle" },
      "\u2222": { math: "\\sphericalangle" },
      "\u2223": { math: "\\mid" },
      "\u2224": { math: "\\nmid" },
      "\u2225": { math: "\\parallel" },
      "\u2226": { math: "\\nparallel" },
      "\u2227": { math: "\\wedge" },
      "\u2228": { math: "\\vee" },
      "\u2229": { math: "\\cap" },
      "\u222A": { math: "\\cup" },
      "\u222B": { math: "\\int" },
      "\u222C": { math: "{\\int\\!\\int}" },
      "\u222D": { math: "{\\int\\!\\int\\!\\int}" },
      "\u222E": { math: "\\oint" },
      "\u222F": { math: "\\surfintegral" },
      "\u2230": { math: "\\volintegral" },
      "\u2231": { math: "\\clwintegral" },
      "\u2232": { math: "\\lcirclerightint", mathpackages: ["MnSymbol"] },
      "\u2233": { math: "\\rcirclerightint", mathpackages: ["MnSymbol"] },
      "\u2234": { math: "\\therefore" },
      "\u2235": { math: "\\because" },
      "\u2236": { math: ":" },
      "\u2237": { math: "\\Colon" },
      "\u2238": { math: "\\dotdiv", mathpackages: ["mathabx"] },
      "\u2239": { math: "\\eqcolon" },
      "\u223A": { math: "\\mathbin{{:}\\!\\!{-}\\!\\!{:}}" },
      "\u223B": { math: "\\homothetic" },
      "\u223C": { math: "\\sim" },
      "\u223D": { math: "\\backsim" },
      "\u223E": { math: "\\lazysinv" },
      "\u223F": { math: "\\AC" },
      "\u2240": { math: "\\wr" },
      "\u2241": { math: "\\not\\sim" },
      "\u2242": { math: "\\texteqsim", mathpackages: ["xecjk"] },
      "\u2242\u0338": { math: "\\NotEqualTilde" },
      "\u2243": { math: "\\simeq" },
      "\u2244": { math: "\\not\\simeq" },
      "\u2245": { math: "\\cong" },
      "\u2246": { math: "\\approxnotequal" },
      "\u2247": { math: "\\not\\cong" },
      "\u2248": { math: "\\approx" },
      "\u2249": { math: "\\not\\approx" },
      "\u224A": { math: "\\approxeq" },
      "\u224B": { math: "\\tildetrpl" },
      "\u224B\u0338": { math: "\\not\\apid" },
      "\u224C": { math: "\\allequal" },
      "\u224D": { math: "\\asymp" },
      "\u224E": { math: "\\Bumpeq" },
      "\u224E\u0338": { math: "\\NotHumpDownHump" },
      "\u224F": { math: "\\bumpeq" },
      "\u224F\u0338": { math: "\\NotHumpEqual" },
      "\u2250": { math: "\\doteq" },
      "\u2250\u0338": { math: "\\not\\doteq" },
      "\u2251": { math: "\\doteqdot" },
      "\u2252": { math: "\\fallingdotseq" },
      "\u2253": { math: "\\risingdotseq" },
      "\u2254": { math: "\\coloneq", text: ":=" },
      "\u2255": { math: "=:" },
      "\u2256": { math: "\\eqcirc" },
      "\u2257": { math: "\\circeq" },
      "\u2258": { math: "\\arceq" },
      "\u2259": { math: "\\estimates" },
      "\u225B": { math: "\\starequal" },
      "\u225C": { math: "\\triangleq" },
      "\u225D": { math: "\\eqdef" },
      "\u225E": { math: "\\measeq" },
      "\u2260": { math: "\\neq" },
      "\u2261": { math: "\\equiv" },
      "\u2262": { math: "\\not\\equiv" },
      "\u2263": { math: "\\Equiv" },
      "\u2264": { math: "\\leq" },
      "\u2265": { math: "\\geq" },
      "\u2266": { math: "\\leqq" },
      "\u2267": { math: "\\geqq" },
      "\u2268": { math: "\\lneqq" },
      "\u2268\uFE00": { math: "\\lvertneqq" },
      "\u2269": { math: "\\gneqq" },
      "\u2269\uFE00": { math: "\\gvertneqq" },
      "\u226A": { math: "\\ll" },
      "\u226A\u0338": { math: "\\NotLessLess" },
      "\u226B": { math: "\\gg" },
      "\u226B\u0338": { math: "\\NotGreaterGreater" },
      "\u226C": { math: "\\between" },
      "\u226D": { math: "{\\not\\kern-0.3em\\times}" },
      "\u226E": { math: "\\not<" },
      "\u226F": { math: "\\not>" },
      "\u2270": { math: "\\not\\leq" },
      "\u2271": { math: "\\not\\geq" },
      "\u2272": { math: "\\lessequivlnt" },
      "\u2273": { math: "\\greaterequivlnt" },
      "\u2276": { math: "\\lessgtr" },
      "\u2277": { math: "\\gtrless" },
      "\u2278": { math: "\\notlessgreater" },
      "\u2279": { math: "\\notgreaterless" },
      "\u227A": { math: "\\prec" },
      "\u227B": { math: "\\succ" },
      "\u227C": { math: "\\preccurlyeq" },
      "\u227D": { math: "\\succcurlyeq" },
      "\u227E": { math: "\\precapprox" },
      "\u227E\u0338": { math: "\\NotPrecedesTilde" },
      "\u227F": { math: "\\succapprox" },
      "\u227F\u0338": { math: "\\NotSucceedsTilde" },
      "\u2280": { math: "\\not\\prec" },
      "\u2281": { math: "\\not\\succ" },
      "\u2282": { math: "\\subset" },
      "\u2283": { math: "\\supset" },
      "\u2284": { math: "\\not\\subset" },
      "\u2285": { math: "\\not\\supset" },
      "\u2286": { math: "\\subseteq" },
      "\u2287": { math: "\\supseteq" },
      "\u2288": { math: "\\not\\subseteq" },
      "\u2289": { math: "\\not\\supseteq" },
      "\u228A": { math: "\\subsetneq" },
      "\u228A\uFE00": { math: "\\varsubsetneqq" },
      "\u228B": { math: "\\supsetneq" },
      "\u228B\uFE00": { math: "\\varsupsetneq" },
      "\u228C": { math: "\\cupleftarrow" },
      "\u228D": { math: "\\cupdot" },
      "\u228E": { math: "\\uplus" },
      "\u228F": { math: "\\sqsubset" },
      "\u228F\u0338": { math: "\\NotSquareSubset" },
      "\u2290": { math: "\\sqsupset" },
      "\u2290\u0338": { math: "\\NotSquareSuperset" },
      "\u2291": { math: "\\sqsubseteq" },
      "\u2292": { math: "\\sqsupseteq" },
      "\u2293": { math: "\\sqcap" },
      "\u2294": { math: "\\sqcup" },
      "\u2295": { math: "\\oplus" },
      "\u2296": { math: "\\ominus" },
      "\u2297": { math: "\\otimes" },
      "\u2298": { math: "\\oslash" },
      "\u2299": { math: "\\odot" },
      "\u229A": { math: "\\circledcirc" },
      "\u229B": { math: "\\circledast" },
      "\u229C": { math: "\\circledequal" },
      "\u229D": { math: "\\circleddash" },
      "\u229E": { math: "\\boxplus" },
      "\u229F": { math: "\\boxminus" },
      "\u22A0": { math: "\\boxtimes" },
      "\u22A1": { math: "\\boxdot" },
      "\u22A2": { math: "\\vdash" },
      "\u22A3": { math: "\\dashv" },
      "\u22A4": { math: "\\top" },
      "\u22A5": { math: "\\perp" },
      "\u22A6": { math: "\\assert" },
      "\u22A7": { math: "\\truestate" },
      "\u22A8": { math: "\\forcesextra" },
      "\u22A9": { math: "\\Vdash" },
      "\u22AA": { math: "\\Vvdash" },
      "\u22AB": { math: "\\VDash" },
      "\u22AC": { math: "\\nvdash" },
      "\u22AD": { math: "\\nvDash" },
      "\u22AE": { math: "\\nVdash" },
      "\u22AF": { math: "\\nVDash" },
      "\u22B0": { math: "\\prurel" },
      "\u22B1": { math: "\\scurel" },
      "\u22B2": { math: "\\vartriangleleft" },
      "\u22B3": { math: "\\vartriangleright" },
      "\u22B4": { math: "\\trianglelefteq" },
      "\u22B5": { math: "\\trianglerighteq" },
      "\u22B6": { math: "\\original" },
      "\u22B7": { math: "\\image" },
      "\u22B8": { math: "\\multimap" },
      "\u22B9": { math: "\\hermitconjmatrix" },
      "\u22BA": { math: "\\intercal" },
      "\u22BB": { math: "\\veebar" },
      "\u22BC": { math: "\\barwedge" },
      "\u22BD": { math: "\\barvee" },
      "\u22BE": { math: "\\rightanglearc" },
      "\u22BF": { math: "\\varlrtriangle" },
      "\u22C2": { math: "\\bigcap" },
      "\u22C3": { math: "\\bigcup" },
      "\u22C4": { math: "\\diamond" },
      "\u22C5": { math: "\\cdot" },
      "\u22C6": { math: "\\star" },
      "\u22C7": { math: "\\divideontimes" },
      "\u22C8": { math: "\\bowtie" },
      "\u22C9": { math: "\\ltimes" },
      "\u22CA": { math: "\\rtimes" },
      "\u22CB": { math: "\\leftthreetimes" },
      "\u22CC": { math: "\\rightthreetimes" },
      "\u22CD": { math: "\\backsimeq" },
      "\u22CE": { math: "\\curlyvee" },
      "\u22CF": { math: "\\curlywedge" },
      "\u22D0": { math: "\\Subset" },
      "\u22D1": { math: "\\Supset" },
      "\u22D2": { math: "\\Cap" },
      "\u22D3": { math: "\\Cup" },
      "\u22D4": { math: "\\pitchfork" },
      "\u22D5": { math: "\\hash" },
      "\u22D6": { math: "\\lessdot" },
      "\u22D7": { math: "\\gtrdot" },
      "\u22D8": { math: "\\verymuchless" },
      "\u22D9": { math: "\\verymuchgreater" },
      "\u22DA": { math: "\\lesseqgtr" },
      "\u22DB": { math: "\\gtreqless" },
      "\u22DC": { math: "\\eqless" },
      "\u22DD": { math: "\\eqgtr" },
      "\u22DE": { math: "\\curlyeqprec" },
      "\u22DF": { math: "\\curlyeqsucc" },
      "\u22E0": { math: "\\npreceq" },
      "\u22E1": { math: "\\nsucceq" },
      "\u22E2": { math: "\\not\\sqsubseteq" },
      "\u22E3": { math: "\\not\\sqsupseteq" },
      "\u22E4": { math: "\\sqsubsetneq" },
      "\u22E5": { math: "\\Elzsqspne" },
      "\u22E6": { math: "\\lnsim" },
      "\u22E7": { math: "\\gnsim" },
      "\u22E8": { math: "\\precedesnotsimilar" },
      "\u22E9": { math: "\\succnsim" },
      "\u22EA": { math: "\\ntriangleleft" },
      "\u22EB": { math: "\\ntriangleright" },
      "\u22EC": { math: "\\ntrianglelefteq" },
      "\u22ED": { math: "\\ntrianglerighteq" },
      "\u22EE": { math: "\\vdots" },
      "\u22EF": { math: "\\cdots" },
      "\u22F0": { math: "\\upslopeellipsis" },
      "\u22F1": { math: "\\downslopeellipsis" },
      "\u22F2": { math: "\\disin" },
      "\u22F3": { math: "\\varisins" },
      "\u22F4": { math: "\\isins" },
      "\u22F5": { math: "\\isindot" },
      "\u22F6": { math: "\\barin" },
      "\u22F7": { math: "\\isinobar" },
      "\u22F8": { math: "\\isinvb" },
      "\u22F9": { math: "\\isinE" },
      "\u22FA": { math: "\\nisd" },
      "\u22FB": { math: "\\varnis" },
      "\u22FC": { math: "\\nis" },
      "\u22FD": { math: "\\varniobar" },
      "\u22FE": { math: "\\niobar" },
      "\u22FF": { math: "\\bagmember" },
      "\u2300": { math: "\\diameter" },
      "\u2302": { math: "\\house" },
      "\u2305": { math: "\\varbarwedge", text: "{\\barwedge}" },
      "\u2306": { math: "\\perspcorrespond" },
      "\u2308": { math: "\\lceil" },
      "\u2309": { math: "\\rceil" },
      "\u230A": { math: "\\lfloor" },
      "\u230B": { math: "\\rfloor" },
      "\u2310": { math: "\\invneg" },
      "\u2311": { math: "\\wasylozenge" },
      "\u2312": { math: "\\profline" },
      "\u2313": { math: "\\profsurf" },
      "\u2315": { math: "\\recorder" },
      "\u2316": { math: '{\\mathchar"2208}' },
      "\u2317": { math: "\\viewdata" },
      "\u2319": { math: "\\turnednot" },
      "\u231C": { math: "\\ulcorner" },
      "\u231D": { math: "\\urcorner" },
      "\u231E": { math: "\\llcorner" },
      "\u231F": { math: "\\lrcorner" },
      "\u2320": { math: "\\inttop" },
      "\u2321": { math: "\\intbottom" },
      "\u2322": { math: "\\frown" },
      "\u2323": { math: "\\smile" },
      "\u2329": { math: "\\langle" },
      "\u232A": { math: "\\rangle" },
      "\u232C": { math: "\\varhexagonlrbonds" },
      "\u2332": { math: "\\conictaper" },
      "\u2336": { math: "\\topbot" },
      "\u2339": { math: "\\APLinv" },
      "\u233F": { math: "\\notslash" },
      "\u2340": { math: "\\notbackslash" },
      "\u2347": { math: "\\APLleftarrowbox" },
      "\u2348": { math: "\\APLrightarrowbox" },
      "\u2349": { math: "\\invdiameter" },
      "\u2350": { math: "\\APLuparrowbox" },
      "\u2353": { math: "\\APLboxupcaret" },
      "\u2357": { math: "\\APLdownarrowbox" },
      "\u235D": { math: "\\APLcomment" },
      "\u235E": { math: "\\APLinput" },
      "\u235F": { math: "\\APLlog" },
      "\u2370": { math: "\\APLboxquestion" },
      "\u237C": { math: "\\rangledownzigzagarrow" },
      "\u2394": { math: "\\hexagon" },
      "\u239B": { math: "\\lparenuend" },
      "\u239C": { math: "\\lparenextender" },
      "\u239D": { math: "\\lparenlend" },
      "\u239E": { math: "\\rparenuend" },
      "\u239F": { math: "\\rparenextender" },
      "\u23A0": { math: "\\rparenlend" },
      "\u23A1": { math: "\\lbrackuend" },
      "\u23A2": { math: "\\lbrackextender" },
      "\u23A3": { math: "\\Elzdlcorn" },
      "\u23A4": { math: "\\rbrackuend" },
      "\u23A5": { math: "\\rbrackextender" },
      "\u23A6": { math: "\\rbracklend" },
      "\u23A7": { math: "\\lbraceuend" },
      "\u23A8": { math: "\\lbracemid" },
      "\u23A9": { math: "\\lbracelend" },
      "\u23AA": { math: "\\vbraceextender" },
      "\u23AB": { math: "\\rbraceuend" },
      "\u23AC": { math: "\\rbracemid" },
      "\u23AD": { math: "\\rbracelend" },
      "\u23AE": { math: "\\intextender" },
      "\u23AF": { math: "\\harrowextender" },
      "\u23B0": { math: "\\lmoustache" },
      "\u23B1": { math: "\\rmoustache" },
      "\u23B2": { math: "\\sumtop" },
      "\u23B3": { math: "\\sumbottom" },
      "\u23B4": { math: "\\overbracket" },
      "\u23B5": { math: "\\underbracket" },
      "\u23B6": { math: "\\bbrktbrk" },
      "\u23B7": { math: "\\sqrtbottom" },
      "\u23B8": { math: "\\lvboxline" },
      "\u23B9": { math: "\\rvboxline" },
      "\u23CE": { math: "\\varcarriagereturn" },
      "\u23DC": { math: "\\overparen" },
      "\u23DD": { math: "\\underparen" },
      "\u23DE": { math: "\\overbrace" },
      "\u23DF": { math: "\\underbrace" },
      "\u23E0": { math: "\\obrbrak" },
      "\u23E1": { math: "\\ubrbrak" },
      "\u23E2": { math: "\\trapezium" },
      "\u23E3": { math: "\\benzenr" },
      "\u23E4": { math: "\\strns" },
      "\u23E5": { math: "\\fltns" },
      "\u23E6": { math: "\\accurrent" },
      "\u23E7": { math: "\\elinters" },
      "\u2460": { text: "\\ding{172}" },
      "\u2461": { text: "\\ding{173}" },
      "\u2462": { text: "\\ding{174}" },
      "\u2463": { text: "\\ding{175}" },
      "\u2464": { text: "\\ding{176}" },
      "\u2465": { text: "\\ding{177}" },
      "\u2466": { text: "\\ding{178}" },
      "\u2467": { text: "\\ding{179}" },
      "\u2468": { text: "\\ding{180}" },
      "\u2469": { text: "\\ding{181}" },
      "\u246A": { text: "(11)" },
      "\u246B": { text: "(12)" },
      "\u246C": { text: "(13)" },
      "\u246D": { text: "(14)" },
      "\u246E": { text: "(15)" },
      "\u246F": { text: "(16)" },
      "\u2470": { text: "(17)" },
      "\u2471": { text: "(18)" },
      "\u2472": { text: "(19)" },
      "\u2473": { text: "(20)" },
      "\u2474": { text: "(1)" },
      "\u2475": { text: "(2)" },
      "\u2476": { text: "(3)" },
      "\u2477": { text: "(4)" },
      "\u2478": { text: "(5)" },
      "\u2479": { text: "(6)" },
      "\u247A": { text: "(7)" },
      "\u247B": { text: "(8)" },
      "\u247C": { text: "(9)" },
      "\u247D": { text: "(10)" },
      "\u247E": { text: "(11)" },
      "\u247F": { text: "(12)" },
      "\u2480": { text: "(13)" },
      "\u2481": { text: "(14)" },
      "\u2482": { text: "(15)" },
      "\u2483": { text: "(16)" },
      "\u2484": { text: "(17)" },
      "\u2485": { text: "(18)" },
      "\u2486": { text: "(19)" },
      "\u2487": { text: "(20)" },
      "\u2488": { text: "1." },
      "\u2489": { text: "2." },
      "\u248A": { text: "3." },
      "\u248B": { text: "4." },
      "\u248C": { text: "5." },
      "\u248D": { text: "6." },
      "\u248E": { text: "7." },
      "\u248F": { text: "8." },
      "\u2490": { text: "9." },
      "\u2491": { text: "10." },
      "\u2492": { text: "11." },
      "\u2493": { text: "12." },
      "\u2494": { text: "13." },
      "\u2495": { text: "14." },
      "\u2496": { text: "15." },
      "\u2497": { text: "16." },
      "\u2498": { text: "17." },
      "\u2499": { text: "18." },
      "\u249A": { text: "19." },
      "\u249B": { text: "20." },
      "\u249C": { text: "(a)" },
      "\u249D": { text: "(b)" },
      "\u249E": { text: "(c)" },
      "\u249F": { text: "(d)" },
      "\u24A0": { text: "(e)" },
      "\u24A1": { text: "(f)" },
      "\u24A2": { text: "(g)" },
      "\u24A3": { text: "(h)" },
      "\u24A4": { text: "(i)" },
      "\u24A5": { text: "(j)" },
      "\u24A6": { text: "(k)" },
      "\u24A7": { text: "(l)" },
      "\u24A8": { text: "(m)" },
      "\u24A9": { text: "(n)" },
      "\u24AA": { text: "(o)" },
      "\u24AB": { text: "(p)" },
      "\u24AC": { text: "(q)" },
      "\u24AD": { text: "(r)" },
      "\u24AE": { text: "(s)" },
      "\u24AF": { text: "(t)" },
      "\u24B0": { text: "(u)" },
      "\u24B1": { text: "(v)" },
      "\u24B2": { text: "(w)" },
      "\u24B3": { text: "(x)" },
      "\u24B4": { text: "(y)" },
      "\u24B5": { text: "(z)" },
      "\u24B6": { text: "(A)" },
      "\u24B7": { text: "(B)" },
      "\u24B8": { text: "(C)" },
      "\u24B9": { text: "(D)" },
      "\u24BA": { text: "(E)" },
      "\u24BB": { text: "(F)" },
      "\u24BC": { text: "(G)" },
      "\u24BD": { text: "(H)" },
      "\u24BE": { text: "(I)" },
      "\u24BF": { text: "(J)" },
      "\u24C0": { text: "(K)" },
      "\u24C1": { text: "(L)" },
      "\u24C2": { text: "(M)" },
      "\u24C3": { text: "(N)" },
      "\u24C4": { text: "(O)" },
      "\u24C5": { text: "(P)" },
      "\u24C6": { text: "(Q)" },
      "\u24C7": { text: "(R)" },
      "\u24C8": { math: "\\circledS" },
      "\u24C9": { text: "(T)" },
      "\u24CA": { text: "(U)" },
      "\u24CB": { text: "(V)" },
      "\u24CC": { text: "(W)" },
      "\u24CD": { text: "(X)" },
      "\u24CE": { text: "(Y)" },
      "\u24CF": { text: "(Z)" },
      "\u24D0": { text: "(a)" },
      "\u24D1": { text: "(b)" },
      "\u24D2": { text: "(c)" },
      "\u24D3": { text: "(d)" },
      "\u24D4": { text: "(e)" },
      "\u24D5": { text: "(f)" },
      "\u24D6": { text: "(g)" },
      "\u24D7": { text: "(h)" },
      "\u24D8": { text: "(i)" },
      "\u24D9": { text: "(j)" },
      "\u24DA": { text: "(k)" },
      "\u24DB": { text: "(l)" },
      "\u24DC": { text: "(m)" },
      "\u24DD": { text: "(n)" },
      "\u24DE": { text: "(o)" },
      "\u24DF": { text: "(p)" },
      "\u24E0": { text: "(q)" },
      "\u24E1": { text: "(r)" },
      "\u24E2": { text: "(s)" },
      "\u24E3": { text: "(t)" },
      "\u24E4": { text: "(u)" },
      "\u24E5": { text: "(v)" },
      "\u24E6": { text: "(w)" },
      "\u24E7": { text: "(x)" },
      "\u24E8": { text: "(y)" },
      "\u24E9": { text: "(z)" },
      "\u24EA": { text: "(0)" },
      "\u2500": { text: "-" },
      "\u2501": { text: "=" },
      "\u2502": { text: "|" },
      "\u2503": { text: "|" },
      "\u2504": { text: "-" },
      "\u2505": { text: "=" },
      "\u2506": { math: "\\Elzdshfnc" },
      "\u2507": { text: "|" },
      "\u2508": { text: "-" },
      "\u2509": { text: "=" },
      "\u250A": { text: "|" },
      "\u250B": { text: "|" },
      "\u250C": { text: "+" },
      "\u250D": { text: "+" },
      "\u250E": { text: "+" },
      "\u250F": { text: "+" },
      "\u2510": { text: "+" },
      "\u2511": { text: "+" },
      "\u2512": { text: "+" },
      "\u2513": { text: "+" },
      "\u2514": { text: "+" },
      "\u2515": { text: "+" },
      "\u2516": { text: "+" },
      "\u2517": { text: "+" },
      "\u2518": { text: "+" },
      "\u2519": { math: "\\Elzsqfnw" },
      "\u251A": { text: "+" },
      "\u251B": { text: "+" },
      "\u251C": { text: "+" },
      "\u251D": { text: "+" },
      "\u251E": { text: "+" },
      "\u251F": { text: "+" },
      "\u2520": { text: "+" },
      "\u2521": { text: "+" },
      "\u2522": { text: "+" },
      "\u2523": { text: "+" },
      "\u2524": { text: "+" },
      "\u2525": { text: "+" },
      "\u2526": { text: "+" },
      "\u2527": { text: "+" },
      "\u2528": { text: "+" },
      "\u2529": { text: "+" },
      "\u252A": { text: "+" },
      "\u252B": { text: "+" },
      "\u252C": { text: "+" },
      "\u252D": { text: "+" },
      "\u252E": { text: "+" },
      "\u252F": { text: "+" },
      "\u2530": { text: "+" },
      "\u2531": { text: "+" },
      "\u2532": { text: "+" },
      "\u2533": { text: "+" },
      "\u2534": { text: "+" },
      "\u2535": { text: "+" },
      "\u2536": { text: "+" },
      "\u2537": { text: "+" },
      "\u2538": { text: "+" },
      "\u2539": { text: "+" },
      "\u253A": { text: "+" },
      "\u253B": { text: "+" },
      "\u253C": { text: "+" },
      "\u253D": { text: "+" },
      "\u253E": { text: "+" },
      "\u253F": { text: "+" },
      "\u2540": { text: "+" },
      "\u2541": { text: "+" },
      "\u2542": { text: "+" },
      "\u2543": { text: "+" },
      "\u2544": { text: "+" },
      "\u2545": { text: "+" },
      "\u2546": { text: "+" },
      "\u2547": { text: "+" },
      "\u2548": { text: "+" },
      "\u2549": { text: "+" },
      "\u254A": { text: "+" },
      "\u254B": { text: "+" },
      "\u254C": { text: "-" },
      "\u254D": { text: "=" },
      "\u254E": { text: "|" },
      "\u254F": { text: "|" },
      "\u2550": { text: "=" },
      "\u2551": { text: "|" },
      "\u2552": { text: "+" },
      "\u2553": { text: "+" },
      "\u2554": { text: "+" },
      "\u2555": { text: "+" },
      "\u2556": { text: "+" },
      "\u2557": { text: "+" },
      "\u2558": { text: "+" },
      "\u2559": { text: "+" },
      "\u255A": { text: "+" },
      "\u255B": { text: "+" },
      "\u255C": { text: "+" },
      "\u255D": { text: "+" },
      "\u255E": { text: "+" },
      "\u255F": { text: "+" },
      "\u2560": { text: "+" },
      "\u2561": { text: "+" },
      "\u2562": { text: "+" },
      "\u2563": { text: "+" },
      "\u2564": { text: "+" },
      "\u2565": { text: "+" },
      "\u2566": { text: "+" },
      "\u2567": { text: "+" },
      "\u2568": { text: "+" },
      "\u2569": { text: "+" },
      "\u256A": { text: "+" },
      "\u256B": { text: "+" },
      "\u256C": { text: "+" },
      "\u256D": { text: "+" },
      "\u256E": { text: "+" },
      "\u256F": { text: "+" },
      "\u2570": { text: "+" },
      "\u2571": { math: "\\diagup" },
      "\u2572": { text: "\\" },
      "\u2573": { text: "X" },
      "\u257C": { text: "-" },
      "\u257D": { text: "|" },
      "\u257E": { text: "-" },
      "\u257F": { text: "|" },
      "\u2580": { math: "\\blockuphalf" },
      "\u2584": { math: "\\blocklowhalf" },
      "\u2588": { math: "\\blockfull" },
      "\u258C": { math: "\\blocklefthalf" },
      "\u2590": { math: "\\blockrighthalf" },
      "\u2591": { math: "\\blockqtrshaded" },
      "\u2592": { math: "\\blockhalfshaded" },
      "\u2593": { math: "\\blockthreeqtrshaded" },
      "\u25A0": { math: "\\mdlgblksquare", text: "\\ding{110}" },
      "\u25A1": { math: "\\square" },
      "\u25A2": { math: "\\squoval" },
      "\u25A3": { math: "\\blackinwhitesquare" },
      "\u25A4": { math: "\\squarehfill" },
      "\u25A5": { math: "\\squarevfill" },
      "\u25A6": { math: "\\squarehvfill" },
      "\u25A7": { math: "\\squarenwsefill" },
      "\u25A8": { math: "\\squareneswfill" },
      "\u25A9": { math: "\\squarecrossfill" },
      "\u25AA": { math: "\\blacksquare" },
      "\u25AB": { math: "\\smwhtsquare" },
      "\u25AC": { math: "\\hrectangleblack" },
      "\u25AD": { math: "\\fbox{~~}" },
      "\u25AE": { math: "\\vrectangleblack" },
      "\u25AF": { math: "\\Elzvrecto" },
      "\u25B0": { math: "\\parallelogramblack" },
      "\u25B2": { math: "\\bigblacktriangleup", text: "\\ding{115}" },
      "\u25B3": { math: "\\bigtriangleup" },
      "\u25B4": { math: "\\blacktriangle" },
      "\u25B5": { math: "\\vartriangle" },
      "\u25B6": { math: "\\RHD" },
      "\u25B7": { math: "\\rhd" },
      "\u25B8": { math: "\\blacktriangleright" },
      "\u25B9": { math: "\\triangleright" },
      "\u25BA": { math: "\\blackpointerright" },
      "\u25BB": { math: "\\whitepointerright" },
      "\u25BC": { math: "\\bigblacktriangledown", text: "\\ding{116}" },
      "\u25BD": { math: "\\bigtriangledown" },
      "\u25BE": { math: "\\blacktriangledown" },
      "\u25BF": { math: "\\triangledown" },
      "\u25C0": { math: "\\LHD" },
      "\u25C1": { math: "\\lhd" },
      "\u25C2": { math: "\\blacktriangleleft" },
      "\u25C3": { math: "\\triangleleft" },
      "\u25C4": { math: "\\blackpointerleft" },
      "\u25C5": { math: "\\whitepointerleft" },
      "\u25C6": { math: "\\Diamondblack", text: "\\ding{117}" },
      "\u25C7": { math: "\\Diamond" },
      "\u25C8": { math: "\\blackinwhitediamond" },
      "\u25C9": { math: "\\fisheye" },
      "\u25CA": { math: "\\lozenge" },
      "\u25CB": { math: "\\bigcirc" },
      "\u25CC": { math: "\\dottedcircle" },
      "\u25CD": { math: "\\circlevertfill" },
      "\u25CE": { math: "\\bullseye" },
      "\u25CF": { math: "\\CIRCLE", text: "\\ding{108}" },
      "\u25D0": { math: "\\Elzcirfl" },
      "\u25D1": { math: "\\Elzcirfr" },
      "\u25D2": { math: "\\Elzcirfb" },
      "\u25D3": { math: "\\circletophalfblack" },
      "\u25D4": { math: "\\circleurquadblack" },
      "\u25D5": { math: "\\blackcircleulquadwhite" },
      "\u25D6": { math: "\\LEFTCIRCLE" },
      "\u25D7": { math: "\\RIGHTCIRCLE", text: "\\ding{119}" },
      "\u25D8": { math: "\\Elzrvbull" },
      "\u25D9": { math: "\\inversewhitecircle" },
      "\u25DA": { math: "\\invwhiteupperhalfcircle" },
      "\u25DB": { math: "\\invwhitelowerhalfcircle" },
      "\u25DC": { math: "\\ularc" },
      "\u25DD": { math: "\\urarc" },
      "\u25DE": { math: "\\lrarc" },
      "\u25DF": { math: "\\llarc" },
      "\u25E0": { math: "\\topsemicircle" },
      "\u25E1": { math: "\\botsemicircle" },
      "\u25E2": { math: "\\lrblacktriangle" },
      "\u25E3": { math: "\\llblacktriangle" },
      "\u25E4": { math: "\\ulblacktriangle" },
      "\u25E5": { math: "\\urblacktriangle" },
      "\u25E6": { math: "\\smwhtcircle" },
      "\u25E7": { math: "\\Elzsqfl" },
      "\u25E8": { math: "\\Elzsqfr" },
      "\u25E9": { math: "\\squareulblack" },
      "\u25EA": { math: "\\Elzsqfse" },
      "\u25EB": { math: "\\boxbar" },
      "\u25EC": { math: "\\trianglecdot" },
      "\u25ED": { math: "\\triangleleftblack" },
      "\u25EE": { math: "\\trianglerightblack" },
      "\u25EF": { math: "\\bigcirc" },
      "\u25F0": { math: "\\squareulquad" },
      "\u25F1": { math: "\\squarellquad" },
      "\u25F2": { math: "\\squarelrquad" },
      "\u25F3": { math: "\\squareurquad" },
      "\u25F4": { math: "\\circleulquad" },
      "\u25F5": { math: "\\circlellquad" },
      "\u25F6": { math: "\\circlelrquad" },
      "\u25F7": { math: "\\circleurquad" },
      "\u25F8": { math: "\\ultriangle" },
      "\u25F9": { math: "\\urtriangle" },
      "\u25FA": { math: "\\lltriangle" },
      "\u25FB": { math: "\\square" },
      "\u25FC": { math: "\\blacksquare" },
      "\u25FD": { math: "\\mdsmwhtsquare" },
      "\u25FE": { math: "\\mdsmblksquare" },
      "\u25FF": { math: "\\lrtriangle" },
      "\u2605": { math: "\\bigstar", text: "\\ding{72}" },
      "\u2606": { math: "\\bigwhitestar", text: "\\ding{73}" },
      "\u2609": { math: "\\Sun" },
      "\u260E": { text: "\\ding{37}" },
      "\u2610": { math: "\\Square" },
      "\u2611": { math: "\\CheckedBox" },
      "\u2612": { math: "\\XBox" },
      "\u2613": { text: "X" },
      "\u2615": { math: "\\steaming" },
      "\u261B": { text: "\\ding{42}" },
      "\u261E": { math: "\\pointright", text: "\\ding{43}" },
      "\u2620": { math: "\\skull" },
      "\u2621": { math: "\\danger" },
      "\u2622": { math: "\\radiation" },
      "\u2623": { math: "\\biohazard" },
      "\u262F": { math: "\\yinyang" },
      "\u2639": { math: "\\frownie" },
      "\u263A": { math: "\\smiley" },
      "\u263B": { math: "\\blacksmiley" },
      "\u263C": { math: "\\sun" },
      "\u263D": { text: "{\\rightmoon}", textpackages: ["wasysym"] },
      "\u263E": { text: "{\\leftmoon}", textpackages: ["wasysym"] },
      "\u263F": { math: "\\mercury", text: "{\\mercury}" },
      "\u2640": { math: "\\female", text: "{\\venus}" },
      "\u2641": { math: "\\earth" },
      "\u2642": { math: "\\male", text: "{\\male}" },
      "\u2643": { math: "\\jupiter", text: "{\\jupiter}" },
      "\u2644": { math: "\\saturn", text: "{\\saturn}" },
      "\u2645": { math: "\\uranus", text: "{\\uranus}" },
      "\u2646": { math: "\\neptune", text: "{\\neptune}" },
      "\u2647": { math: "\\pluto", text: "{\\pluto}" },
      "\u2648": { math: "\\aries", text: "{\\aries}" },
      "\u2649": { math: "\\taurus", text: "{\\taurus}" },
      "\u264A": { math: "\\gemini", text: "{\\gemini}" },
      "\u264B": { math: "\\cancer", text: "{\\cancer}" },
      "\u264C": { math: "\\leo", text: "{\\leo}" },
      "\u264D": { math: "\\virgo", text: "{\\virgo}" },
      "\u264E": { math: "\\libra", text: "{\\libra}" },
      "\u264F": { math: "\\scorpio", text: "{\\scorpio}" },
      "\u2650": { math: "\\sagittarius", text: "{\\sagittarius}" },
      "\u2651": { math: "\\capricornus", text: "{\\capricornus}" },
      "\u2652": { math: "\\aquarius", text: "{\\aquarius}" },
      "\u2653": { math: "\\pisces", text: "{\\pisces}" },
      "\u2660": { math: "\\spadesuit", text: "\\ding{171}" },
      "\u2661": { math: "\\heartsuit" },
      "\u2662": { math: "\\diamond" },
      "\u2663": { math: "\\clubsuit", text: "\\ding{168}" },
      "\u2664": { math: "\\varspadesuit" },
      "\u2665": { math: "\\varheartsuit", text: "\\ding{170}" },
      "\u2666": { math: "\\vardiamondsuit", text: "\\ding{169}" },
      "\u2667": { math: "\\varclubsuit" },
      "\u2669": { math: "\\quarternote", text: "{\\quarternote}" },
      "\u266A": { math: "\\eighthnote", text: "{\\eighthnote}" },
      "\u266B": { math: "\\twonotes" },
      "\u266C": { math: "\\sixteenthnote" },
      "\u266D": { math: "\\flat" },
      "\u266E": { math: "\\natural" },
      "\u266F": { math: "\\sharp" },
      "\u267B": { math: "\\recycle" },
      "\u267E": { math: "\\acidfree" },
      "\u2680": { math: "\\dicei" },
      "\u2681": { math: "\\diceii" },
      "\u2682": { math: "\\diceiii" },
      "\u2683": { math: "\\diceiv" },
      "\u2684": { math: "\\dicev" },
      "\u2685": { math: "\\dicevi" },
      "\u2686": { math: "\\circledrightdot" },
      "\u2687": { math: "\\circledtwodots" },
      "\u2688": { math: "\\blackcircledrightdot" },
      "\u2689": { math: "\\blackcircledtwodots" },
      "\u2693": { math: "\\anchor" },
      "\u2694": { math: "\\swords" },
      "\u26A0": { math: "\\warning" },
      "\u26A5": { math: "\\Hermaphrodite" },
      "\u26AA": { math: "\\medcirc" },
      "\u26AB": { math: "\\medbullet" },
      "\u26AC": { math: "\\mdsmwhtcircle" },
      "\u26B2": { math: "\\neuter" },
      "\u2701": { text: "\\ding{33}" },
      "\u2702": { text: "\\ding{34}" },
      "\u2703": { text: "\\ding{35}" },
      "\u2704": { text: "\\ding{36}" },
      "\u2706": { text: "\\ding{38}" },
      "\u2707": { text: "\\ding{39}" },
      "\u2708": { text: "\\ding{40}" },
      "\u2709": { text: "\\ding{41}" },
      "\u270C": { text: "\\ding{44}" },
      "\u270D": { text: "\\ding{45}" },
      "\u270E": { math: "\\pencil", text: "\\ding{46}" },
      "\u270F": { text: "\\ding{47}" },
      "\u2710": { text: "\\ding{48}" },
      "\u2711": { text: "\\ding{49}" },
      "\u2712": { text: "\\ding{50}" },
      "\u2713": { math: "\\checkmark", text: "\\ding{51}" },
      "\u2714": { text: "\\ding{52}" },
      "\u2715": { text: "\\ding{53}" },
      "\u2716": { text: "\\ding{54}" },
      "\u2717": { math: "\\ballotx", text: "\\ding{55}" },
      "\u2718": { text: "\\ding{56}" },
      "\u2719": { text: "\\ding{57}" },
      "\u271A": { text: "\\ding{58}" },
      "\u271B": { text: "\\ding{59}" },
      "\u271C": { text: "\\ding{60}" },
      "\u271D": { text: "\\ding{61}" },
      "\u271E": { text: "\\ding{62}" },
      "\u271F": { text: "\\ding{63}" },
      "\u2720": { math: "\\maltese", text: "\\ding{64}" },
      "\u2721": { text: "\\ding{65}" },
      "\u2722": { text: "\\ding{66}" },
      "\u2723": { text: "\\ding{67}" },
      "\u2724": { text: "\\ding{68}" },
      "\u2725": { text: "\\ding{69}" },
      "\u2726": { text: "\\ding{70}" },
      "\u2727": { text: "\\ding{71}" },
      "\u2729": { text: "\\ding{73}" },
      "\u272A": { math: "\\circledstar", text: "\\ding{74}" },
      "\u272B": { text: "\\ding{75}" },
      "\u272C": { text: "\\ding{76}" },
      "\u272D": { text: "\\ding{77}" },
      "\u272E": { text: "\\ding{78}" },
      "\u272F": { text: "\\ding{79}" },
      "\u2730": { text: "\\ding{80}" },
      "\u2731": { text: "\\ding{81}" },
      "\u2732": { text: "\\ding{82}" },
      "\u2733": { text: "\\ding{83}" },
      "\u2734": { text: "\\ding{84}" },
      "\u2735": { text: "\\ding{85}" },
      "\u2736": { math: "\\varstar", text: "\\ding{86}" },
      "\u2737": { text: "\\ding{87}" },
      "\u2738": { text: "\\ding{88}" },
      "\u2739": { text: "\\ding{89}" },
      "\u273A": { text: "\\ding{90}" },
      "\u273B": { text: "\\ding{91}" },
      "\u273C": { text: "\\ding{92}" },
      "\u273D": { math: "\\dingasterisk", text: "\\ding{93}" },
      "\u273E": { text: "\\ding{94}" },
      "\u273F": { text: "\\ding{95}" },
      "\u2740": { text: "\\ding{96}" },
      "\u2741": { text: "\\ding{97}" },
      "\u2742": { text: "\\ding{98}" },
      "\u2743": { text: "\\ding{99}" },
      "\u2744": { text: "\\ding{100}" },
      "\u2745": { text: "\\ding{101}" },
      "\u2746": { text: "\\ding{102}" },
      "\u2747": { text: "\\ding{103}" },
      "\u2748": { text: "\\ding{104}" },
      "\u2749": { text: "\\ding{105}" },
      "\u274A": { text: "\\ding{106}" },
      "\u274B": { text: "\\ding{107}" },
      "\u274D": { text: "\\ding{109}" },
      "\u274F": { text: "\\ding{111}" },
      "\u2750": { text: "\\ding{112}" },
      "\u2751": { text: "\\ding{113}" },
      "\u2752": { text: "\\ding{114}" },
      "\u2756": { text: "\\ding{118}" },
      "\u2758": { text: "\\ding{120}" },
      "\u2759": { text: "\\ding{121}" },
      "\u275A": { text: "\\ding{122}" },
      "\u275B": { text: "\\ding{123}" },
      "\u275C": { text: "\\ding{124}" },
      "\u275D": { text: "\\ding{125}" },
      "\u275E": { text: "\\ding{126}" },
      "\u2761": { text: "\\ding{161}" },
      "\u2762": { text: "\\ding{162}" },
      "\u2763": { text: "\\ding{163}" },
      "\u2764": { text: "\\ding{164}" },
      "\u2765": { text: "\\ding{165}" },
      "\u2766": { text: "\\ding{166}" },
      "\u2767": { text: "\\ding{167}" },
      "\u2772": { math: "\\lbrbrak" },
      "\u2773": { math: "\\rbrbrak" },
      "\u2776": { text: "\\ding{182}" },
      "\u2777": { text: "\\ding{183}" },
      "\u2778": { text: "\\ding{184}" },
      "\u2779": { text: "\\ding{185}" },
      "\u277A": { text: "\\ding{186}" },
      "\u277B": { text: "\\ding{187}" },
      "\u277C": { text: "\\ding{188}" },
      "\u277D": { text: "\\ding{189}" },
      "\u277E": { text: "\\ding{190}" },
      "\u277F": { text: "\\ding{191}" },
      "\u2780": { text: "\\ding{192}" },
      "\u2781": { text: "\\ding{193}" },
      "\u2782": { text: "\\ding{194}" },
      "\u2783": { text: "\\ding{195}" },
      "\u2784": { text: "\\ding{196}" },
      "\u2785": { text: "\\ding{197}" },
      "\u2786": { text: "\\ding{198}" },
      "\u2787": { text: "\\ding{199}" },
      "\u2788": { text: "\\ding{200}" },
      "\u2789": { text: "\\ding{201}" },
      "\u278A": { text: "\\ding{202}" },
      "\u278B": { text: "\\ding{203}" },
      "\u278C": { text: "\\ding{204}" },
      "\u278D": { text: "\\ding{205}" },
      "\u278E": { text: "\\ding{206}" },
      "\u278F": { text: "\\ding{207}" },
      "\u2790": { text: "\\ding{208}" },
      "\u2791": { text: "\\ding{209}" },
      "\u2792": { text: "\\ding{210}" },
      "\u2793": { text: "\\ding{211}" },
      "\u2794": { text: "\\ding{212}" },
      "\u2798": { text: "\\ding{216}" },
      "\u2799": { text: "\\ding{217}" },
      "\u279A": { text: "\\ding{218}" },
      "\u279B": { math: "\\draftingarrow", text: "\\ding{219}" },
      "\u279C": { text: "\\ding{220}" },
      "\u279D": { text: "\\ding{221}" },
      "\u279E": { text: "\\ding{222}" },
      "\u279F": { text: "\\ding{223}" },
      "\u27A0": { text: "\\ding{224}" },
      "\u27A1": { text: "\\ding{225}" },
      "\u27A2": { math: "\\arrowbullet", text: "\\ding{226}" },
      "\u27A3": { text: "\\ding{227}" },
      "\u27A4": { text: "\\ding{228}" },
      "\u27A5": { text: "\\ding{229}" },
      "\u27A6": { text: "\\ding{230}" },
      "\u27A7": { text: "\\ding{231}" },
      "\u27A8": { text: "\\ding{232}" },
      "\u27A9": { text: "\\ding{233}" },
      "\u27AA": { text: "\\ding{234}" },
      "\u27AB": { text: "\\ding{235}" },
      "\u27AC": { text: "\\ding{236}" },
      "\u27AD": { text: "\\ding{237}" },
      "\u27AE": { text: "\\ding{238}" },
      "\u27AF": { text: "\\ding{239}" },
      "\u27B1": { text: "\\ding{241}" },
      "\u27B2": { text: "\\ding{242}" },
      "\u27B3": { text: "\\ding{243}" },
      "\u27B4": { text: "\\ding{244}" },
      "\u27B5": { text: "\\ding{245}" },
      "\u27B6": { text: "\\ding{246}" },
      "\u27B7": { text: "\\ding{247}" },
      "\u27B8": { text: "\\ding{248}" },
      "\u27B9": { text: "\\ding{249}" },
      "\u27BA": { text: "\\ding{250}" },
      "\u27BB": { text: "\\ding{251}" },
      "\u27BC": { text: "\\ding{252}" },
      "\u27BD": { text: "\\ding{253}" },
      "\u27BE": { text: "\\ding{254}" },
      "\u27C0": { math: "\\threedangle" },
      "\u27C1": { math: "\\whiteinwhitetriangle" },
      "\u27C2": { math: "\\perp" },
      "\u27C3": { math: "\\subsetcirc" },
      "\u27C4": { math: "\\supsetcirc" },
      "\u27C5": { math: "\\Lbag" },
      "\u27C6": { math: "\\Rbag" },
      "\u27C7": { math: "\\veedot" },
      "\u27C8": { math: "\\bsolhsub" },
      "\u27C9": { math: "\\suphsol" },
      "\u27CC": { math: "\\longdivision" },
      "\u27D0": { math: "\\Diamonddot" },
      "\u27D1": { math: "\\wedgedot" },
      "\u27D2": { math: "\\upin" },
      "\u27D3": { math: "\\pullback" },
      "\u27D4": { math: "\\pushout" },
      "\u27D5": { math: "\\leftouterjoin" },
      "\u27D6": { math: "\\rightouterjoin" },
      "\u27D7": { math: "\\fullouterjoin" },
      "\u27D8": { math: "\\bigbot" },
      "\u27D9": { math: "\\bigtop" },
      "\u27DA": { math: "\\DashVDash" },
      "\u27DB": { math: "\\dashVdash" },
      "\u27DC": { math: "\\multimapinv" },
      "\u27DD": { math: "\\vlongdash" },
      "\u27DE": { math: "\\longdashv" },
      "\u27DF": { math: "\\cirbot" },
      "\u27E0": { math: "\\lozengeminus" },
      "\u27E1": { math: "\\concavediamond" },
      "\u27E2": { math: "\\concavediamondtickleft" },
      "\u27E3": { math: "\\concavediamondtickright" },
      "\u27E4": { math: "\\whitesquaretickleft" },
      "\u27E5": { math: "\\whitesquaretickright" },
      "\u27E6": { math: "\\llbracket" },
      "\u27E7": { math: "\\rrbracket" },
      "\u27E8": { math: "\\langle" },
      "\u27E9": { math: "\\rangle" },
      "\u27EA": { math: "\\lang" },
      "\u27EB": { math: "\\rang" },
      "\u27EC": { math: "\\Lbrbrak" },
      "\u27ED": { math: "\\Rbrbrak" },
      "\u27EE": { math: "\\lgroup" },
      "\u27EF": { math: "\\rgroup" },
      "\u27F0": { math: "\\UUparrow" },
      "\u27F1": { math: "\\DDownarrow" },
      "\u27F2": { math: "\\acwgapcirclearrow" },
      "\u27F3": { math: "\\cwgapcirclearrow" },
      "\u27F4": { math: "\\rightarrowonoplus" },
      "\u27F5": { math: "\\longleftarrow" },
      "\u27F6": { math: "\\longrightarrow" },
      "\u27F7": { math: "\\longleftrightarrow" },
      "\u27F8": { math: "\\Longleftarrow" },
      "\u27F9": { math: "\\Longrightarrow" },
      "\u27FA": { math: "\\Longleftrightarrow" },
      "\u27FB": { math: "\\longmapsfrom" },
      "\u27FC": { math: "\\longmapsto" },
      "\u27FD": { math: "\\Longmapsfrom" },
      "\u27FE": { math: "\\Longmapsto" },
      "\u27FF": { math: "\\sim\\joinrel\\leadsto" },
      "\u2900": { math: "\\psur" },
      "\u2901": { math: "\\nVtwoheadrightarrow" },
      "\u2902": { math: "\\nvLeftarrow" },
      "\u2903": { math: "\\nvRightarrow" },
      "\u2904": { math: "\\nvLeftrightarrow" },
      "\u2906": { math: "\\Mapsfrom" },
      "\u2907": { math: "\\Mapsto" },
      "\u2908": { math: "\\downarrowbarred" },
      "\u2909": { math: "\\uparrowbarred" },
      "\u290A": { math: "\\Uuparrow" },
      "\u290B": { math: "\\Ddownarrow" },
      "\u290C": { math: "\\leftbkarrow" },
      "\u290D": { math: "\\rightbkarrow" },
      "\u290E": { math: "\\leftdbkarrow" },
      "\u290F": { math: "\\dbkarow" },
      "\u2910": { math: "\\drbkarow" },
      "\u2911": { math: "\\rightdotarrow" },
      "\u2912": { math: "\\UpArrowBar" },
      "\u2913": { math: "\\DownArrowBar" },
      "\u2914": { math: "\\pinj" },
      "\u2915": { math: "\\finj" },
      "\u2916": { math: "\\bij" },
      "\u2917": { math: "\\nvtwoheadrightarrowtail" },
      "\u2918": { math: "\\nVtwoheadrightarrowtail" },
      "\u2919": { math: "\\lefttail" },
      "\u291A": { math: "\\righttail" },
      "\u291B": { math: "\\leftdbltail" },
      "\u291C": { math: "\\rightdbltail" },
      "\u291D": { math: "\\diamondleftarrow" },
      "\u291E": { math: "\\rightarrowdiamond" },
      "\u291F": { math: "\\diamondleftarrowbar" },
      "\u2920": { math: "\\barrightarrowdiamond" },
      "\u2921": { math: "\\nwsearrow" },
      "\u2922": { math: "\\neswarrow" },
      "\u292B": { math: "\\rdiagovfdiag" },
      "\u292C": { math: "\\fdiagovrdiag" },
      "\u292D": { math: "\\seovnearrow" },
      "\u292E": { math: "\\neovsearrow" },
      "\u292F": { math: "\\fdiagovnearrow" },
      "\u2930": { math: "\\rdiagovsearrow" },
      "\u2931": { math: "\\neovnwarrow" },
      "\u2932": { math: "\\nwovnearrow" },
      "\u2934": { math: "\\uprightcurvearrow" },
      "\u2935": { math: "\\downrightcurvedarrow" },
      "\u2938": { math: "\\cwrightarcarrow" },
      "\u2939": { math: "\\acwleftarcarrow" },
      "\u293A": { math: "\\acwoverarcarrow" },
      "\u293B": { math: "\\acwunderarcarrow" },
      "\u293C": { math: "\\curvearrowrightminus" },
      "\u293D": { math: "\\curvearrowleftplus" },
      "\u293E": { math: "\\cwundercurvearrow" },
      "\u293F": { math: "\\ccwundercurvearrow" },
      "\u2940": { math: "\\Elolarr" },
      "\u2941": { math: "\\Elorarr" },
      "\u2942": { math: "\\ElzRlarr" },
      "\u2943": { math: "\\leftarrowshortrightarrow" },
      "\u2944": { math: "\\ElzrLarr" },
      "\u2945": { math: "\\rightarrowplus" },
      "\u2946": { math: "\\leftarrowplus" },
      "\u2947": { math: "\\Elzrarrx" },
      "\u2948": { math: "\\leftrightarrowcircle" },
      "\u2949": { math: "\\twoheaduparrowcircle" },
      "\u294A": { math: "\\leftrightharpoon" },
      "\u294B": { math: "\\rightleftharpoon" },
      "\u294C": { math: "\\updownharpoonrightleft" },
      "\u294D": { math: "\\updownharpoonleftright" },
      "\u294E": { math: "\\LeftRightVector" },
      "\u294F": { math: "\\RightUpDownVector" },
      "\u2950": { math: "\\DownLeftRightVector" },
      "\u2951": { math: "\\LeftUpDownVector" },
      "\u2952": { math: "\\LeftVectorBar" },
      "\u2953": { math: "\\RightVectorBar" },
      "\u2954": { math: "\\RightUpVectorBar" },
      "\u2955": { math: "\\RightDownVectorBar" },
      "\u2956": { math: "\\DownLeftVectorBar" },
      "\u2957": { math: "\\DownRightVectorBar" },
      "\u2958": { math: "\\LeftUpVectorBar" },
      "\u2959": { math: "\\LeftDownVectorBar" },
      "\u295A": { math: "\\LeftTeeVector" },
      "\u295B": { math: "\\RightTeeVector" },
      "\u295C": { math: "\\RightUpTeeVector" },
      "\u295D": { math: "\\RightDownTeeVector" },
      "\u295E": { math: "\\DownLeftTeeVector" },
      "\u295F": { math: "\\DownRightTeeVector" },
      "\u2960": { math: "\\LeftUpTeeVector" },
      "\u2961": { math: "\\LeftDownTeeVector" },
      "\u2962": { math: "\\leftleftharpoons" },
      "\u2963": { math: "\\upupharpoons" },
      "\u2964": { math: "\\rightrightharpoons" },
      "\u2965": { math: "\\downdownharpoons" },
      "\u2966": { math: "\\leftrightharpoonsup" },
      "\u2967": { math: "\\leftrightharpoonsdown" },
      "\u2968": { math: "\\rightleftharpoonsup" },
      "\u2969": { math: "\\rightleftharpoonsdown" },
      "\u296A": { math: "\\leftbarharpoon" },
      "\u296B": { math: "\\barleftharpoon" },
      "\u296C": { math: "\\rightbarharpoon" },
      "\u296D": { math: "\\barrightharpoon" },
      "\u296E": { math: "\\UpEquilibrium" },
      "\u296F": { math: "\\ReverseUpEquilibrium" },
      "\u2970": { math: "\\RoundImplies" },
      "\u2971": { math: "\\equalrightarrow" },
      "\u2972": { math: "\\similarrightarrow" },
      "\u2973": { math: "\\leftarrowsimilar" },
      "\u2974": { math: "\\rightarrowsimilar" },
      "\u2975": { math: "\\rightarrowapprox" },
      "\u2976": { math: "\\ltlarr" },
      "\u2977": { math: "\\leftarrowless" },
      "\u2978": { math: "\\gtrarr" },
      "\u2979": { math: "\\subrarr" },
      "\u297A": { math: "\\leftarrowsubset" },
      "\u297B": { math: "\\suplarr" },
      "\u297E": { math: "\\upfishtail" },
      "\u297F": { math: "\\downfishtail" },
      "\u2980": { math: "\\Elztfnc" },
      "\u2981": { math: "\\spot" },
      "\u2982": { math: "\\typecolon" },
      "\u2983": { math: "\\lBrace" },
      "\u2984": { math: "\\rBrace" },
      "\u2986": { math: "\\Elroang" },
      "\u2987": { math: "\\limg" },
      "\u2988": { math: "\\rimg" },
      "\u2989": { math: "\\lblot" },
      "\u298A": { math: "\\rblot" },
      "\u298B": { math: "\\lbrackubar" },
      "\u298C": { math: "\\rbrackubar" },
      "\u298D": { math: "\\lbrackultick" },
      "\u298E": { math: "\\rbracklrtick" },
      "\u298F": { math: "\\lbracklltick" },
      "\u2990": { math: "\\rbrackurtick" },
      "\u2991": { math: "\\langledot" },
      "\u2992": { math: "\\rangledot" },
      "\u2993": { math: "<\\kern-0.58em(" },
      "\u2995": { math: "\\Lparengtr" },
      "\u2996": { math: "\\Rparenless" },
      "\u2997": { math: "\\lblkbrbrak" },
      "\u2998": { math: "\\rblkbrbrak" },
      "\u2999": { math: "\\Elzddfnc" },
      "\u299A": { math: "\\vzigzag" },
      "\u299B": { math: "\\measuredangleleft" },
      "\u299C": { math: "\\Angle" },
      "\u299D": { math: "\\rightanglemdot" },
      "\u299E": { math: "\\angles" },
      "\u299F": { math: "\\angdnr" },
      "\u29A0": { math: "\\Elzlpargt" },
      "\u29A1": { math: "\\sphericalangleup" },
      "\u29A2": { math: "\\turnangle" },
      "\u29A3": { math: "\\revangle" },
      "\u29A4": { math: "\\angleubar" },
      "\u29A5": { math: "\\revangleubar" },
      "\u29A6": { math: "\\wideangledown" },
      "\u29A7": { math: "\\wideangleup" },
      "\u29A8": { math: "\\measanglerutone" },
      "\u29A9": { math: "\\measanglelutonw" },
      "\u29AA": { math: "\\measanglerdtose" },
      "\u29AB": { math: "\\measangleldtosw" },
      "\u29AC": { math: "\\measangleurtone" },
      "\u29AD": { math: "\\measangleultonw" },
      "\u29AE": { math: "\\measangledrtose" },
      "\u29AF": { math: "\\measangledltosw" },
      "\u29B0": { math: "\\revemptyset" },
      "\u29B1": { math: "\\emptysetobar" },
      "\u29B2": { math: "\\emptysetocirc" },
      "\u29B3": { math: "\\emptysetoarr" },
      "\u29B4": { math: "\\emptysetoarrl" },
      "\u29B7": { math: "\\circledparallel" },
      "\u29B8": { math: "\\circledbslash" },
      "\u29B9": { math: "\\operp" },
      "\u29BA": { math: "\\obot" },
      "\u29BB": { math: "\\olcross" },
      "\u29BC": { math: "\\odotslashdot" },
      "\u29BD": { math: "\\uparrowoncircle" },
      "\u29BE": { math: "\\circledwhitebullet" },
      "\u29BF": { math: "\\circledbullet" },
      "\u29C0": { math: "\\circledless" },
      "\u29C1": { math: "\\circledgtr" },
      "\u29C2": { math: "\\cirscir" },
      "\u29C3": { math: "\\cirE" },
      "\u29C4": { math: "\\boxslash" },
      "\u29C5": { math: "\\boxbslash" },
      "\u29C6": { math: "\\boxast" },
      "\u29C7": { math: "\\boxcircle" },
      "\u29C8": { math: "\\boxbox" },
      "\u29C9": { math: "\\boxonbox" },
      "\u29CA": { math: "\\ElzLap" },
      "\u29CB": { math: "\\Elzdefas" },
      "\u29CC": { math: "\\triangles" },
      "\u29CD": { math: "\\triangleserifs" },
      "\u29CE": { math: "\\rtriltri" },
      "\u29CF": { math: "\\LeftTriangleBar" },
      "\u29CF\u0338": { math: "\\NotLeftTriangleBar" },
      "\u29D0": { math: "\\RightTriangleBar" },
      "\u29D0\u0338": { math: "\\NotRightTriangleBar" },
      "\u29D1": { math: "\\lfbowtie" },
      "\u29D2": { math: "\\rfbowtie" },
      "\u29D3": { math: "\\fbowtie" },
      "\u29D4": { math: "\\lftimes" },
      "\u29D5": { math: "\\rftimes" },
      "\u29D6": { math: "\\hourglass" },
      "\u29D7": { math: "\\blackhourglass" },
      "\u29D8": { math: "\\lvzigzag" },
      "\u29D9": { math: "\\rvzigzag" },
      "\u29DA": { math: "\\Lvzigzag" },
      "\u29DB": { math: "\\Rvzigzag" },
      "\u29DD": { math: "\\tieinfty" },
      "\u29DE": { math: "\\nvinfty" },
      "\u29DF": { math: "\\multimapboth" },
      "\u29E0": { math: "\\laplac" },
      "\u29E1": { math: "\\lrtriangleeq" },
      "\u29E2": { math: "\\shuffle" },
      "\u29E3": { math: "\\eparsl" },
      "\u29E4": { math: "\\smeparsl" },
      "\u29E5": { math: "\\eqvparsl" },
      "\u29E6": { math: "\\gleichstark" },
      "\u29E7": { math: "\\thermod" },
      "\u29E8": { math: "\\downtriangleleftblack" },
      "\u29E9": { math: "\\downtrianglerightblack" },
      "\u29EA": { math: "\\blackdiamonddownarrow" },
      "\u29EB": { math: "\\blacklozenge" },
      "\u29EC": { math: "\\circledownarrow" },
      "\u29ED": { math: "\\blackcircledownarrow" },
      "\u29EE": { math: "\\errbarsquare" },
      "\u29EF": { math: "\\errbarblacksquare" },
      "\u29F0": { math: "\\errbardiamond" },
      "\u29F1": { math: "\\errbarblackdiamond" },
      "\u29F2": { math: "\\errbarcircle" },
      "\u29F3": { math: "\\errbarblackcircle" },
      "\u29F4": { math: "\\RuleDelayed" },
      "\u29F5": { math: "\\setminus" },
      "\u29F6": { math: "\\dsol" },
      "\u29F7": { math: "\\rsolbar" },
      "\u29F8": { math: "\\xsol" },
      "\u29F9": { math: "\\zhide" },
      "\u29FA": { math: "\\doubleplus" },
      "\u29FB": { math: "\\tripleplus" },
      "\u29FC": { math: "\\lcurvyangle" },
      "\u29FD": { math: "\\rcurvyangle" },
      "\u29FE": { math: "\\tplus" },
      "\u29FF": { math: "\\tminus" },
      "\u2A00": { math: "\\bigodot" },
      "\u2A01": { math: "\\bigoplus" },
      "\u2A02": { math: "\\bigotimes" },
      "\u2A03": { math: "\\bigcupdot" },
      "\u2A04": { math: "\\Elxuplus" },
      "\u2A05": { math: "\\ElzThr" },
      "\u2A06": { math: "\\Elxsqcup" },
      "\u2A07": { math: "\\ElzInf" },
      "\u2A08": { math: "\\ElzSup" },
      "\u2A09": { math: "\\varprod" },
      "\u2A0A": { math: "\\modtwosum" },
      "\u2A0B": { math: "\\sumint" },
      "\u2A0C": { math: "\\iiiint" },
      "\u2A0D": { math: "\\ElzCint" },
      "\u2A0E": { math: "\\intBar" },
      "\u2A0F": { math: "\\clockoint" },
      "\u2A11": { math: "\\awint" },
      "\u2A12": { math: "\\rppolint" },
      "\u2A13": { math: "\\scpolint" },
      "\u2A14": { math: "\\npolint" },
      "\u2A15": { math: "\\pointint" },
      "\u2A16": { math: "\\sqrint" },
      "\u2A17": { math: "\\intlarhk" },
      "\u2A18": { math: "\\intx" },
      "\u2A19": { math: "\\intcap" },
      "\u2A1A": { math: "\\intcup" },
      "\u2A1B": { math: "\\upint" },
      "\u2A1C": { math: "\\lowint" },
      "\u2A1D": { math: "\\Join" },
      "\u2A1E": { math: "\\bigtriangleleft" },
      "\u2A1F": { math: "\\zcmp" },
      "\u2A20": { math: "\\zpipe" },
      "\u2A21": { math: "\\zproject" },
      "\u2A22": { math: "\\ringplus" },
      "\u2A23": { math: "\\plushat" },
      "\u2A24": { math: "\\simplus" },
      "\u2A26": { math: "\\plussim" },
      "\u2A27": { math: "\\plussubtwo" },
      "\u2A28": { math: "\\plustrif" },
      "\u2A29": { math: "\\commaminus" },
      "\u2A2B": { math: "\\minusfdots" },
      "\u2A2C": { math: "\\minusrdots" },
      "\u2A2F": { math: "\\ElzTimes" },
      "\u2A30": { math: "\\dottimes" },
      "\u2A31": { math: "\\timesbar" },
      "\u2A32": { math: "\\btimes" },
      "\u2A33": { math: "\\smashtimes" },
      "\u2A36": { math: "\\otimeshat" },
      "\u2A37": { math: "\\Otimes" },
      "\u2A38": { math: "\\odiv" },
      "\u2A39": { math: "\\triangleplus" },
      "\u2A3A": { math: "\\triangleminus" },
      "\u2A3B": { math: "\\triangletimes" },
      "\u2A3D": { math: "\\intprodr" },
      "\u2A3E": { math: "\\fcmp" },
      "\u2A3F": { math: "\\amalg" },
      "\u2A40": { math: "\\capdot" },
      "\u2A41": { math: "\\uminus" },
      "\u2A42": { math: "\\barcup" },
      "\u2A43": { math: "\\barcap" },
      "\u2A44": { math: "\\capwedge" },
      "\u2A45": { math: "\\cupvee" },
      "\u2A46": { math: "\\cupovercap" },
      "\u2A47": { math: "\\capovercup" },
      "\u2A48": { math: "\\cupbarcap" },
      "\u2A49": { math: "\\capbarcup" },
      "\u2A4A": { math: "\\twocups" },
      "\u2A4B": { math: "\\twocaps" },
      "\u2A4C": { math: "\\closedvarcup" },
      "\u2A4D": { math: "\\closedvarcap" },
      "\u2A4E": { math: "\\Sqcap" },
      "\u2A4F": { math: "\\Sqcup" },
      "\u2A50": { math: "\\closedvarcupsmashprod" },
      "\u2A51": { math: "\\wedgeodot" },
      "\u2A52": { math: "\\veeodot" },
      "\u2A53": { math: "\\ElzAnd" },
      "\u2A54": { math: "\\ElzOr" },
      "\u2A56": { math: "\\ElOr" },
      "\u2A57": { math: "\\bigslopedvee" },
      "\u2A58": { math: "\\bigslopedwedge" },
      "\u2A59": { math: "\\veeonwedge" },
      "\u2A5A": { math: "\\wedgemidvert" },
      "\u2A5B": { math: "\\veemidvert" },
      "\u2A5C": { math: "\\midbarwedge" },
      "\u2A5D": { math: "\\midbarvee" },
      "\u2A5E": { math: "\\perspcorrespond" },
      "\u2A5F": { math: "\\Elzminhat" },
      "\u2A60": { math: "\\wedgedoublebar" },
      "\u2A61": { math: "\\varveebar" },
      "\u2A62": { math: "\\doublebarvee" },
      "\u2A64": { math: "\\dsub" },
      "\u2A65": { math: "\\rsub" },
      "\u2A66": { math: "\\eqdot" },
      "\u2A67": { math: "\\dotequiv" },
      "\u2A68": { math: "\\equivVert" },
      "\u2A69": { math: "\\equivVvert" },
      "\u2A6A": { math: "\\dotsim" },
      "\u2A6B": { math: "\\simrdots" },
      "\u2A6C": { math: "\\simminussim" },
      "\u2A6D": { math: "\\congdot" },
      "\u2A6E": { math: "\\stackrel{*}{=}" },
      "\u2A6F": { math: "\\hatapprox" },
      "\u2A70": { math: "\\approxeqq" },
      "\u2A71": { math: "\\eqqplus" },
      "\u2A72": { math: "\\pluseqq" },
      "\u2A73": { math: "\\eqqsim" },
      "\u2A74": { math: "\\Coloneqq" },
      "\u2A75": { math: "\\Equal" },
      "\u2A76": { math: "\\Same" },
      "\u2A77": { math: "\\ddotseq" },
      "\u2A78": { math: "\\equivDD" },
      "\u2A79": { math: "\\ltcir" },
      "\u2A7A": { math: "\\gtcir" },
      "\u2A7B": { math: "\\ltquest" },
      "\u2A7C": { math: "\\gtquest" },
      "\u2A7D": { math: "\\leqslant", mathpackages: ["amssymb"] },
      "\u2A7D\u0338": { math: "\\nleqslant", mathpackages: ["amssymb"] },
      "\u2A7E": { math: "\\geqslant", mathpackages: ["amssymb"] },
      "\u2A7E\u0338": { math: "\\ngeqslant", mathpackages: ["amssymb"] },
      "\u2A7F": { math: "\\lesdot" },
      "\u2A80": { math: "\\gesdot" },
      "\u2A81": { math: "\\lesdoto" },
      "\u2A82": { math: "\\gesdoto" },
      "\u2A83": { math: "\\lesdotor" },
      "\u2A84": { math: "\\gesdotol" },
      "\u2A85": { math: "\\lessapprox" },
      "\u2A86": { math: "\\gtrapprox" },
      "\u2A87": { math: "\\lneq" },
      "\u2A88": { math: "\\gneq" },
      "\u2A89": { math: "\\lnapprox" },
      "\u2A8A": { math: "\\gnapprox" },
      "\u2A8B": { math: "\\lesseqqgtr" },
      "\u2A8C": { math: "\\gtreqqless" },
      "\u2A8D": { math: "\\lsime" },
      "\u2A8E": { math: "\\gsime" },
      "\u2A8F": { math: "\\lsimg" },
      "\u2A90": { math: "\\gsiml" },
      "\u2A91": { math: "\\lgE" },
      "\u2A92": { math: "\\glE" },
      "\u2A93": { math: "\\lesges" },
      "\u2A94": { math: "\\gesles" },
      "\u2A95": { math: "\\eqslantless" },
      "\u2A96": { math: "\\eqslantgtr" },
      "\u2A97": { math: "\\elsdot" },
      "\u2A98": { math: "\\egsdot" },
      "\u2A99": { math: "\\eqqless" },
      "\u2A9A": { math: "\\eqqgtr" },
      "\u2A9B": { math: "\\eqqslantless" },
      "\u2A9C": { math: "\\eqqslantgtr" },
      "\u2A9D": { math: "\\Pisymbol{ppi020}{117}" },
      "\u2A9E": { math: "\\Pisymbol{ppi020}{105}" },
      "\u2A9F": { math: "\\simlE" },
      "\u2AA0": { math: "\\simgE" },
      "\u2AA1": { math: "\\NestedLessLess" },
      "\u2AA1\u0338": { math: "\\NotNestedLessLess" },
      "\u2AA2": { math: "\\NestedGreaterGreater" },
      "\u2AA2\u0338": { math: "\\NotNestedGreaterGreater" },
      "\u2AA3": { math: "\\partialmeetcontraction" },
      "\u2AA4": { math: "\\glj" },
      "\u2AA5": { math: "\\gla" },
      "\u2AA6": { math: "\\leftslice" },
      "\u2AA7": { math: "\\rightslice" },
      "\u2AA8": { math: "\\lescc" },
      "\u2AA9": { math: "\\gescc" },
      "\u2AAA": { math: "\\smt" },
      "\u2AAB": { math: "\\lat" },
      "\u2AAC": { math: "\\smte" },
      "\u2AAD": { math: "\\late" },
      "\u2AAE": { math: "\\bumpeqq" },
      "\u2AAF": { math: "\\preceq" },
      "\u2AAF\u0338": { math: "\\not\\preceq" },
      "\u2AB0": { math: "\\succeq" },
      "\u2AB0\u0338": { math: "\\not\\succeq" },
      "\u2AB1": { math: "\\precneq" },
      "\u2AB2": { math: "\\succneq" },
      "\u2AB3": { math: "\\preceqq" },
      "\u2AB4": { math: "\\succeqq" },
      "\u2AB5": { math: "\\precneqq" },
      "\u2AB6": { math: "\\succneqq" },
      "\u2AB7": { math: "\\precapprox" },
      "\u2AB8": { math: "\\succapprox" },
      "\u2AB9": { math: "\\precnapprox" },
      "\u2ABA": { math: "\\succnapprox" },
      "\u2ABB": { math: "\\llcurly" },
      "\u2ABC": { math: "\\ggcurly" },
      "\u2ABD": { math: "\\subsetdot" },
      "\u2ABE": { math: "\\supsetdot" },
      "\u2ABF": { math: "\\subsetplus" },
      "\u2AC0": { math: "\\supsetplus" },
      "\u2AC1": { math: "\\submult" },
      "\u2AC2": { math: "\\supmult" },
      "\u2AC3": { math: "\\subedot" },
      "\u2AC4": { math: "\\supedot" },
      "\u2AC5": { math: "\\subseteqq" },
      "\u2AC5\u0338": { math: "\\nsubseteqq" },
      "\u2AC6": { math: "\\supseteqq" },
      "\u2AC6\u0338": { math: "\\nsupseteqq" },
      "\u2AC7": { math: "\\subsim" },
      "\u2AC8": { math: "\\supsim" },
      "\u2AC9": { math: "\\subsetapprox" },
      "\u2ACA": { math: "\\supsetapprox" },
      "\u2ACB": { math: "\\subsetneqq" },
      "\u2ACC": { math: "\\supsetneqq" },
      "\u2ACD": { math: "\\lsqhook" },
      "\u2ACE": { math: "\\rsqhook" },
      "\u2ACF": { math: "\\csub" },
      "\u2AD0": { math: "\\csup" },
      "\u2AD1": { math: "\\csube" },
      "\u2AD2": { math: "\\csupe" },
      "\u2AD3": { math: "\\subsup" },
      "\u2AD4": { math: "\\supsub" },
      "\u2AD5": { math: "\\subsub" },
      "\u2AD6": { math: "\\supsup" },
      "\u2AD7": { math: "\\suphsub" },
      "\u2AD8": { math: "\\supdsub" },
      "\u2AD9": { math: "\\forkv" },
      "\u2ADA": { math: "\\topfork" },
      "\u2ADB": { math: "\\mlcp" },
      "\u2ADC": { math: "\\forks" },
      "\u2ADD": { math: "\\forksnot" },
      "\u2ADD\u0338": { math: "\\forks" },
      "\u2ADE": { math: "\\shortlefttack" },
      "\u2ADF": { math: "\\shortdowntack" },
      "\u2AE0": { math: "\\shortuptack" },
      "\u2AE1": { math: "\\perps" },
      "\u2AE2": { math: "\\vDdash" },
      "\u2AE3": { math: "\\dashV" },
      "\u2AE4": { math: "\\Dashv" },
      "\u2AE5": { math: "\\DashV" },
      "\u2AE6": { math: "\\varVdash" },
      "\u2AE7": { math: "\\Barv" },
      "\u2AE8": { math: "\\vBar" },
      "\u2AE9": { math: "\\vBarv" },
      "\u2AEA": { math: "\\Top" },
      "\u2AEC": { math: "\\Not" },
      "\u2AED": { math: "\\bNot" },
      "\u2AEE": { math: "\\revnmid" },
      "\u2AEF": { math: "\\cirmid" },
      "\u2AF0": { math: "\\midcir" },
      "\u2AF1": { math: "\\topcir" },
      "\u2AF2": { math: "\\nhpar" },
      "\u2AF3": { math: "\\parsim" },
      "\u2AF4": { math: "\\interleave" },
      "\u2AF5": { math: "\\nhVvert" },
      "\u2AF6": { math: "\\Elztdcol" },
      "\u2AF7": { math: "\\lllnest" },
      "\u2AF8": { math: "\\gggnest" },
      "\u2AF9": { math: "\\leqqslant" },
      "\u2AFA": { math: "\\geqqslant" },
      "\u2AFB": { math: "\\trslash" },
      "\u2AFC": { math: "\\biginterleave" },
      "\u2AFD": { math: "{{/}\\!\\!{/}}" },
      "\u2AFD\u20E5": { math: "{\\rlap{\\textbackslash}{{/}\\!\\!{/}}}" },
      "\u2AFE": { math: "\\talloblong" },
      "\u2AFF": { math: "\\bigtalloblong" },
      "\u2B12": { math: "\\squaretopblack" },
      "\u2B13": { math: "\\squarebotblack" },
      "\u2B14": { math: "\\squareurblack" },
      "\u2B15": { math: "\\squarellblack" },
      "\u2B16": { math: "\\diamondleftblack" },
      "\u2B17": { math: "\\diamondrightblack" },
      "\u2B18": { math: "\\diamondtopblack" },
      "\u2B19": { math: "\\diamondbotblack" },
      "\u2B1A": { math: "\\dottedsquare" },
      "\u2B1B": { math: "\\blacksquare" },
      "\u2B1C": { math: "\\square" },
      "\u2B1D": { math: "\\vysmblksquare" },
      "\u2B1E": { math: "\\vysmwhtsquare" },
      "\u2B1F": { math: "\\pentagonblack" },
      "\u2B20": { math: "\\pentagon" },
      "\u2B21": { math: "\\varhexagon" },
      "\u2B22": { math: "\\varhexagonblack" },
      "\u2B23": { math: "\\hexagonblack" },
      "\u2B24": { math: "\\lgblkcircle" },
      "\u2B25": { math: "\\mdblkdiamond" },
      "\u2B26": { math: "\\mdwhtdiamond" },
      "\u2B27": { math: "\\mdblklozenge" },
      "\u2B28": { math: "\\mdwhtlozenge" },
      "\u2B29": { math: "\\smblkdiamond" },
      "\u2B2A": { math: "\\smblklozenge" },
      "\u2B2B": { math: "\\smwhtlozenge" },
      "\u2B2C": { math: "\\blkhorzoval" },
      "\u2B2D": { math: "\\whthorzoval" },
      "\u2B2E": { math: "\\blkvertoval" },
      "\u2B2F": { math: "\\whtvertoval" },
      "\u2B30": { math: "\\circleonleftarrow" },
      "\u2B31": { math: "\\leftthreearrows" },
      "\u2B32": { math: "\\leftarrowonoplus" },
      "\u2B33": { math: "\\longleftsquigarrow" },
      "\u2B34": { math: "\\nvtwoheadleftarrow" },
      "\u2B35": { math: "\\nVtwoheadleftarrow" },
      "\u2B36": { math: "\\twoheadmapsfrom" },
      "\u2B37": { math: "\\twoheadleftdbkarrow" },
      "\u2B38": { math: "\\leftdotarrow" },
      "\u2B39": { math: "\\nvleftarrowtail" },
      "\u2B3A": { math: "\\nVleftarrowtail" },
      "\u2B3B": { math: "\\twoheadleftarrowtail" },
      "\u2B3C": { math: "\\nvtwoheadleftarrowtail" },
      "\u2B3D": { math: "\\nVtwoheadleftarrowtail" },
      "\u2B3E": { math: "\\leftarrowx" },
      "\u2B3F": { math: "\\leftcurvedarrow" },
      "\u2B40": { math: "\\equalleftarrow" },
      "\u2B41": { math: "\\bsimilarleftarrow" },
      "\u2B42": { math: "\\leftarrowbackapprox" },
      "\u2B43": { math: "\\rightarrowgtr" },
      "\u2B44": { math: "\\rightarrowsupset" },
      "\u2B45": { math: "\\LLeftarrow" },
      "\u2B46": { math: "\\RRightarrow" },
      "\u2B47": { math: "\\bsimilarrightarrow" },
      "\u2B48": { math: "\\rightarrowbackapprox" },
      "\u2B49": { math: "\\similarleftarrow" },
      "\u2B4A": { math: "\\leftarrowapprox" },
      "\u2B4B": { math: "\\leftarrowbsimilar" },
      "\u2B4C": { math: "\\rightarrowbsimilar" },
      "\u2B50": { math: "\\medwhitestar" },
      "\u2B51": { math: "\\medblackstar" },
      "\u2B52": { math: "\\smwhitestar" },
      "\u2B53": { math: "\\rightpentagonblack" },
      "\u2B54": { math: "\\rightpentagon" },
      "\u3008": { math: "\\langle" },
      "\u3009": { math: "\\rangle" },
      "\u3012": { math: "\\postalmark" },
      "\u3014": { math: "\\lbrbrak" },
      "\u3015": { math: "\\rbrbrak" },
      "\u301A": { math: "\\openbracketleft" },
      "\u301B": { math: "\\openbracketright" },
      "\u3030": { math: "\\hzigzag" },
      \uFB00: { text: "ff" },
      \uFB01: { text: "fi" },
      \uFB02: { text: "fl" },
      \uFB03: { text: "ffi" },
      \uFB04: { text: "ffl" },
      \uFB05: { text: "st" },
      \uFB06: { text: "st" },
      "\uFFFD": { text: "{\\dbend}" },
      "\u{1D400}": { math: "\\mathbf{A}" },
      "\u{1D401}": { math: "\\mathbf{B}" },
      "\u{1D402}": { math: "\\mathbf{C}" },
      "\u{1D403}": { math: "\\mathbf{D}" },
      "\u{1D404}": { math: "\\mathbf{E}" },
      "\u{1D405}": { math: "\\mathbf{F}" },
      "\u{1D406}": { math: "\\mathbf{G}" },
      "\u{1D407}": { math: "\\mathbf{H}" },
      "\u{1D408}": { math: "\\mathbf{I}" },
      "\u{1D409}": { math: "\\mathbf{J}" },
      "\u{1D40A}": { math: "\\mathbf{K}" },
      "\u{1D40B}": { math: "\\mathbf{L}" },
      "\u{1D40C}": { math: "\\mathbf{M}" },
      "\u{1D40D}": { math: "\\mathbf{N}" },
      "\u{1D40E}": { math: "\\mathbf{O}" },
      "\u{1D40F}": { math: "\\mathbf{P}" },
      "\u{1D410}": { math: "\\mathbf{Q}" },
      "\u{1D411}": { math: "\\mathbf{R}" },
      "\u{1D412}": { math: "\\mathbf{S}" },
      "\u{1D413}": { math: "\\mathbf{T}" },
      "\u{1D414}": { math: "\\mathbf{U}" },
      "\u{1D415}": { math: "\\mathbf{V}" },
      "\u{1D416}": { math: "\\mathbf{W}" },
      "\u{1D417}": { math: "\\mathbf{X}" },
      "\u{1D418}": { math: "\\mathbf{Y}" },
      "\u{1D419}": { math: "\\mathbf{Z}" },
      "\u{1D41A}": { math: "\\mathbf{a}" },
      "\u{1D41B}": { math: "\\mathbf{b}" },
      "\u{1D41C}": { math: "\\mathbf{c}" },
      "\u{1D41D}": { math: "\\mathbf{d}" },
      "\u{1D41E}": { math: "\\mathbf{e}" },
      "\u{1D41F}": { math: "\\mathbf{f}" },
      "\u{1D420}": { math: "\\mathbf{g}" },
      "\u{1D421}": { math: "\\mathbf{h}" },
      "\u{1D422}": { math: "\\mathbf{i}" },
      "\u{1D423}": { math: "\\mathbf{j}" },
      "\u{1D424}": { math: "\\mathbf{k}" },
      "\u{1D425}": { math: "\\mathbf{l}" },
      "\u{1D426}": { math: "\\mathbf{m}" },
      "\u{1D427}": { math: "\\mathbf{n}" },
      "\u{1D428}": { math: "\\mathbf{o}" },
      "\u{1D429}": { math: "\\mathbf{p}" },
      "\u{1D42A}": { math: "\\mathbf{q}" },
      "\u{1D42B}": { math: "\\mathbf{r}" },
      "\u{1D42C}": { math: "\\mathbf{s}" },
      "\u{1D42D}": { math: "\\mathbf{t}" },
      "\u{1D42E}": { math: "\\mathbf{u}" },
      "\u{1D42F}": { math: "\\mathbf{v}" },
      "\u{1D430}": { math: "\\mathbf{w}" },
      "\u{1D431}": { math: "\\mathbf{x}" },
      "\u{1D432}": { math: "\\mathbf{y}" },
      "\u{1D433}": { math: "\\mathbf{z}" },
      "\u{1D434}": { math: "\\mathsl{A}" },
      "\u{1D435}": { math: "\\mathsl{B}" },
      "\u{1D436}": { math: "\\mathsl{C}" },
      "\u{1D437}": { math: "\\mathsl{D}" },
      "\u{1D438}": { math: "\\mathsl{E}" },
      "\u{1D439}": { math: "\\mathsl{F}" },
      "\u{1D43A}": { math: "\\mathsl{G}" },
      "\u{1D43B}": { math: "\\mathsl{H}" },
      "\u{1D43C}": { math: "\\mathsl{I}" },
      "\u{1D43D}": { math: "\\mathsl{J}" },
      "\u{1D43E}": { math: "\\mathsl{K}" },
      "\u{1D43F}": { math: "\\mathsl{L}" },
      "\u{1D440}": { math: "\\mathsl{M}" },
      "\u{1D441}": { math: "\\mathsl{N}" },
      "\u{1D442}": { math: "\\mathsl{O}" },
      "\u{1D443}": { math: "\\mathsl{P}" },
      "\u{1D444}": { math: "\\mathsl{Q}" },
      "\u{1D445}": { math: "\\mathsl{R}" },
      "\u{1D446}": { math: "\\mathsl{S}" },
      "\u{1D447}": { math: "\\mathsl{T}" },
      "\u{1D448}": { math: "\\mathsl{U}" },
      "\u{1D449}": { math: "\\mathsl{V}" },
      "\u{1D44A}": { math: "\\mathsl{W}" },
      "\u{1D44B}": { math: "\\mathsl{X}" },
      "\u{1D44C}": { math: "\\mathsl{Y}" },
      "\u{1D44D}": { math: "\\mathsl{Z}" },
      "\u{1D44E}": { math: "\\mathsl{a}" },
      "\u{1D44F}": { math: "\\mathsl{b}" },
      "\u{1D450}": { math: "\\mathsl{c}" },
      "\u{1D451}": { math: "\\mathsl{d}" },
      "\u{1D452}": { math: "\\mathsl{e}" },
      "\u{1D453}": { math: "\\mathsl{f}" },
      "\u{1D454}": { math: "\\mathsl{g}" },
      "\u{1D456}": { math: "\\mathsl{i}" },
      "\u{1D457}": { math: "\\mathsl{j}" },
      "\u{1D458}": { math: "\\mathsl{k}" },
      "\u{1D459}": { math: "\\mathsl{l}" },
      "\u{1D45A}": { math: "\\mathsl{m}" },
      "\u{1D45B}": { math: "\\mathsl{n}" },
      "\u{1D45C}": { math: "\\mathsl{o}" },
      "\u{1D45D}": { math: "\\mathsl{p}" },
      "\u{1D45E}": { math: "\\mathsl{q}" },
      "\u{1D45F}": { math: "\\mathsl{r}" },
      "\u{1D460}": { math: "\\mathsl{s}" },
      "\u{1D461}": { math: "\\mathsl{t}" },
      "\u{1D462}": { math: "\\mathsl{u}" },
      "\u{1D463}": { math: "\\mathsl{v}" },
      "\u{1D464}": { math: "\\mathsl{w}" },
      "\u{1D465}": { math: "\\mathsl{x}" },
      "\u{1D466}": { math: "\\mathsl{y}" },
      "\u{1D467}": { math: "\\mathsl{z}" },
      "\u{1D468}": { math: "\\mathbit{A}" },
      "\u{1D469}": { math: "\\mathbit{B}" },
      "\u{1D46A}": { math: "\\mathbit{C}" },
      "\u{1D46B}": { math: "\\mathbit{D}" },
      "\u{1D46C}": { math: "\\mathbit{E}" },
      "\u{1D46D}": { math: "\\mathbit{F}" },
      "\u{1D46E}": { math: "\\mathbit{G}" },
      "\u{1D46F}": { math: "\\mathbit{H}" },
      "\u{1D470}": { math: "\\mathbit{I}" },
      "\u{1D471}": { math: "\\mathbit{J}" },
      "\u{1D472}": { math: "\\mathbit{K}" },
      "\u{1D473}": { math: "\\mathbit{L}" },
      "\u{1D474}": { math: "\\mathbit{M}" },
      "\u{1D475}": { math: "\\mathbit{N}" },
      "\u{1D476}": { math: "\\mathbit{O}" },
      "\u{1D477}": { math: "\\mathbit{P}" },
      "\u{1D478}": { math: "\\mathbit{Q}" },
      "\u{1D479}": { math: "\\mathbit{R}" },
      "\u{1D47A}": { math: "\\mathbit{S}" },
      "\u{1D47B}": { math: "\\mathbit{T}" },
      "\u{1D47C}": { math: "\\mathbit{U}" },
      "\u{1D47D}": { math: "\\mathbit{V}" },
      "\u{1D47E}": { math: "\\mathbit{W}" },
      "\u{1D47F}": { math: "\\mathbit{X}" },
      "\u{1D480}": { math: "\\mathbit{Y}" },
      "\u{1D481}": { math: "\\mathbit{Z}" },
      "\u{1D482}": { math: "\\mathbit{a}" },
      "\u{1D483}": { math: "\\mathbit{b}" },
      "\u{1D484}": { math: "\\mathbit{c}" },
      "\u{1D485}": { math: "\\mathbit{d}" },
      "\u{1D486}": { math: "\\mathbit{e}" },
      "\u{1D487}": { math: "\\mathbit{f}" },
      "\u{1D488}": { math: "\\mathbit{g}" },
      "\u{1D489}": { math: "\\mathbit{h}" },
      "\u{1D48A}": { math: "\\mathbit{i}" },
      "\u{1D48B}": { math: "\\mathbit{j}" },
      "\u{1D48C}": { math: "\\mathbit{k}" },
      "\u{1D48D}": { math: "\\mathbit{l}" },
      "\u{1D48E}": { math: "\\mathbit{m}" },
      "\u{1D48F}": { math: "\\mathbit{n}" },
      "\u{1D490}": { math: "\\mathbit{o}" },
      "\u{1D491}": { math: "\\mathbit{p}" },
      "\u{1D492}": { math: "\\mathbit{q}" },
      "\u{1D493}": { math: "\\mathbit{r}" },
      "\u{1D494}": { math: "\\mathbit{s}" },
      "\u{1D495}": { math: "\\mathbit{t}" },
      "\u{1D496}": { math: "\\mathbit{u}" },
      "\u{1D497}": { math: "\\mathbit{v}" },
      "\u{1D498}": { math: "\\mathbit{w}" },
      "\u{1D499}": { math: "\\mathbit{x}" },
      "\u{1D49A}": { math: "\\mathbit{y}" },
      "\u{1D49B}": { math: "\\mathbit{z}" },
      "\u{1D49C}": { math: "\\mathscr{A}" },
      "\u{1D49E}": { math: "\\mathscr{C}" },
      "\u{1D49F}": { math: "\\mathscr{D}" },
      "\u{1D4A2}": { math: "\\mathscr{G}" },
      "\u{1D4A5}": { math: "\\mathscr{J}" },
      "\u{1D4A6}": { math: "\\mathscr{K}" },
      "\u{1D4A9}": { math: "\\mathscr{N}" },
      "\u{1D4AA}": { math: "\\mathscr{O}" },
      "\u{1D4AB}": { math: "\\mathscr{P}" },
      "\u{1D4AC}": { math: "\\mathscr{Q}" },
      "\u{1D4AE}": { math: "\\mathscr{S}" },
      "\u{1D4AF}": { math: "\\mathscr{T}" },
      "\u{1D4B0}": { math: "\\mathscr{U}" },
      "\u{1D4B1}": { math: "\\mathscr{V}" },
      "\u{1D4B2}": { math: "\\mathscr{W}" },
      "\u{1D4B3}": { math: "\\mathscr{X}" },
      "\u{1D4B4}": { math: "\\mathscr{Y}" },
      "\u{1D4B5}": { math: "\\mathscr{Z}" },
      "\u{1D4B6}": { math: "\\mathscr{a}" },
      "\u{1D4B7}": { math: "\\mathscr{b}" },
      "\u{1D4B8}": { math: "\\mathscr{c}" },
      "\u{1D4B9}": { math: "\\mathscr{d}" },
      "\u{1D4BB}": { math: "\\mathscr{f}" },
      "\u{1D4BD}": { math: "\\mathscr{h}" },
      "\u{1D4BE}": { math: "\\mathscr{i}" },
      "\u{1D4BF}": { math: "\\mathscr{j}" },
      "\u{1D4C0}": { math: "\\mathscr{k}" },
      "\u{1D4C1}": { math: "\\mathscr{l}" },
      "\u{1D4C2}": { math: "\\mathscr{m}" },
      "\u{1D4C3}": { math: "\\mathscr{n}" },
      "\u{1D4C5}": { math: "\\mathscr{p}" },
      "\u{1D4C6}": { math: "\\mathscr{q}" },
      "\u{1D4C7}": { math: "\\mathscr{r}" },
      "\u{1D4C8}": { math: "\\mathscr{s}" },
      "\u{1D4C9}": { math: "\\mathscr{t}" },
      "\u{1D4CA}": { math: "\\mathscr{u}" },
      "\u{1D4CB}": { math: "\\mathscr{v}" },
      "\u{1D4CC}": { math: "\\mathscr{w}" },
      "\u{1D4CD}": { math: "\\mathscr{x}" },
      "\u{1D4CE}": { math: "\\mathscr{y}" },
      "\u{1D4CF}": { math: "\\mathscr{z}" },
      "\u{1D4D0}": { math: "\\mathmit{A}" },
      "\u{1D4D1}": { math: "\\mathmit{B}" },
      "\u{1D4D2}": { math: "\\mathmit{C}" },
      "\u{1D4D3}": { math: "\\mathmit{D}" },
      "\u{1D4D4}": { math: "\\mathmit{E}" },
      "\u{1D4D5}": { math: "\\mathmit{F}" },
      "\u{1D4D6}": { math: "\\mathmit{G}" },
      "\u{1D4D7}": { math: "\\mathmit{H}" },
      "\u{1D4D8}": { math: "\\mathmit{I}" },
      "\u{1D4D9}": { math: "\\mathmit{J}" },
      "\u{1D4DA}": { math: "\\mathmit{K}" },
      "\u{1D4DB}": { math: "\\mathmit{L}" },
      "\u{1D4DC}": { math: "\\mathmit{M}" },
      "\u{1D4DD}": { math: "\\mathmit{N}" },
      "\u{1D4DE}": { math: "\\mathmit{O}" },
      "\u{1D4DF}": { math: "\\mathmit{P}" },
      "\u{1D4E0}": { math: "\\mathmit{Q}" },
      "\u{1D4E1}": { math: "\\mathmit{R}" },
      "\u{1D4E2}": { math: "\\mathmit{S}" },
      "\u{1D4E3}": { math: "\\mathmit{T}" },
      "\u{1D4E4}": { math: "\\mathmit{U}" },
      "\u{1D4E5}": { math: "\\mathmit{V}" },
      "\u{1D4E6}": { math: "\\mathmit{W}" },
      "\u{1D4E7}": { math: "\\mathmit{X}" },
      "\u{1D4E8}": { math: "\\mathmit{Y}" },
      "\u{1D4E9}": { math: "\\mathmit{Z}" },
      "\u{1D4EA}": { math: "\\mathmit{a}" },
      "\u{1D4EB}": { math: "\\mathmit{b}" },
      "\u{1D4EC}": { math: "\\mathmit{c}" },
      "\u{1D4ED}": { math: "\\mathmit{d}" },
      "\u{1D4EE}": { math: "\\mathmit{e}" },
      "\u{1D4EF}": { math: "\\mathmit{f}" },
      "\u{1D4F0}": { math: "\\mathmit{g}" },
      "\u{1D4F1}": { math: "\\mathmit{h}" },
      "\u{1D4F2}": { math: "\\mathmit{i}" },
      "\u{1D4F3}": { math: "\\mathmit{j}" },
      "\u{1D4F4}": { math: "\\mathmit{k}" },
      "\u{1D4F5}": { math: "\\mathmit{l}" },
      "\u{1D4F6}": { math: "\\mathmit{m}" },
      "\u{1D4F7}": { math: "\\mathmit{n}" },
      "\u{1D4F8}": { math: "\\mathmit{o}" },
      "\u{1D4F9}": { math: "\\mathmit{p}" },
      "\u{1D4FA}": { math: "\\mathmit{q}" },
      "\u{1D4FB}": { math: "\\mathmit{r}" },
      "\u{1D4FC}": { math: "\\mathmit{s}" },
      "\u{1D4FD}": { math: "\\mathmit{t}" },
      "\u{1D4FE}": { math: "\\mathmit{u}" },
      "\u{1D4FF}": { math: "\\mathmit{v}" },
      "\u{1D500}": { math: "\\mathmit{w}" },
      "\u{1D501}": { math: "\\mathmit{x}" },
      "\u{1D502}": { math: "\\mathmit{y}" },
      "\u{1D503}": { math: "\\mathmit{z}" },
      "\u{1D504}": { math: "\\mathfrak{A}" },
      "\u{1D505}": { math: "\\mathfrak{B}" },
      "\u{1D507}": { math: "\\mathfrak{D}" },
      "\u{1D508}": { math: "\\mathfrak{E}" },
      "\u{1D509}": { math: "\\mathfrak{F}" },
      "\u{1D50A}": { math: "\\mathfrak{G}" },
      "\u{1D50D}": { math: "\\mathfrak{J}" },
      "\u{1D50E}": { math: "\\mathfrak{K}" },
      "\u{1D50F}": { math: "\\mathfrak{L}" },
      "\u{1D510}": { math: "\\mathfrak{M}" },
      "\u{1D511}": { math: "\\mathfrak{N}" },
      "\u{1D512}": { math: "\\mathfrak{O}" },
      "\u{1D513}": { math: "\\mathfrak{P}" },
      "\u{1D514}": { math: "\\mathfrak{Q}" },
      "\u{1D516}": { math: "\\mathfrak{S}" },
      "\u{1D517}": { math: "\\mathfrak{T}" },
      "\u{1D518}": { math: "\\mathfrak{U}" },
      "\u{1D519}": { math: "\\mathfrak{V}" },
      "\u{1D51A}": { math: "\\mathfrak{W}" },
      "\u{1D51B}": { math: "\\mathfrak{X}" },
      "\u{1D51C}": { math: "\\mathfrak{Y}" },
      "\u{1D51E}": { math: "\\mathfrak{a}" },
      "\u{1D51F}": { math: "\\mathfrak{b}" },
      "\u{1D520}": { math: "\\mathfrak{c}" },
      "\u{1D521}": { math: "\\mathfrak{d}" },
      "\u{1D522}": { math: "\\mathfrak{e}" },
      "\u{1D523}": { math: "\\mathfrak{f}" },
      "\u{1D524}": { math: "\\mathfrak{g}" },
      "\u{1D525}": { math: "\\mathfrak{h}" },
      "\u{1D526}": { math: "\\mathfrak{i}" },
      "\u{1D527}": { math: "\\mathfrak{j}" },
      "\u{1D528}": { math: "\\mathfrak{k}" },
      "\u{1D529}": { math: "\\mathfrak{l}" },
      "\u{1D52A}": { math: "\\mathfrak{m}" },
      "\u{1D52B}": { math: "\\mathfrak{n}" },
      "\u{1D52C}": { math: "\\mathfrak{o}" },
      "\u{1D52D}": { math: "\\mathfrak{p}" },
      "\u{1D52E}": { math: "\\mathfrak{q}" },
      "\u{1D52F}": { math: "\\mathfrak{r}" },
      "\u{1D530}": { math: "\\mathfrak{s}" },
      "\u{1D531}": { math: "\\mathfrak{t}" },
      "\u{1D532}": { math: "\\mathfrak{u}" },
      "\u{1D533}": { math: "\\mathfrak{v}" },
      "\u{1D534}": { math: "\\mathfrak{w}" },
      "\u{1D535}": { math: "\\mathfrak{x}" },
      "\u{1D536}": { math: "\\mathfrak{y}" },
      "\u{1D537}": { math: "\\mathfrak{z}" },
      "\u{1D538}": { math: "\\mathbb{A}" },
      "\u{1D539}": { math: "\\mathbb{B}" },
      "\u{1D53B}": { math: "\\mathbb{D}" },
      "\u{1D53C}": { math: "\\mathbb{E}" },
      "\u{1D53D}": { math: "\\mathbb{F}" },
      "\u{1D53E}": { math: "\\mathbb{G}" },
      "\u{1D540}": { math: "\\mathbb{I}" },
      "\u{1D541}": { math: "\\mathbb{J}" },
      "\u{1D542}": { math: "\\mathbb{K}" },
      "\u{1D543}": { math: "\\mathbb{L}" },
      "\u{1D544}": { math: "\\mathbb{M}" },
      "\u{1D546}": { math: "\\mathbb{O}" },
      "\u{1D54A}": { math: "\\mathbb{S}" },
      "\u{1D54B}": { math: "\\mathbb{T}" },
      "\u{1D54C}": { math: "\\mathbb{U}" },
      "\u{1D54D}": { math: "\\mathbb{V}" },
      "\u{1D54E}": { math: "\\mathbb{W}" },
      "\u{1D54F}": { math: "\\mathbb{X}" },
      "\u{1D550}": { math: "\\mathbb{Y}" },
      "\u{1D552}": { math: "\\mathbb{a}" },
      "\u{1D553}": { math: "\\mathbb{b}" },
      "\u{1D554}": { math: "\\mathbb{c}" },
      "\u{1D555}": { math: "\\mathbb{d}" },
      "\u{1D556}": { math: "\\mathbb{e}" },
      "\u{1D557}": { math: "\\mathbb{f}" },
      "\u{1D558}": { math: "\\mathbb{g}" },
      "\u{1D559}": { math: "\\mathbb{h}" },
      "\u{1D55A}": { math: "\\mathbb{i}" },
      "\u{1D55B}": { math: "\\mathbb{j}" },
      "\u{1D55C}": { math: "\\mathbb{k}" },
      "\u{1D55D}": { math: "\\mathbb{l}" },
      "\u{1D55E}": { math: "\\mathbb{m}" },
      "\u{1D55F}": { math: "\\mathbb{n}" },
      "\u{1D560}": { math: "\\mathbb{o}" },
      "\u{1D561}": { math: "\\mathbb{p}" },
      "\u{1D562}": { math: "\\mathbb{q}" },
      "\u{1D563}": { math: "\\mathbb{r}" },
      "\u{1D564}": { math: "\\mathbb{s}" },
      "\u{1D565}": { math: "\\mathbb{t}" },
      "\u{1D566}": { math: "\\mathbb{u}" },
      "\u{1D567}": { math: "\\mathbb{v}" },
      "\u{1D568}": { math: "\\mathbb{w}" },
      "\u{1D569}": { math: "\\mathbb{x}" },
      "\u{1D56A}": { math: "\\mathbb{y}" },
      "\u{1D56B}": { math: "\\mathbb{z}" },
      "\u{1D56C}": { math: "\\mathslbb{A}" },
      "\u{1D56D}": { math: "\\mathslbb{B}" },
      "\u{1D56E}": { math: "\\mathslbb{C}" },
      "\u{1D56F}": { math: "\\mathslbb{D}" },
      "\u{1D570}": { math: "\\mathslbb{E}" },
      "\u{1D571}": { math: "\\mathslbb{F}" },
      "\u{1D572}": { math: "\\mathslbb{G}" },
      "\u{1D573}": { math: "\\mathslbb{H}" },
      "\u{1D574}": { math: "\\mathslbb{I}" },
      "\u{1D575}": { math: "\\mathslbb{J}" },
      "\u{1D576}": { math: "\\mathslbb{K}" },
      "\u{1D577}": { math: "\\mathslbb{L}" },
      "\u{1D578}": { math: "\\mathslbb{M}" },
      "\u{1D579}": { math: "\\mathslbb{N}" },
      "\u{1D57A}": { math: "\\mathslbb{O}" },
      "\u{1D57B}": { math: "\\mathslbb{P}" },
      "\u{1D57C}": { math: "\\mathslbb{Q}" },
      "\u{1D57D}": { math: "\\mathslbb{R}" },
      "\u{1D57E}": { math: "\\mathslbb{S}" },
      "\u{1D57F}": { math: "\\mathslbb{T}" },
      "\u{1D580}": { math: "\\mathslbb{U}" },
      "\u{1D581}": { math: "\\mathslbb{V}" },
      "\u{1D582}": { math: "\\mathslbb{W}" },
      "\u{1D583}": { math: "\\mathslbb{X}" },
      "\u{1D584}": { math: "\\mathslbb{Y}" },
      "\u{1D585}": { math: "\\mathslbb{Z}" },
      "\u{1D586}": { math: "\\mathslbb{a}" },
      "\u{1D587}": { math: "\\mathslbb{b}" },
      "\u{1D588}": { math: "\\mathslbb{c}" },
      "\u{1D589}": { math: "\\mathslbb{d}" },
      "\u{1D58A}": { math: "\\mathslbb{e}" },
      "\u{1D58B}": { math: "\\mathslbb{f}" },
      "\u{1D58C}": { math: "\\mathslbb{g}" },
      "\u{1D58D}": { math: "\\mathslbb{h}" },
      "\u{1D58E}": { math: "\\mathslbb{i}" },
      "\u{1D58F}": { math: "\\mathslbb{j}" },
      "\u{1D590}": { math: "\\mathslbb{k}" },
      "\u{1D591}": { math: "\\mathslbb{l}" },
      "\u{1D592}": { math: "\\mathslbb{m}" },
      "\u{1D593}": { math: "\\mathslbb{n}" },
      "\u{1D594}": { math: "\\mathslbb{o}" },
      "\u{1D595}": { math: "\\mathslbb{p}" },
      "\u{1D596}": { math: "\\mathslbb{q}" },
      "\u{1D597}": { math: "\\mathslbb{r}" },
      "\u{1D598}": { math: "\\mathslbb{s}" },
      "\u{1D599}": { math: "\\mathslbb{t}" },
      "\u{1D59A}": { math: "\\mathslbb{u}" },
      "\u{1D59B}": { math: "\\mathslbb{v}" },
      "\u{1D59C}": { math: "\\mathslbb{w}" },
      "\u{1D59D}": { math: "\\mathslbb{x}" },
      "\u{1D59E}": { math: "\\mathslbb{y}" },
      "\u{1D59F}": { math: "\\mathslbb{z}" },
      "\u{1D5A0}": { math: "\\mathsf{A}" },
      "\u{1D5A1}": { math: "\\mathsf{B}" },
      "\u{1D5A2}": { math: "\\mathsf{C}" },
      "\u{1D5A3}": { math: "\\mathsf{D}" },
      "\u{1D5A4}": { math: "\\mathsf{E}" },
      "\u{1D5A5}": { math: "\\mathsf{F}" },
      "\u{1D5A6}": { math: "\\mathsf{G}" },
      "\u{1D5A7}": { math: "\\mathsf{H}" },
      "\u{1D5A8}": { math: "\\mathsf{I}" },
      "\u{1D5A9}": { math: "\\mathsf{J}" },
      "\u{1D5AA}": { math: "\\mathsf{K}" },
      "\u{1D5AB}": { math: "\\mathsf{L}" },
      "\u{1D5AC}": { math: "\\mathsf{M}" },
      "\u{1D5AD}": { math: "\\mathsf{N}" },
      "\u{1D5AE}": { math: "\\mathsf{O}" },
      "\u{1D5AF}": { math: "\\mathsf{P}" },
      "\u{1D5B0}": { math: "\\mathsf{Q}" },
      "\u{1D5B1}": { math: "\\mathsf{R}" },
      "\u{1D5B2}": { math: "\\mathsf{S}" },
      "\u{1D5B3}": { math: "\\mathsf{T}" },
      "\u{1D5B4}": { math: "\\mathsf{U}" },
      "\u{1D5B5}": { math: "\\mathsf{V}" },
      "\u{1D5B6}": { math: "\\mathsf{W}" },
      "\u{1D5B7}": { math: "\\mathsf{X}" },
      "\u{1D5B8}": { math: "\\mathsf{Y}" },
      "\u{1D5B9}": { math: "\\mathsf{Z}" },
      "\u{1D5BA}": { math: "\\mathsf{a}" },
      "\u{1D5BB}": { math: "\\mathsf{b}" },
      "\u{1D5BC}": { math: "\\mathsf{c}" },
      "\u{1D5BD}": { math: "\\mathsf{d}" },
      "\u{1D5BE}": { math: "\\mathsf{e}" },
      "\u{1D5BF}": { math: "\\mathsf{f}" },
      "\u{1D5C0}": { math: "\\mathsf{g}" },
      "\u{1D5C1}": { math: "\\mathsf{h}" },
      "\u{1D5C2}": { math: "\\mathsf{i}" },
      "\u{1D5C3}": { math: "\\mathsf{j}" },
      "\u{1D5C4}": { math: "\\mathsf{k}" },
      "\u{1D5C5}": { math: "\\mathsf{l}" },
      "\u{1D5C6}": { math: "\\mathsf{m}" },
      "\u{1D5C7}": { math: "\\mathsf{n}" },
      "\u{1D5C8}": { math: "\\mathsf{o}" },
      "\u{1D5C9}": { math: "\\mathsf{p}" },
      "\u{1D5CA}": { math: "\\mathsf{q}" },
      "\u{1D5CB}": { math: "\\mathsf{r}" },
      "\u{1D5CC}": { math: "\\mathsf{s}" },
      "\u{1D5CD}": { math: "\\mathsf{t}" },
      "\u{1D5CE}": { math: "\\mathsf{u}" },
      "\u{1D5CF}": { math: "\\mathsf{v}" },
      "\u{1D5D0}": { math: "\\mathsf{w}" },
      "\u{1D5D1}": { math: "\\mathsf{x}" },
      "\u{1D5D2}": { math: "\\mathsf{y}" },
      "\u{1D5D3}": { math: "\\mathsf{z}" },
      "\u{1D5D4}": { math: "\\mathsfbf{A}" },
      "\u{1D5D5}": { math: "\\mathsfbf{B}" },
      "\u{1D5D6}": { math: "\\mathsfbf{C}" },
      "\u{1D5D7}": { math: "\\mathsfbf{D}" },
      "\u{1D5D8}": { math: "\\mathsfbf{E}" },
      "\u{1D5D9}": { math: "\\mathsfbf{F}" },
      "\u{1D5DA}": { math: "\\mathsfbf{G}" },
      "\u{1D5DB}": { math: "\\mathsfbf{H}" },
      "\u{1D5DC}": { math: "\\mathsfbf{I}" },
      "\u{1D5DD}": { math: "\\mathsfbf{J}" },
      "\u{1D5DE}": { math: "\\mathsfbf{K}" },
      "\u{1D5DF}": { math: "\\mathsfbf{L}" },
      "\u{1D5E0}": { math: "\\mathsfbf{M}" },
      "\u{1D5E1}": { math: "\\mathsfbf{N}" },
      "\u{1D5E2}": { math: "\\mathsfbf{O}" },
      "\u{1D5E3}": { math: "\\mathsfbf{P}" },
      "\u{1D5E4}": { math: "\\mathsfbf{Q}" },
      "\u{1D5E5}": { math: "\\mathsfbf{R}" },
      "\u{1D5E6}": { math: "\\mathsfbf{S}" },
      "\u{1D5E7}": { math: "\\mathsfbf{T}" },
      "\u{1D5E8}": { math: "\\mathsfbf{U}" },
      "\u{1D5E9}": { math: "\\mathsfbf{V}" },
      "\u{1D5EA}": { math: "\\mathsfbf{W}" },
      "\u{1D5EB}": { math: "\\mathsfbf{X}" },
      "\u{1D5EC}": { math: "\\mathsfbf{Y}" },
      "\u{1D5ED}": { math: "\\mathsfbf{Z}" },
      "\u{1D5EE}": { math: "\\mathsfbf{a}" },
      "\u{1D5EF}": { math: "\\mathsfbf{b}" },
      "\u{1D5F0}": { math: "\\mathsfbf{c}" },
      "\u{1D5F1}": { math: "\\mathsfbf{d}" },
      "\u{1D5F2}": { math: "\\mathsfbf{e}" },
      "\u{1D5F3}": { math: "\\mathsfbf{f}" },
      "\u{1D5F4}": { math: "\\mathsfbf{g}" },
      "\u{1D5F5}": { math: "\\mathsfbf{h}" },
      "\u{1D5F6}": { math: "\\mathsfbf{i}" },
      "\u{1D5F7}": { math: "\\mathsfbf{j}" },
      "\u{1D5F8}": { math: "\\mathsfbf{k}" },
      "\u{1D5F9}": { math: "\\mathsfbf{l}" },
      "\u{1D5FA}": { math: "\\mathsfbf{m}" },
      "\u{1D5FB}": { math: "\\mathsfbf{n}" },
      "\u{1D5FC}": { math: "\\mathsfbf{o}" },
      "\u{1D5FD}": { math: "\\mathsfbf{p}" },
      "\u{1D5FE}": { math: "\\mathsfbf{q}" },
      "\u{1D5FF}": { math: "\\mathsfbf{r}" },
      "\u{1D600}": { math: "\\mathsfbf{s}" },
      "\u{1D601}": { math: "\\mathsfbf{t}" },
      "\u{1D602}": { math: "\\mathsfbf{u}" },
      "\u{1D603}": { math: "\\mathsfbf{v}" },
      "\u{1D604}": { math: "\\mathsfbf{w}" },
      "\u{1D605}": { math: "\\mathsfbf{x}" },
      "\u{1D606}": { math: "\\mathsfbf{y}" },
      "\u{1D607}": { math: "\\mathsfbf{z}" },
      "\u{1D608}": { math: "\\mathsfsl{A}" },
      "\u{1D609}": { math: "\\mathsfsl{B}" },
      "\u{1D60A}": { math: "\\mathsfsl{C}" },
      "\u{1D60B}": { math: "\\mathsfsl{D}" },
      "\u{1D60C}": { math: "\\mathsfsl{E}" },
      "\u{1D60D}": { math: "\\mathsfsl{F}" },
      "\u{1D60E}": { math: "\\mathsfsl{G}" },
      "\u{1D60F}": { math: "\\mathsfsl{H}" },
      "\u{1D610}": { math: "\\mathsfsl{I}" },
      "\u{1D611}": { math: "\\mathsfsl{J}" },
      "\u{1D612}": { math: "\\mathsfsl{K}" },
      "\u{1D613}": { math: "\\mathsfsl{L}" },
      "\u{1D614}": { math: "\\mathsfsl{M}" },
      "\u{1D615}": { math: "\\mathsfsl{N}" },
      "\u{1D616}": { math: "\\mathsfsl{O}" },
      "\u{1D617}": { math: "\\mathsfsl{P}" },
      "\u{1D618}": { math: "\\mathsfsl{Q}" },
      "\u{1D619}": { math: "\\mathsfsl{R}" },
      "\u{1D61A}": { math: "\\mathsfsl{S}" },
      "\u{1D61B}": { math: "\\mathsfsl{T}" },
      "\u{1D61C}": { math: "\\mathsfsl{U}" },
      "\u{1D61D}": { math: "\\mathsfsl{V}" },
      "\u{1D61E}": { math: "\\mathsfsl{W}" },
      "\u{1D61F}": { math: "\\mathsfsl{X}" },
      "\u{1D620}": { math: "\\mathsfsl{Y}" },
      "\u{1D621}": { math: "\\mathsfsl{Z}" },
      "\u{1D622}": { math: "\\mathsfsl{a}" },
      "\u{1D623}": { math: "\\mathsfsl{b}" },
      "\u{1D624}": { math: "\\mathsfsl{c}" },
      "\u{1D625}": { math: "\\mathsfsl{d}" },
      "\u{1D626}": { math: "\\mathsfsl{e}" },
      "\u{1D627}": { math: "\\mathsfsl{f}" },
      "\u{1D628}": { math: "\\mathsfsl{g}" },
      "\u{1D629}": { math: "\\mathsfsl{h}" },
      "\u{1D62A}": { math: "\\mathsfsl{i}" },
      "\u{1D62B}": { math: "\\mathsfsl{j}" },
      "\u{1D62C}": { math: "\\mathsfsl{k}" },
      "\u{1D62D}": { math: "\\mathsfsl{l}" },
      "\u{1D62E}": { math: "\\mathsfsl{m}" },
      "\u{1D62F}": { math: "\\mathsfsl{n}" },
      "\u{1D630}": { math: "\\mathsfsl{o}" },
      "\u{1D631}": { math: "\\mathsfsl{p}" },
      "\u{1D632}": { math: "\\mathsfsl{q}" },
      "\u{1D633}": { math: "\\mathsfsl{r}" },
      "\u{1D634}": { math: "\\mathsfsl{s}" },
      "\u{1D635}": { math: "\\mathsfsl{t}" },
      "\u{1D636}": { math: "\\mathsfsl{u}" },
      "\u{1D637}": { math: "\\mathsfsl{v}" },
      "\u{1D638}": { math: "\\mathsfsl{w}" },
      "\u{1D639}": { math: "\\mathsfsl{x}" },
      "\u{1D63A}": { math: "\\mathsfsl{y}" },
      "\u{1D63B}": { math: "\\mathsfsl{z}" },
      "\u{1D63C}": { math: "\\mathsfbfsl{A}" },
      "\u{1D63D}": { math: "\\mathsfbfsl{B}" },
      "\u{1D63E}": { math: "\\mathsfbfsl{C}" },
      "\u{1D63F}": { math: "\\mathsfbfsl{D}" },
      "\u{1D640}": { math: "\\mathsfbfsl{E}" },
      "\u{1D641}": { math: "\\mathsfbfsl{F}" },
      "\u{1D642}": { math: "\\mathsfbfsl{G}" },
      "\u{1D643}": { math: "\\mathsfbfsl{H}" },
      "\u{1D644}": { math: "\\mathsfbfsl{I}" },
      "\u{1D645}": { math: "\\mathsfbfsl{J}" },
      "\u{1D646}": { math: "\\mathsfbfsl{K}" },
      "\u{1D647}": { math: "\\mathsfbfsl{L}" },
      "\u{1D648}": { math: "\\mathsfbfsl{M}" },
      "\u{1D649}": { math: "\\mathsfbfsl{N}" },
      "\u{1D64A}": { math: "\\mathsfbfsl{O}" },
      "\u{1D64B}": { math: "\\mathsfbfsl{P}" },
      "\u{1D64C}": { math: "\\mathsfbfsl{Q}" },
      "\u{1D64D}": { math: "\\mathsfbfsl{R}" },
      "\u{1D64E}": { math: "\\mathsfbfsl{S}" },
      "\u{1D64F}": { math: "\\mathsfbfsl{T}" },
      "\u{1D650}": { math: "\\mathsfbfsl{U}" },
      "\u{1D651}": { math: "\\mathsfbfsl{V}" },
      "\u{1D652}": { math: "\\mathsfbfsl{W}" },
      "\u{1D653}": { math: "\\mathsfbfsl{X}" },
      "\u{1D654}": { math: "\\mathsfbfsl{Y}" },
      "\u{1D655}": { math: "\\mathsfbfsl{Z}" },
      "\u{1D656}": { math: "\\mathsfbfsl{a}" },
      "\u{1D657}": { math: "\\mathsfbfsl{b}" },
      "\u{1D658}": { math: "\\mathsfbfsl{c}" },
      "\u{1D659}": { math: "\\mathsfbfsl{d}" },
      "\u{1D65A}": { math: "\\mathsfbfsl{e}" },
      "\u{1D65B}": { math: "\\mathsfbfsl{f}" },
      "\u{1D65C}": { math: "\\mathsfbfsl{g}" },
      "\u{1D65D}": { math: "\\mathsfbfsl{h}" },
      "\u{1D65E}": { math: "\\mathsfbfsl{i}" },
      "\u{1D65F}": { math: "\\mathsfbfsl{j}" },
      "\u{1D660}": { math: "\\mathsfbfsl{k}" },
      "\u{1D661}": { math: "\\mathsfbfsl{l}" },
      "\u{1D662}": { math: "\\mathsfbfsl{m}" },
      "\u{1D663}": { math: "\\mathsfbfsl{n}" },
      "\u{1D664}": { math: "\\mathsfbfsl{o}" },
      "\u{1D665}": { math: "\\mathsfbfsl{p}" },
      "\u{1D666}": { math: "\\mathsfbfsl{q}" },
      "\u{1D667}": { math: "\\mathsfbfsl{r}" },
      "\u{1D668}": { math: "\\mathsfbfsl{s}" },
      "\u{1D669}": { math: "\\mathsfbfsl{t}" },
      "\u{1D66A}": { math: "\\mathsfbfsl{u}" },
      "\u{1D66B}": { math: "\\mathsfbfsl{v}" },
      "\u{1D66C}": { math: "\\mathsfbfsl{w}" },
      "\u{1D66D}": { math: "\\mathsfbfsl{x}" },
      "\u{1D66E}": { math: "\\mathsfbfsl{y}" },
      "\u{1D66F}": { math: "\\mathsfbfsl{z}" },
      "\u{1D670}": { math: "\\mathtt{A}" },
      "\u{1D671}": { math: "\\mathtt{B}" },
      "\u{1D672}": { math: "\\mathtt{C}" },
      "\u{1D673}": { math: "\\mathtt{D}" },
      "\u{1D674}": { math: "\\mathtt{E}" },
      "\u{1D675}": { math: "\\mathtt{F}" },
      "\u{1D676}": { math: "\\mathtt{G}" },
      "\u{1D677}": { math: "\\mathtt{H}" },
      "\u{1D678}": { math: "\\mathtt{I}" },
      "\u{1D679}": { math: "\\mathtt{J}" },
      "\u{1D67A}": { math: "\\mathtt{K}" },
      "\u{1D67B}": { math: "\\mathtt{L}" },
      "\u{1D67C}": { math: "\\mathtt{M}" },
      "\u{1D67D}": { math: "\\mathtt{N}" },
      "\u{1D67E}": { math: "\\mathtt{O}" },
      "\u{1D67F}": { math: "\\mathtt{P}" },
      "\u{1D680}": { math: "\\mathtt{Q}" },
      "\u{1D681}": { math: "\\mathtt{R}" },
      "\u{1D682}": { math: "\\mathtt{S}" },
      "\u{1D683}": { math: "\\mathtt{T}" },
      "\u{1D684}": { math: "\\mathtt{U}" },
      "\u{1D685}": { math: "\\mathtt{V}" },
      "\u{1D686}": { math: "\\mathtt{W}" },
      "\u{1D687}": { math: "\\mathtt{X}" },
      "\u{1D688}": { math: "\\mathtt{Y}" },
      "\u{1D689}": { math: "\\mathtt{Z}" },
      "\u{1D68A}": { math: "\\mathtt{a}" },
      "\u{1D68B}": { math: "\\mathtt{b}" },
      "\u{1D68C}": { math: "\\mathtt{c}" },
      "\u{1D68D}": { math: "\\mathtt{d}" },
      "\u{1D68E}": { math: "\\mathtt{e}" },
      "\u{1D68F}": { math: "\\mathtt{f}" },
      "\u{1D690}": { math: "\\mathtt{g}" },
      "\u{1D691}": { math: "\\mathtt{h}" },
      "\u{1D692}": { math: "\\mathtt{i}" },
      "\u{1D693}": { math: "\\mathtt{j}" },
      "\u{1D694}": { math: "\\mathtt{k}" },
      "\u{1D695}": { math: "\\mathtt{l}" },
      "\u{1D696}": { math: "\\mathtt{m}" },
      "\u{1D697}": { math: "\\mathtt{n}" },
      "\u{1D698}": { math: "\\mathtt{o}" },
      "\u{1D699}": { math: "\\mathtt{p}" },
      "\u{1D69A}": { math: "\\mathtt{q}" },
      "\u{1D69B}": { math: "\\mathtt{r}" },
      "\u{1D69C}": { math: "\\mathtt{s}" },
      "\u{1D69D}": { math: "\\mathtt{t}" },
      "\u{1D69E}": { math: "\\mathtt{u}" },
      "\u{1D69F}": { math: "\\mathtt{v}" },
      "\u{1D6A0}": { math: "\\mathtt{w}" },
      "\u{1D6A1}": { math: "\\mathtt{x}" },
      "\u{1D6A2}": { math: "\\mathtt{y}" },
      "\u{1D6A3}": { math: "\\mathtt{z}" },
      "\u{1D6A4}": { math: "\\imath" },
      "\u{1D6A5}": { math: "\\jmath" },
      "\u{1D6A8}": { math: "\\mathbf{A}" },
      "\u{1D6A9}": { math: "\\mathbf{B}" },
      "\u{1D6AA}": { math: "\\mathbf{\\Gamma}" },
      "\u{1D6AB}": { math: "\\mathbf{\\Delta}" },
      "\u{1D6AC}": { math: "\\mathbf{E}" },
      "\u{1D6AD}": { math: "\\mathbf{Z}" },
      "\u{1D6AE}": { math: "\\mathbf{H}" },
      "\u{1D6AF}": { math: "\\mathbf{\\Theta}" },
      "\u{1D6B0}": { math: "\\mathbf{I}" },
      "\u{1D6B1}": { math: "\\mathbf{K}" },
      "\u{1D6B2}": { math: "\\mathbf{\\Lambda}" },
      "\u{1D6B3}": { math: "M" },
      "\u{1D6B4}": { math: "N" },
      "\u{1D6B5}": { math: "\\mathbf{\\Xi}" },
      "\u{1D6B6}": { math: "O" },
      "\u{1D6B7}": { math: "\\mathbf{\\Pi}" },
      "\u{1D6B8}": { math: "\\mathbf{P}" },
      "\u{1D6B9}": { math: "\\mathbf{\\vartheta}" },
      "\u{1D6BA}": { math: "\\mathbf{\\Sigma}" },
      "\u{1D6BB}": { math: "\\mathbf{T}" },
      "\u{1D6BC}": { math: "\\mathbf{\\Upsilon}" },
      "\u{1D6BD}": { math: "\\mathbf{\\Phi}" },
      "\u{1D6BE}": { math: "\\mathbf{X}" },
      "\u{1D6BF}": { math: "\\mathbf{\\Psi}" },
      "\u{1D6C0}": { math: "\\mathbf{\\Omega}" },
      "\u{1D6C1}": { math: "\\mathbf{\\nabla}" },
      "\u{1D6C2}": { math: "\\mathbf{\\alpha}" },
      "\u{1D6C3}": { math: "\\mathbf{\\beta}" },
      "\u{1D6C4}": { math: "\\mathbf{\\gamma}" },
      "\u{1D6C5}": { math: "\\mathbf{\\delta}" },
      "\u{1D6C6}": { math: "\\mathbf{\\epsilon}" },
      "\u{1D6C7}": { math: "\\mathbf{\\zeta}" },
      "\u{1D6C8}": { math: "\\mathbf{\\eta}" },
      "\u{1D6C9}": { math: "\\mathbf{\\theta}" },
      "\u{1D6CA}": { math: "\\mathbf{I}" },
      "\u{1D6CB}": { math: "\\mathbf{K}" },
      "\u{1D6CC}": { math: "\\mathbf{\\lambda}" },
      "\u{1D6CD}": { math: "M" },
      "\u{1D6CE}": { math: "N" },
      "\u{1D6CF}": { math: "\\mathbf{\\xi}" },
      "\u{1D6D0}": { math: "O" },
      "\u{1D6D1}": { math: "\\mathbf{\\pi}" },
      "\u{1D6D2}": { math: "\\mathbf{P}" },
      "\u{1D6D3}": { math: "\\mathbf{\\varsigma}" },
      "\u{1D6D4}": { math: "\\mathbf{\\sigma}" },
      "\u{1D6D5}": { math: "\\mathbf{T}" },
      "\u{1D6D6}": { math: "\\mathbf{\\upsilon}" },
      "\u{1D6D7}": { math: "\\mathbf{\\phi}" },
      "\u{1D6D8}": { math: "\\mathbf{X}" },
      "\u{1D6D9}": { math: "\\mathbf{\\psi}" },
      "\u{1D6DA}": { math: "\\mathbf{\\omega}" },
      "\u{1D6DB}": { math: "\\partial" },
      "\u{1D6DC}": { math: "\\in" },
      "\u{1D6DD}": { math: "\\mathbf{\\vartheta}" },
      "\u{1D6DE}": { math: "\\mathbf{\\varkappa}" },
      "\u{1D6DF}": { math: "\\mathbf{\\phi}" },
      "\u{1D6E0}": { math: "\\mathbf{\\varrho}" },
      "\u{1D6E1}": { math: "\\mathbf{\\varpi}" },
      "\u{1D6E2}": { math: "\\mathsl{A}" },
      "\u{1D6E3}": { math: "\\mathsl{B}" },
      "\u{1D6E4}": { math: "\\mathsl{\\Gamma}" },
      "\u{1D6E5}": { math: "\\mathsl{\\Delta}" },
      "\u{1D6E6}": { math: "\\mathsl{E}" },
      "\u{1D6E7}": { math: "\\mathsl{Z}" },
      "\u{1D6E8}": { math: "\\mathsl{H}" },
      "\u{1D6E9}": { math: "\\mathsl{\\Theta}" },
      "\u{1D6EA}": { math: "\\mathsl{I}" },
      "\u{1D6EB}": { math: "\\mathsl{K}" },
      "\u{1D6EC}": { math: "\\mathsl{\\Lambda}" },
      "\u{1D6ED}": { math: "M" },
      "\u{1D6EE}": { math: "N" },
      "\u{1D6EF}": { math: "\\mathsl{\\Xi}" },
      "\u{1D6F0}": { math: "O" },
      "\u{1D6F1}": { math: "\\mathsl{\\Pi}" },
      "\u{1D6F2}": { math: "\\mathsl{P}" },
      "\u{1D6F3}": { math: "\\mathsl{\\Theta}" },
      "\u{1D6F4}": { math: "\\mathsl{\\Sigma}" },
      "\u{1D6F5}": { math: "\\mathsl{T}" },
      "\u{1D6F6}": { math: "\\mathsl{\\Upsilon}" },
      "\u{1D6F7}": { math: "\\mathsl{\\Phi}" },
      "\u{1D6F8}": { math: "\\mathsl{X}" },
      "\u{1D6F9}": { math: "\\mathsl{\\Psi}" },
      "\u{1D6FA}": { math: "\\mathsl{\\Omega}" },
      "\u{1D6FB}": { math: "\\mathsl{\\nabla}" },
      "\u{1D6FC}": { math: "\\mathsl{A}" },
      "\u{1D6FD}": { math: "\\mathsl{B}" },
      "\u{1D6FE}": { math: "\\mathsl{\\gamma}" },
      "\u{1D6FF}": { math: "\\mathsl{\\delta}" },
      "\u{1D700}": { math: "\\mathsl{E}" },
      "\u{1D701}": { math: "\\mathsl{Z}" },
      "\u{1D702}": { math: "\\mathsl{H}" },
      "\u{1D703}": { math: "\\mathsl{\\theta}" },
      "\u{1D704}": { math: "\\mathsl{I}" },
      "\u{1D705}": { math: "\\mathsl{K}" },
      "\u{1D706}": { math: "\\mathsl{\\lambda}" },
      "\u{1D707}": { math: "\\mu" },
      "\u{1D708}": { math: "\\nu" },
      "\u{1D709}": { math: "\\mathsl{\\xi}" },
      "\u{1D70A}": { math: "o" },
      "\u{1D70B}": { math: "\\mathsl{\\pi}" },
      "\u{1D70C}": { math: "\\mathsl{P}" },
      "\u{1D70D}": { math: "\\mathsl{\\varsigma}" },
      "\u{1D70E}": { math: "\\mathsl{\\sigma}" },
      "\u{1D70F}": { math: "\\mathsl{T}" },
      "\u{1D710}": { math: "\\mathsl{\\upsilon}" },
      "\u{1D711}": { math: "\\mathsl{\\varphi}" },
      "\u{1D712}": { math: "\\mathsl{X}" },
      "\u{1D713}": { math: "\\mathsl{\\psi}" },
      "\u{1D714}": { math: "\\mathsl{\\omega}" },
      "\u{1D715}": { math: "\\partial" },
      "\u{1D716}": { math: "\\in" },
      "\u{1D717}": { math: "\\mathsl{\\vartheta}" },
      "\u{1D718}": { math: "\\mathsl{\\varkappa}" },
      "\u{1D719}": { math: "\\mathsl{\\phi}" },
      "\u{1D71A}": { math: "\\mathsl{\\varrho}" },
      "\u{1D71B}": { math: "\\mathsl{\\varpi}" },
      "\u{1D71C}": { math: "\\mathbit{A}" },
      "\u{1D71D}": { math: "\\mathbit{B}" },
      "\u{1D71E}": { math: "\\mathbit{\\Gamma}" },
      "\u{1D71F}": { math: "\\mathbit{\\Delta}" },
      "\u{1D720}": { math: "\\mathbit{E}" },
      "\u{1D721}": { math: "\\mathbit{Z}" },
      "\u{1D722}": { math: "\\mathbit{H}" },
      "\u{1D723}": { math: "\\mathbit{\\Theta}" },
      "\u{1D724}": { math: "\\mathbit{I}" },
      "\u{1D725}": { math: "\\mathbit{K}" },
      "\u{1D726}": { math: "\\mathbit{\\Lambda}" },
      "\u{1D727}": { math: "M" },
      "\u{1D728}": { math: "N" },
      "\u{1D729}": { math: "\\mathbit{\\Xi}" },
      "\u{1D72A}": { math: "O" },
      "\u{1D72B}": { math: "\\mathbit{\\Pi}" },
      "\u{1D72C}": { math: "\\mathbit{P}" },
      "\u{1D72D}": { math: "\\mathbit{O}" },
      "\u{1D72E}": { math: "\\mathbit{\\Sigma}" },
      "\u{1D72F}": { math: "\\mathbit{T}" },
      "\u{1D730}": { math: "\\mathbit{\\Upsilon}" },
      "\u{1D731}": { math: "\\mathbit{\\Phi}" },
      "\u{1D732}": { math: "\\mathbit{X}" },
      "\u{1D733}": { math: "\\mathbit{\\Psi}" },
      "\u{1D734}": { math: "\\mathbit{\\Omega}" },
      "\u{1D735}": { math: "\\mathbit{\\nabla}" },
      "\u{1D736}": { math: "\\mathbit{\\alpha}" },
      "\u{1D737}": { math: "\\mathbit{\\beta}" },
      "\u{1D738}": { math: "\\mathbit{\\gamma}" },
      "\u{1D739}": { math: "\\mathbit{\\delta}" },
      "\u{1D73A}": { math: "\\mathbit{\\epsilon}" },
      "\u{1D73B}": { math: "\\mathbit{\\zeta}" },
      "\u{1D73C}": { math: "\\mathbit{\\eta}" },
      "\u{1D73D}": { math: "\\mathbit{\\theta}" },
      "\u{1D73E}": { math: "\\mathbit{\\imath}" },
      "\u{1D73F}": { math: "\\mathbit{\\kappa}" },
      "\u{1D740}": { math: "\\mathbit{\\lambda}" },
      "\u{1D741}": { math: "\\mu" },
      "\u{1D742}": { math: "N" },
      "\u{1D743}": { math: "\\mathbit{\\xi}" },
      "\u{1D744}": { math: "O" },
      "\u{1D745}": { math: "\\mathbit{\\pi}" },
      "\u{1D746}": { math: "\\mathbit{\\rho}" },
      "\u{1D747}": { math: "\\mathbit{\\varsigma}" },
      "\u{1D748}": { math: "\\mathbit{\\sigma}" },
      "\u{1D749}": { math: "\\mathbit{\\tau}" },
      "\u{1D74A}": { math: "\\mathbit{\\upsilon}" },
      "\u{1D74B}": { math: "\\mathbit{\\varphi}" },
      "\u{1D74C}": { math: "\\mathbit{\\chi}" },
      "\u{1D74D}": { math: "\\mathbit{\\psi}" },
      "\u{1D74E}": { math: "\\mathbit{\\omega}" },
      "\u{1D74F}": { math: "\\partial" },
      "\u{1D750}": { math: "\\in" },
      "\u{1D751}": { math: "\\mathbit{\\vartheta}" },
      "\u{1D752}": { math: "\\mathbit{\\varkappa}" },
      "\u{1D753}": { math: "\\mathbit{\\phi}" },
      "\u{1D754}": { math: "\\mathbit{\\varrho}" },
      "\u{1D755}": { math: "\\mathbit{\\varpi}" },
      "\u{1D756}": { math: "\\mathsfbf{A}" },
      "\u{1D757}": { math: "\\mathsfbf{B}" },
      "\u{1D758}": { math: "\\mathsfbf{\\Gamma}" },
      "\u{1D759}": { math: "\\mathsfbf{\\Delta}" },
      "\u{1D75A}": { math: "\\mathsfbf{E}" },
      "\u{1D75B}": { math: "\\mathsfbf{Z}" },
      "\u{1D75C}": { math: "\\mathsfbf{H}" },
      "\u{1D75D}": { math: "\\mathsfbf{\\Theta}" },
      "\u{1D75E}": { math: "\\mathsfbf{I}" },
      "\u{1D75F}": { math: "\\mathsfbf{K}" },
      "\u{1D760}": { math: "\\mathsfbf{\\Lambda}" },
      "\u{1D761}": { math: "M" },
      "\u{1D762}": { math: "N" },
      "\u{1D763}": { math: "\\mathsfbf{\\Xi}" },
      "\u{1D764}": { math: "O" },
      "\u{1D765}": { math: "\\mathsfbf{\\Pi}" },
      "\u{1D766}": { math: "\\mathsfbf{P}" },
      "\u{1D767}": { math: "\\mathsfbf{\\Theta}" },
      "\u{1D768}": { math: "\\mathsfbf{\\Sigma}" },
      "\u{1D769}": { math: "\\mathsfbf{T}" },
      "\u{1D76A}": { math: "\\mathsfbf{\\Upsilon}" },
      "\u{1D76B}": { math: "\\mathsfbf{\\Phi}" },
      "\u{1D76C}": { math: "\\mathsfbf{X}" },
      "\u{1D76D}": { math: "\\mathsfbf{\\Psi}" },
      "\u{1D76E}": { math: "\\mathsfbf{\\Omega}" },
      "\u{1D76F}": { math: "\\mathsfbf{\\nabla}" },
      "\u{1D770}": { math: "\\mathsfbf{\\alpha}" },
      "\u{1D771}": { math: "\\mathsfbf{\\beta}" },
      "\u{1D772}": { math: "\\mathsfbf{\\gamma}" },
      "\u{1D773}": { math: "\\mathsfbf{\\delta}" },
      "\u{1D774}": { math: "\\mathsfbf{\\varepsilon}" },
      "\u{1D775}": { math: "\\mathsfbf{\\zeta}" },
      "\u{1D776}": { math: "\\mathsfbf{\\eta}" },
      "\u{1D777}": { math: "\\mathsfbf{\\theta}" },
      "\u{1D778}": { math: "\\mathsfbf{\\imath}" },
      "\u{1D779}": { math: "\\mathsfbf{\\kappa}" },
      "\u{1D77A}": { math: "\\mathsfbf{\\lambda}" },
      "\u{1D77B}": { math: "\\mu" },
      "\u{1D77C}": { math: "\\nu" },
      "\u{1D77D}": { math: "\\mathsfbf{\\xi}" },
      "\u{1D77E}": { math: "o" },
      "\u{1D77F}": { math: "\\mathsfbf{\\pi}" },
      "\u{1D780}": { math: "\\mathsfbf{\\rho}" },
      "\u{1D781}": { math: "\\mathsfbf{\\varsigma}" },
      "\u{1D782}": { math: "\\mathsfbf{\\sigma}" },
      "\u{1D783}": { math: "\\mathsfbf{\\tau}" },
      "\u{1D784}": { math: "\\mathsfbf{\\upsilon}" },
      "\u{1D785}": { math: "\\mathsfbf{\\varphi}" },
      "\u{1D786}": { math: "\\mathsfbf{\\chi}" },
      "\u{1D787}": { math: "\\mathsfbf{\\psi}" },
      "\u{1D788}": { math: "\\mathsfbf{\\omega}" },
      "\u{1D789}": { math: "\\partial" },
      "\u{1D78A}": { math: "\\in" },
      "\u{1D78B}": { math: "\\mathsfbf{\\vartheta}" },
      "\u{1D78C}": { math: "\\mathsfbf{\\varkappa}" },
      "\u{1D78D}": { math: "\\mathsfbf{\\phi}" },
      "\u{1D78E}": { math: "\\mathsfbf{\\varrho}" },
      "\u{1D78F}": { math: "\\mathsfbf{\\varpi}" },
      "\u{1D790}": { math: "\\mathsfbfsl{A}" },
      "\u{1D791}": { math: "\\mathsfbfsl{B}" },
      "\u{1D792}": { math: "\\mathsfbfsl{\\Gamma}" },
      "\u{1D793}": { math: "\\mathsfbfsl{\\Delta}" },
      "\u{1D794}": { math: "\\mathsfbfsl{E}" },
      "\u{1D795}": { math: "\\mathsfbfsl{Z}" },
      "\u{1D796}": { math: "\\mathsfbfsl{H}" },
      "\u{1D797}": { math: "\\mathsfbfsl{\\Theta}" },
      "\u{1D798}": { math: "\\mathsfbfsl{I}" },
      "\u{1D799}": { math: "\\mathsfbfsl{K}" },
      "\u{1D79A}": { math: "\\mathsfbfsl{\\Lambda}" },
      "\u{1D79B}": { math: "\\mathsfbfsl{M}" },
      "\u{1D79C}": { math: "\\mathsfbfsl{N}" },
      "\u{1D79D}": { math: "\\mathsfbfsl{\\Xi}" },
      "\u{1D79E}": { math: "\\mathsfbfsl{O}" },
      "\u{1D79F}": { math: "\\mathsfbfsl{\\Pi}" },
      "\u{1D7A0}": { math: "\\mathsfbfsl{P}" },
      "\u{1D7A1}": { math: "\\mathsfbfsl{\\Theta}" },
      "\u{1D7A2}": { math: "\\mathsfbfsl{\\Sigma}" },
      "\u{1D7A3}": { math: "\\mathsfbfsl{T}" },
      "\u{1D7A4}": { math: "\\mathsfbfsl{\\Upsilon}" },
      "\u{1D7A5}": { math: "\\mathsfbfsl{\\Phi}" },
      "\u{1D7A6}": { math: "\\mathsfbfsl{X}" },
      "\u{1D7A7}": { math: "\\mathsfbfsl{\\Psi}" },
      "\u{1D7A8}": { math: "\\mathsfbfsl{\\Omega}" },
      "\u{1D7A9}": { math: "\\mathsfbfsl{\\nabla}" },
      "\u{1D7AA}": { math: "\\mathsfbfsl{\\alpha}" },
      "\u{1D7AB}": { math: "\\mathsfbfsl{\\beta}" },
      "\u{1D7AC}": { math: "\\mathsfbfsl{\\gamma}" },
      "\u{1D7AD}": { math: "\\mathsfbfsl{\\delta}" },
      "\u{1D7AE}": { math: "\\mathsfbfsl{\\varepsilon}" },
      "\u{1D7AF}": { math: "\\mathsfbfsl{\\zeta}" },
      "\u{1D7B0}": { math: "\\mathsfbfsl{\\eta}" },
      "\u{1D7B1}": { math: "\\mathsfbfsl{\\theta}" },
      "\u{1D7B2}": { math: "\\mathsfbfsl{\\imath}" },
      "\u{1D7B3}": { math: "\\mathsfbfsl{\\kappa}" },
      "\u{1D7B4}": { math: "\\mathsfbfsl{\\lambda}" },
      "\u{1D7B5}": { math: "\\mu" },
      "\u{1D7B6}": { math: "\\nu" },
      "\u{1D7B7}": { math: "\\mathsfbfsl{\\xi}" },
      "\u{1D7B8}": { math: "o" },
      "\u{1D7B9}": { math: "\\mathsfbfsl{\\pi}" },
      "\u{1D7BA}": { math: "\\mathsfbfsl{\\rho}" },
      "\u{1D7BB}": { math: "\\mathsfbfsl{\\varsigma}" },
      "\u{1D7BC}": { math: "\\mathsfbfsl{\\sigma}" },
      "\u{1D7BD}": { math: "\\mathsfbfsl{\\tau}" },
      "\u{1D7BE}": { math: "\\mathsfbfsl{\\upsilon}" },
      "\u{1D7BF}": { math: "\\mathsfbfsl{\\varphi}" },
      "\u{1D7C0}": { math: "\\mathsfbfsl{\\chi}" },
      "\u{1D7C1}": { math: "\\mathsfbfsl{\\psi}" },
      "\u{1D7C2}": { math: "\\mathsfbfsl{\\omega}" },
      "\u{1D7C3}": { math: "\\partial" },
      "\u{1D7C4}": { math: "\\in" },
      "\u{1D7C5}": { math: "\\mathsfbfsl{\\vartheta}" },
      "\u{1D7C6}": { math: "\\mathsfbfsl{\\varkappa}" },
      "\u{1D7C7}": { math: "\\mathsfbfsl{\\phi}" },
      "\u{1D7C8}": { math: "\\mathsfbfsl{\\varrho}" },
      "\u{1D7C9}": { math: "\\mathsfbfsl{\\varpi}" },
      "\u{1D7CA}": { math: "\\mbfDigamma" },
      "\u{1D7CB}": { math: "\\mbfdigamma" },
      "\u{1D7CE}": { math: "\\mathbf{0}" },
      "\u{1D7CF}": { math: "\\mathbf{1}" },
      "\u{1D7D0}": { math: "\\mathbf{2}" },
      "\u{1D7D1}": { math: "\\mathbf{3}" },
      "\u{1D7D2}": { math: "\\mathbf{4}" },
      "\u{1D7D3}": { math: "\\mathbf{5}" },
      "\u{1D7D4}": { math: "\\mathbf{6}" },
      "\u{1D7D5}": { math: "\\mathbf{7}" },
      "\u{1D7D6}": { math: "\\mathbf{8}" },
      "\u{1D7D7}": { math: "\\mathbf{9}" },
      "\u{1D7D8}": { math: "\\mathbb{0}" },
      "\u{1D7D9}": { math: "\\mathbb{1}" },
      "\u{1D7DA}": { math: "\\mathbb{2}" },
      "\u{1D7DB}": { math: "\\mathbb{3}" },
      "\u{1D7DC}": { math: "\\mathbb{4}" },
      "\u{1D7DD}": { math: "\\mathbb{5}" },
      "\u{1D7DE}": { math: "\\mathbb{6}" },
      "\u{1D7DF}": { math: "\\mathbb{7}" },
      "\u{1D7E0}": { math: "\\mathbb{8}" },
      "\u{1D7E1}": { math: "\\mathbb{9}" },
      "\u{1D7E2}": { math: "\\mathsf{0}" },
      "\u{1D7E3}": { math: "\\mathsf{1}" },
      "\u{1D7E4}": { math: "\\mathsf{2}" },
      "\u{1D7E5}": { math: "\\mathsf{3}" },
      "\u{1D7E6}": { math: "\\mathsf{4}" },
      "\u{1D7E7}": { math: "\\mathsf{5}" },
      "\u{1D7E8}": { math: "\\mathsf{6}" },
      "\u{1D7E9}": { math: "\\mathsf{7}" },
      "\u{1D7EA}": { math: "\\mathsf{8}" },
      "\u{1D7EB}": { math: "\\mathsf{9}" },
      "\u{1D7EC}": { math: "\\mathsfbf{0}" },
      "\u{1D7ED}": { math: "\\mathsfbf{1}" },
      "\u{1D7EE}": { math: "\\mathsfbf{2}" },
      "\u{1D7EF}": { math: "\\mathsfbf{3}" },
      "\u{1D7F0}": { math: "\\mathsfbf{4}" },
      "\u{1D7F1}": { math: "\\mathsfbf{5}" },
      "\u{1D7F2}": { math: "\\mathsfbf{6}" },
      "\u{1D7F3}": { math: "\\mathsfbf{7}" },
      "\u{1D7F4}": { math: "\\mathsfbf{8}" },
      "\u{1D7F5}": { math: "\\mathsfbf{9}" },
      "\u{1D7F6}": { math: "\\mathtt{0}" },
      "\u{1D7F7}": { math: "\\mathtt{1}" },
      "\u{1D7F8}": { math: "\\mathtt{2}" },
      "\u{1D7F9}": { math: "\\mathtt{3}" },
      "\u{1D7FA}": { math: "\\mathtt{4}" },
      "\u{1D7FB}": { math: "\\mathtt{5}" },
      "\u{1D7FC}": { math: "\\mathtt{6}" },
      "\u{1D7FD}": { math: "\\mathtt{7}" },
      "\u{1D7FE}": { math: "\\mathtt{8}" },
      "\u{1D7FF}": { math: "\\mathtt{9}" }
    };
  }
});

// node_modules/unicode2latex/tables/unicode.json
var require_unicode = __commonJS({
  "node_modules/unicode2latex/tables/unicode.json"(exports, module2) {
    module2.exports = {
      "#": { math: "\\#", text: "\\#" },
      $: { math: "\\$", text: "\\$" },
      "%": { math: "\\%", text: "\\%" },
      "&": { math: "\\&", text: "\\&" },
      "/\u200B": { text: "\\slash", commandspacer: true },
      "<": { math: "<" },
      ">": { math: ">" },
      "\\": { math: "\\backslash", text: "\\textbackslash", commandspacer: true },
      "^": { math: "\\sphat", text: "\\^" },
      _: { math: "\\_", text: "\\_" },
      "{": { math: "\\lbrace", text: "\\{" },
      "}": { math: "\\rbrace", text: "\\}" },
      "~": { math: "\\sptilde", text: "\\textasciitilde", commandspacer: true },
      "\xA0": { math: "~", space: true, text: "~" },
      "\u2000": { text: "\\hspace{0.6em}", space: true },
      "\u2001": { math: "\\quad", space: true },
      "\u2002": { text: "\\hspace{0.6em}", space: true },
      "\u2003": { math: "\\quad", space: true },
      "\u2004": { text: "\\;", space: true },
      "\u2005": { text: "\\hspace{0.25em}", space: true },
      "\u2006": { text: "\\hspace{0.166em}", space: true },
      "\u2007": { text: "\\hphantom{0}", space: true },
      "\u2008": { text: "\\hphantom{,}", space: true },
      "\u2009": { text: "\\,", space: true },
      "\u200A": { math: "\\mkern1mu", space: true },
      "\u200B": { text: "\\hspace{0pt}", space: true },
      "\u202F": { text: "\\,", space: true },
      "\u205F": { math: "\\:", space: true, text: "\\:" }
    };
  }
});

// node_modules/unicode2latex/tables/latex.json
var require_latex = __commonJS({
  "node_modules/unicode2latex/tables/latex.json"(exports, module2) {
    module2.exports = {
      "\\textquotedbl": '"',
      "\\#": "#",
      "\\$": "$",
      "\\%": "%",
      "\\&": "&",
      "\\slash": "/\u200B",
      "\\textless": "<",
      "\\textgreater": ">",
      "\\LaTeX": "LaTeX",
      "\\textbackslash": "\\",
      "\\backslash": "\\",
      "\\": "\\",
      "\\^": "^",
      "\\sphat": "^",
      "\\_": "_",
      "\\t{ia}": "i\uFE20a\uFE21",
      "{\\~ w}": "w\u0303",
      "\\{": "{",
      "\\lbrace": "{",
      "\\textbar": "|",
      "\\}": "}",
      "\\rbrace": "}",
      "\\textasciitilde": "~",
      "\\sptilde": "~",
      "\\textexclamdown": "\xA1",
      "\\textcent": "\xA2",
      "\\cent": "\xA2",
      "\\textsterling": "\xA3",
      "\\pounds": "\xA3",
      "\\textcurrency": "\xA4",
      "\\textyen": "\xA5",
      "\\yen": "\xA5",
      "\\textbrokenbar": "\xA6",
      "\\textsection": "\xA7",
      "\\textasciidieresis": "\xA8",
      "\\spddot": "\xA8",
      "\\textcopyright": "\xA9",
      "\\textordfeminine": "\xAA",
      "\\guillemotleft": "\xAB",
      "\\lnot": "\xAC",
      "\\neg": "\xAC",
      "\\-": "\xAD",
      "\\textregistered": "\xAE",
      "\\circledR": "\xAE",
      "\\textasciimacron": "\xAF",
      "\\textdegree": "\xB0",
      "^\\circ": "\xB0",
      "\\pm": "\xB1",
      "^{2}": "\xB2",
      "^{3}": "\xB3",
      "\\textasciiacute": "\xB4",
      "\\textmu": "\xB5",
      "\\textparagraph": "\xB6",
      "^{1}": "\xB9",
      "\\textordmasculine": "\xBA",
      "\\guillemotright": "\xBB",
      "\\frac{1}{4}": "\xBC",
      "\\textonequarter": "\xBC",
      "\\frac{1}{2}": "\xBD",
      "\\textonehalf": "\xBD",
      "\\frac{3}{4}": "\xBE",
      "\\textthreequarters": "\xBE",
      "\\textquestiondown": "\xBF",
      "\\`A": "\xC0",
      "\\'A": "\xC1",
      "\\^A": "\xC2",
      "\\~A": "\xC3",
      '\\"A': "\xC4",
      "\\AA": "\xC5",
      "\\r{A}": "\xC5",
      "{\\r A}": "\xC5",
      "\\AE": "\xC6",
      "\\c{C}": "\xC7",
      "\\`E": "\xC8",
      "\\'E": "\xC9",
      "\\^E": "\xCA",
      '\\"E': "\xCB",
      "\\`I": "\xCC",
      "\\'I": "\xCD",
      "\\^I": "\xCE",
      '\\"I': "\xCF",
      "\\DH": "\xD0",
      "\\~N": "\xD1",
      "\\`O": "\xD2",
      "\\'O": "\xD3",
      "\\^O": "\xD4",
      "\\~O": "\xD5",
      '\\"O': "\xD6",
      "\\texttimes": "\xD7",
      "\\times": "\xD7",
      "\\O": "\xD8",
      "\\`U": "\xD9",
      "\\'U": "\xDA",
      "\\^U": "\xDB",
      '\\"U': "\xDC",
      "\\'Y": "\xDD",
      "\\TH": "\xDE",
      "\\ss": "\xDF",
      "\\`a": "\xE0",
      "\\'a": "\xE1",
      "\\^a": "\xE2",
      "\\~a": "\xE3",
      '\\"a': "\xE4",
      "\\aa": "\xE5",
      "\\r{a}": "\xE5",
      "{\\r a}": "\xE5",
      "\\ae": "\xE6",
      "\\c{c}": "\xE7",
      "\\`e": "\xE8",
      "\\'e": "\xE9",
      "\\^e": "\xEA",
      '\\"e': "\xEB",
      "\\`i": "\xEC",
      "\\`\\i": "\xEC",
      "\\'i": "\xED",
      "\\'\\i": "\xED",
      "\\^i": "\xEE",
      "\\^\\i": "\xEE",
      '\\"i': "\xEF",
      '\\"\\i': "\xEF",
      "\\dh": "\xF0",
      "\\eth": "\xF0",
      "\\~n": "\xF1",
      "\\`o": "\xF2",
      "\\'o": "\xF3",
      "\\^o": "\xF4",
      "\\~o": "\xF5",
      '\\"o': "\xF6",
      "\\div": "\xF7",
      "\\o": "\xF8",
      "\\`u": "\xF9",
      "\\'u": "\xFA",
      "\\^u": "\xFB",
      '\\"u': "\xFC",
      "\\'y": "\xFD",
      "\\th": "\xFE",
      '\\"y': "\xFF",
      "\\=A": "\u0100",
      "\\=a": "\u0101",
      "\\u{A}": "\u0102",
      "\\u{a}": "\u0103",
      "\\k{A}": "\u0104",
      "\\k{a}": "\u0105",
      "\\'C": "\u0106",
      "\\'c": "\u0107",
      "\\^C": "\u0108",
      "\\^c": "\u0109",
      "\\.C": "\u010A",
      "\\.c": "\u010B",
      "\\v{C}": "\u010C",
      "\\v{c}": "\u010D",
      "\\v{D}": "\u010E",
      "\\v{d}": "\u010F",
      "\\DJ": "\u0110",
      "\\dj": "\u0111",
      "\\=E": "\u0112",
      "\\=e": "\u0113",
      "\\u{E}": "\u0114",
      "\\u{e}": "\u0115",
      "\\.E": "\u0116",
      "\\.e": "\u0117",
      "\\k{E}": "\u0118",
      "\\k{e}": "\u0119",
      "\\v{E}": "\u011A",
      "\\v{e}": "\u011B",
      "\\^G": "\u011C",
      "\\^g": "\u011D",
      "\\u{G}": "\u011E",
      "\\u{g}": "\u011F",
      "\\.G": "\u0120",
      "\\.g": "\u0121",
      "\\c{G}": "\u0122",
      "\\c{g}": "\u0123",
      "\\^H": "\u0124",
      "\\^h": "\u0125",
      "{\\fontencoding{LELA}\\selectfont\\char40}": "\u0126",
      "\\Elzxh": "\u0127",
      "\\~I": "\u0128",
      "\\~i": "\u0129",
      "\\=I": "\u012A",
      "\\=i": "\u012B",
      "\\u{I}": "\u012C",
      "{\\u \\i}": "\u012D",
      "\\k{I}": "\u012E",
      "\\k{i}": "\u012F",
      "\\.I": "\u0130",
      "\\i": "\u0131",
      "\\imath": "\u0131",
      "\\^J": "\u0134",
      "\\^\\j": "\u0135",
      "\\c{K}": "\u0136",
      "\\c{k}": "\u0137",
      "{\\fontencoding{LELA}\\selectfont\\char91}": "\u0138",
      "\\'L": "\u0139",
      "\\'l": "\u013A",
      "\\c{L}": "\u013B",
      "\\c{l}": "\u013C",
      "\\v{L}": "\u013D",
      "\\v{l}": "\u013E",
      "{\\fontencoding{LELA}\\selectfont\\char201}": "\u013F",
      "{\\fontencoding{LELA}\\selectfont\\char202}": "\u0140",
      "\\L": "\u0141",
      "\\l": "\u0142",
      "\\'N": "\u0143",
      "\\'n": "\u0144",
      "\\c{N}": "\u0145",
      "\\c{n}": "\u0146",
      "\\v{N}": "\u0147",
      "\\v{n}": "\u0148",
      "\\NG": "\u014A",
      "\\ng": "\u014B",
      "\\=O": "\u014C",
      "\\=o": "\u014D",
      "\\u{O}": "\u014E",
      "\\u{o}": "\u014F",
      "\\H{O}": "\u0150",
      "\\H{o}": "\u0151",
      "\\OE": "\u0152",
      "\\oe": "\u0153",
      "\\'R": "\u0154",
      "\\'r": "\u0155",
      "\\c{R}": "\u0156",
      "\\c{r}": "\u0157",
      "\\v{R}": "\u0158",
      "\\v{r}": "\u0159",
      "\\'S": "\u015A",
      "\\'s": "\u015B",
      "\\^S": "\u015C",
      "\\^s": "\u015D",
      "\\c{S}": "\u015E",
      "\\c{s}": "\u015F",
      "\\v{S}": "\u0160",
      "\\v{s}": "\u0161",
      "\\c{T}": "\u0162",
      "\\c{t}": "\u0163",
      "\\v{T}": "\u0164",
      "\\v{t}": "\u0165",
      "{\\fontencoding{LELA}\\selectfont\\char47}": "\u0166",
      "{\\fontencoding{LELA}\\selectfont\\char63}": "\u0167",
      "\\~U": "\u0168",
      "\\~u": "\u0169",
      "\\=U": "\u016A",
      "\\=u": "\u016B",
      "\\u{U}": "\u016C",
      "\\u{u}": "\u016D",
      "\\r{U}": "\u016E",
      "{\\r U}": "\u016E",
      "\\r{u}": "\u016F",
      "\\ocirc{u}": "\u016F",
      "{\\r u}": "\u016F",
      "\\H{U}": "\u0170",
      "\\H{u}": "\u0171",
      "\\k{U}": "\u0172",
      "\\k{u}": "\u0173",
      "\\^W": "\u0174",
      "\\^w": "\u0175",
      "\\^Y": "\u0176",
      "\\^y": "\u0177",
      '\\"Y': "\u0178",
      "\\'Z": "\u0179",
      "\\'z": "\u017A",
      "\\.Z": "\u017B",
      "\\.z": "\u017C",
      "\\v{Z}": "\u017D",
      "\\v{z}": "\u017E",
      "\\texthvlig": "\u0195",
      "\\textnrleg": "\u019E",
      "\\textesh": "\u01AA",
      "\\Zbar": "\u01B5",
      "{\\fontencoding{LELA}\\selectfont\\char195}": "\u01BA",
      "\\textdoublepipe": "\u01C2",
      "\\v{A}": "\u01CD",
      "\\v{a}": "\u01CE",
      "\\v{I}": "\u01CF",
      "\\v{i}": "\u01D0",
      "\\v{O}": "\u01D1",
      "\\v{o}": "\u01D2",
      "\\v{U}": "\u01D3",
      "\\v{u}": "\u01D4",
      "\\v{G}": "\u01E6",
      "\\v{g}": "\u01E7",
      "\\v{K}": "\u01E8",
      "\\v{k}": "\u01E9",
      "\\k{O}": "\u01EA",
      "\\k{o}": "\u01EB",
      "\\v{j}": "\u01F0",
      "\\'G": "\u01F4",
      "\\'g": "\u01F5",
      "\\c{E}": "\u0228",
      "\\c{e}": "\u0229",
      "\\jmath": "\u0237",
      "\\Elztrna": "\u0250",
      "\\Elztrnsa": "\u0252",
      "\\Elzopeno": "\u0254",
      "\\Elzrtld": "\u0256",
      "{\\fontencoding{LEIP}\\selectfont\\char61}": "\u0258",
      "\\Elzschwa": "\u0259",
      "\\varepsilon": "\u025B",
      "\\Elzpgamma": "\u0263",
      "\\Elzpbgam": "\u0264",
      "\\Elztrnh": "\u0265",
      "\\Elzbtdl": "\u026C",
      "\\Elzrtll": "\u026D",
      "\\Elztrnm": "\u026F",
      "\\Elztrnmlr": "\u0270",
      "\\Elzltlmr": "\u0271",
      "\\Elzltln": "\u0272",
      "\\Elzrtln": "\u0273",
      "\\Elzclomeg": "\u0277",
      "\\textphi": "\u0278",
      "\\Elztrnr": "\u0279",
      "\\Elztrnrl": "\u027A",
      "\\Elzrttrnr": "\u027B",
      "\\Elzrl": "\u027C",
      "\\Elzrtlr": "\u027D",
      "\\Elzfhr": "\u027E",
      "{\\fontencoding{LEIP}\\selectfont\\char202}": "\u027F",
      "\\Elzrtls": "\u0282",
      "\\Elzesh": "\u0283",
      "\\Elztrnt": "\u0287",
      "\\Elzrtlt": "\u0288",
      "\\Elzpupsil": "\u028A",
      "\\Elzpscrv": "\u028B",
      "\\Elzinvv": "\u028C",
      "\\Elzinvw": "\u028D",
      "\\Elztrny": "\u028E",
      "\\Elzrtlz": "\u0290",
      "\\Elzyogh": "\u0292",
      "\\Elzglst": "\u0294",
      "\\Elzreglst": "\u0295",
      "\\Elzinglst": "\u0296",
      "\\textturnk": "\u029E",
      "\\Elzdyogh": "\u02A4",
      "\\Elztesh": "\u02A7",
      "\\textsuperscript{h}": "\u02B0",
      "^{h}": "\u02B0",
      "\\textsuperscript{j}": "\u02B2",
      "^{j}": "\u02B2",
      "\\textsuperscript{r}": "\u02B3",
      "^{r}": "\u02B3",
      "\\textsuperscript{w}": "\u02B7",
      "^{w}": "\u02B7",
      "\\textsuperscript{y}": "\u02B8",
      "^{y}": "\u02B8",
      "\\lasp": "\u02BF",
      "\\textasciicircum": "\u02C6",
      "\\textasciicaron": "\u02C7",
      "\\Elzverts": "\u02C8",
      "\\Elzverti": "\u02CC",
      "\\Elzlmrk": "\u02D0",
      "\\Elzhlmrk": "\u02D1",
      "\\Elzsbrhr": "\u02D2",
      "\\Elzsblhr": "\u02D3",
      "\\Elzrais": "\u02D4",
      "\\Elzlow": "\u02D5",
      "\\textasciibreve": "\u02D8",
      "\\textperiodcentered": "\u02D9",
      "\\texttildelow": "\u02DC",
      "\\textsuperscript{l}": "\u02E1",
      "^{l}": "\u02E1",
      "\\textsuperscript{s}": "\u02E2",
      "^{s}": "\u02E2",
      "\\textsuperscript{x}": "\u02E3",
      "^{x}": "\u02E3",
      "\\tone{55}": "\u02E5",
      "\\tone{44}": "\u02E6",
      "\\tone{33}": "\u02E7",
      "\\tone{22}": "\u02E8",
      "\\tone{11}": "\u02E9",
      "\\`": "\u0300",
      "\\grave": "\u0300",
      "\\textgravemacron": "\u0300\u0304",
      "\\textgravedot": "\u0300\u0307",
      "\\'": "\u0301",
      "\\acute": "\u0301",
      "\\textacutemacron": "\u0301\u0304",
      "\\textacutewedge": "\u0301\u030C",
      "\\hat": "\u0302",
      "\\textcircumdot": "\u0302\u0307",
      "\\~": "\u0303",
      "\\tilde": "\u0303",
      "\\texttildedot": "\u0303\u0307",
      "\\=": "\u0304",
      "\\bar": "\u0304",
      "\\overline": "\u0305",
      "\\u": "\u0306",
      "\\breve": "\u0306",
      "\\textbrevemacron": "\u0306\u0304",
      "\\.": "\u0307",
      "\\dot": "\u0307",
      "\\textdotacute": "\u0307\u0301",
      '\\"': "\u0308",
      "\\ddot": "\u0308",
      "\\ovhook": "\u0309",
      "\\r": "\u030A",
      "\\mathring": "\u030A",
      "\\textringmacron": "\u030A\u0304",
      "\\H": "\u030B",
      "\\check": "\u030C",
      "\\v": "\u030C",
      "\\textvbaraccent": "\u030D",
      "\\textdoublevbaraccent": "\u030E",
      "\\textdoublegrave": "\u030F",
      "\\textdotbreve": "\u0310",
      "{\\fontencoding{LECO}\\selectfont\\char177}": "\u0311",
      "\\oturnedcomma": "\u0312",
      "\\ocommatopright": "\u0315",
      "\\textsubgrave": "\u0316",
      "\\textadvancing": "\u0318",
      "\\textretracting": "\u0319",
      "\\droang": "\u031A",
      "\\textcorner": "\u031A",
      "\\textsublhalfring": "\u031C",
      "\\textraising": "\u031D",
      "\\textlowering": "\u031E",
      "\\textsubplus": "\u031F",
      "\\Elzpalh": "\u0321",
      "\\Elzrh": "\u0322",
      "\\d": "\u0323",
      "\\textsubumlaut": "\u0324",
      "\\textsubring": "\u0325",
      "\\c": "\u0327",
      "\\k": "\u0328",
      "\\textsyllabic": "\u0329",
      "\\Elzsbbrg": "\u032A",
      "\\textsubbridge": "\u032A",
      "{\\fontencoding{LECO}\\selectfont\\char203}": "\u032B",
      "\\textsubwedge": "\u032C",
      "\\textsubarch": "\u032F",
      "\\utilde": "\u0330",
      "\\textsubtilde": "\u0330",
      "\\textsubbar": "\u0331",
      "\\underbar": "\u0331",
      "\\underline": "\u0332",
      "\\textsuperimposetilde": "\u0334",
      "\\Elzxl": "\u0335",
      "\\Elzbar": "\u0336",
      "{\\fontencoding{LECO}\\selectfont\\char215}": "\u0337",
      "\\not": "\u0338",
      "\\textsubrhalfring": "\u0339",
      "\\textinvsubbridge": "\u033A",
      "\\textsubsquare": "\u033B",
      "\\textseagull": "\u033C",
      "\\textovercross": "\u033D",
      "{\\fontencoding{LECO}\\selectfont\\char225}": "\u0361",
      "\\'H": "\u0389",
      "{\\'{}I}": "\u038A",
      "{\\'{}O}": "\u038C",
      "\\mathrm{'Y}": "\u038E",
      "\\mathrm{'\\Omega}": "\u038F",
      "\\acute{\\ddot{\\iota}}": "\u0390",
      "\\Gamma": "\u0393",
      "\\varGamma": "\u0393",
      "\\Delta": "\u0394",
      "\\Theta": "\u0398",
      "\\Lambda": "\u039B",
      "\\Xi": "\u039E",
      "\\Pi": "\u03A0",
      "\\Sigma": "\u03A3",
      "\\Upsilon": "\u03A5",
      "\\Phi": "\u03A6",
      "\\Psi": "\u03A8",
      "\\Omega": "\u03A9",
      "\\mathrm{\\ddot{I}}": "\u03AA",
      "\\mathrm{\\ddot{Y}}": "\u03AB",
      "{\\'$\\alpha$}": "\u03AC",
      "\\acute{\\epsilon}": "\u03AD",
      "\\acute{\\eta}": "\u03AE",
      "\\acute{\\iota}": "\u03AF",
      "\\acute{\\ddot{\\upsilon}}": "\u03B0",
      "\\alpha": "\u03B1",
      "\\beta": "\u03B2",
      "\\gamma": "\u03B3",
      "\\delta": "\u03B4",
      "\\zeta": "\u03B6",
      "\\eta": "\u03B7",
      "\\texttheta": "\u03B8",
      "\\theta": "\u03B8",
      "\\iota": "\u03B9",
      "\\kappa": "\u03BA",
      "\\lambda": "\u03BB",
      "\\nu": "\u03BD",
      "\\xi": "\u03BE",
      "\\pi": "\u03C0",
      "\\rho": "\u03C1",
      "\\varsigma": "\u03C2",
      "\\sigma": "\u03C3",
      "\\tau": "\u03C4",
      "\\upsilon": "\u03C5",
      "\\varphi": "\u03C6",
      "\\chi": "\u03C7",
      "\\psi": "\u03C8",
      "\\omega": "\u03C9",
      "\\ddot{\\iota}": "\u03CA",
      "\\ddot{\\upsilon}": "\u03CB",
      "\\acute{\\upsilon}": "\u03CD",
      "\\acute{\\omega}": "\u03CE",
      "\\Pisymbol{ppi022}{87}": "\u03D0",
      "\\varbeta": "\u03D0",
      "\\textvartheta": "\u03D1",
      "\\vartheta": "\u03D1",
      "\\phi": "\u03D5",
      "\\varpi": "\u03D6",
      "\\Qoppa": "\u03D8",
      "\\qoppa": "\u03D9",
      "\\Stigma": "\u03DA",
      "\\stigma": "\u03DB",
      "\\Digamma": "\u03DC",
      "\\digamma": "\u03DD",
      "\\Koppa": "\u03DE",
      "\\koppa": "\u03DF",
      "\\Sampi": "\u03E0",
      "\\sampi": "\u03E1",
      "\\varkappa": "\u03F0",
      "\\varrho": "\u03F1",
      "\\textTheta": "\u03F4",
      "\\upvarTheta": "\u03F4",
      "\\epsilon": "\u03F5",
      "\\backepsilon": "\u03F6",
      "\\cyrchar\\CYRYO": "\u0401",
      "\\cyrchar\\CYRDJE": "\u0402",
      "\\cyrchar{\\'\\CYRG}": "\u0403",
      "\\cyrchar\\CYRIE": "\u0404",
      "\\cyrchar\\CYRDZE": "\u0405",
      "\\cyrchar\\CYRII": "\u0406",
      "\\cyrchar\\CYRYI": "\u0407",
      "\\cyrchar\\CYRJE": "\u0408",
      "\\cyrchar\\CYRLJE": "\u0409",
      "\\cyrchar\\CYRNJE": "\u040A",
      "\\cyrchar\\CYRTSHE": "\u040B",
      "\\cyrchar{\\'\\CYRK}": "\u040C",
      "\\cyrchar\\CYRUSHRT": "\u040E",
      "\\cyrchar\\CYRDZHE": "\u040F",
      "\\cyrchar\\CYRA": "\u0410",
      "\\cyrchar\\CYRB": "\u0411",
      "\\cyrchar\\CYRV": "\u0412",
      "\\cyrchar\\CYRG": "\u0413",
      "\\cyrchar\\CYRD": "\u0414",
      "\\cyrchar\\CYRE": "\u0415",
      "\\cyrchar\\CYRZH": "\u0416",
      "\\cyrchar\\CYRZ": "\u0417",
      "\\cyrchar\\CYRI": "\u0418",
      "\\cyrchar\\CYRISHRT": "\u0419",
      "\\cyrchar\\CYRK": "\u041A",
      "\\cyrchar\\CYRL": "\u041B",
      "\\cyrchar\\CYRM": "\u041C",
      "\\cyrchar\\CYRN": "\u041D",
      "\\cyrchar\\CYRO": "\u041E",
      "\\cyrchar\\CYRP": "\u041F",
      "\\cyrchar\\CYRR": "\u0420",
      "\\cyrchar\\CYRS": "\u0421",
      "\\cyrchar\\CYRT": "\u0422",
      "\\cyrchar\\CYRU": "\u0423",
      "\\cyrchar\\CYRF": "\u0424",
      "\\cyrchar\\CYRH": "\u0425",
      "\\cyrchar\\CYRC": "\u0426",
      "\\cyrchar\\CYRCH": "\u0427",
      "\\cyrchar\\CYRSH": "\u0428",
      "\\cyrchar\\CYRSHCH": "\u0429",
      "\\cyrchar\\CYRHRDSN": "\u042A",
      "\\bud": "\u042A",
      "\\cdprime": "\u042A",
      "\\cyrchar\\CYRERY": "\u042B",
      "\\cyrchar\\CYRSFTSN": "\u042C",
      "\\cprime": "\u042C",
      "\\cyrchar\\CYREREV": "\u042D",
      "\\cyrchar\\CYRYU": "\u042E",
      "\\cyrchar\\CYRYA": "\u042F",
      "\\cyrchar\\cyra": "\u0430",
      "\\cyrchar\\cyrb": "\u0431",
      "\\cyrchar\\cyrv": "\u0432",
      "\\cyrchar\\cyrg": "\u0433",
      "\\cyrchar\\cyrd": "\u0434",
      "\\cyrchar\\cyre": "\u0435",
      "\\cyrchar\\cyrzh": "\u0436",
      "\\cyrchar\\cyrz": "\u0437",
      "\\cyrchar\\cyri": "\u0438",
      "\\cyrchar\\cyrishrt": "\u0439",
      "\\cyrchar\\cyrk": "\u043A",
      "\\cyrchar\\cyrl": "\u043B",
      "\\cyrchar\\cyrm": "\u043C",
      "\\cyrchar\\cyrn": "\u043D",
      "\\cyrchar\\cyro": "\u043E",
      "\\cyrchar\\cyrp": "\u043F",
      "\\cyrchar\\cyrr": "\u0440",
      "\\cyrchar\\cyrs": "\u0441",
      "\\cyrchar\\cyrt": "\u0442",
      "\\cyrchar\\cyru": "\u0443",
      "\\cyrchar\\cyrf": "\u0444",
      "\\cyrchar\\cyrh": "\u0445",
      "\\cyrchar\\cyrc": "\u0446",
      "\\cyrchar\\cyrch": "\u0447",
      "\\cyrchar\\cyrsh": "\u0448",
      "\\cyrchar\\cyrshch": "\u0449",
      "\\cyrchar\\cyrhrdsn": "\u044A",
      "\\cyrchar\\cyrery": "\u044B",
      "\\cyrchar\\cyrsftsn": "\u044C",
      "\\cyrchar\\cyrerev": "\u044D",
      "\\cyrchar\\cyryu": "\u044E",
      "\\cyrchar\\cyrya": "\u044F",
      "\\cyrchar\\cyryo": "\u0451",
      "\\cyrchar\\cyrdje": "\u0452",
      "\\cyrchar{\\'\\cyrg}": "\u0453",
      "\\cyrchar\\cyrie": "\u0454",
      "\\cyrchar\\cyrdze": "\u0455",
      "\\cyrchar\\cyrii": "\u0456",
      "\\cyrchar\\cyryi": "\u0457",
      "\\cyrchar\\cyrje": "\u0458",
      "\\cyrchar\\cyrlje": "\u0459",
      "\\cyrchar\\cyrnje": "\u045A",
      "\\cyrchar\\cyrtshe": "\u045B",
      "\\cyrchar{\\'\\cyrk}": "\u045C",
      "\\cyrchar\\cyrushrt": "\u045E",
      "\\cyrchar\\cyrdzhe": "\u045F",
      "\\cyrchar\\CYROMEGA": "\u0460",
      "\\cyrchar\\cyromega": "\u0461",
      "\\cyrchar\\CYRYAT": "\u0462",
      "\\cyrchar\\CYRIOTE": "\u0464",
      "\\cyrchar\\cyriote": "\u0465",
      "\\cyrchar\\CYRLYUS": "\u0466",
      "\\cyrchar\\cyrlyus": "\u0467",
      "\\cyrchar\\CYRIOTLYUS": "\u0468",
      "\\cyrchar\\cyriotlyus": "\u0469",
      "\\cyrchar\\CYRBYUS": "\u046A",
      "\\cyrchar\\CYRIOTBYUS": "\u046C",
      "\\cyrchar\\cyriotbyus": "\u046D",
      "\\cyrchar\\CYRKSI": "\u046E",
      "\\cyrchar\\cyrksi": "\u046F",
      "\\cyrchar\\CYRPSI": "\u0470",
      "\\cyrchar\\cyrpsi": "\u0471",
      "\\cyrchar\\CYRFITA": "\u0472",
      "\\cyrchar\\CYRIZH": "\u0474",
      "\\cyrchar\\CYRUK": "\u0478",
      "\\cyrchar\\cyruk": "\u0479",
      "\\cyrchar\\CYROMEGARND": "\u047A",
      "\\cyrchar\\cyromegarnd": "\u047B",
      "\\cyrchar\\CYROMEGATITLO": "\u047C",
      "\\cyrchar\\cyromegatitlo": "\u047D",
      "\\cyrchar\\CYROT": "\u047E",
      "\\cyrchar\\cyrot": "\u047F",
      "\\cyrchar\\CYRKOPPA": "\u0480",
      "\\cyrchar\\cyrkoppa": "\u0481",
      "\\cyrchar\\cyrthousands": "\u0482",
      "\\cyrchar\\cyrhundredthousands": "\u0488",
      "\\cyrchar\\cyrmillions": "\u0489",
      "\\cyrchar\\CYRSEMISFTSN": "\u048C",
      "\\cyrchar\\cyrsemisftsn": "\u048D",
      "\\cyrchar\\CYRRTICK": "\u048E",
      "\\cyrchar\\cyrrtick": "\u048F",
      "\\cyrchar\\CYRGUP": "\u0490",
      "\\cyrchar\\cyrgup": "\u0491",
      "\\cyrchar\\CYRGHCRS": "\u0492",
      "\\cyrchar\\cyrghcrs": "\u0493",
      "\\cyrchar\\CYRGHK": "\u0494",
      "\\cyrchar\\cyrghk": "\u0495",
      "\\cyrchar\\CYRZHDSC": "\u0496",
      "\\cyrchar\\cyrzhdsc": "\u0497",
      "\\cyrchar\\CYRZDSC": "\u0498",
      "\\cyrchar\\cyrzdsc": "\u0499",
      "\\cyrchar\\CYRKDSC": "\u049A",
      "\\cyrchar\\cyrkdsc": "\u049B",
      "\\cyrchar\\CYRKVCRS": "\u049C",
      "\\cyrchar\\cyrkvcrs": "\u049D",
      "\\cyrchar\\CYRKHCRS": "\u049E",
      "\\cyrchar\\cyrkhcrs": "\u049F",
      "\\cyrchar\\CYRKBEAK": "\u04A0",
      "\\cyrchar\\cyrkbeak": "\u04A1",
      "\\cyrchar\\CYRNDSC": "\u04A2",
      "\\cyrchar\\cyrndsc": "\u04A3",
      "\\cyrchar\\CYRNG": "\u04A4",
      "\\cyrchar\\cyrng": "\u04A5",
      "\\cyrchar\\CYRPHK": "\u04A6",
      "\\cyrchar\\cyrphk": "\u04A7",
      "\\cyrchar\\CYRABHHA": "\u04A8",
      "\\cyrchar\\cyrabhha": "\u04A9",
      "\\cyrchar\\CYRSDSC": "\u04AA",
      "\\cyrchar\\cyrsdsc": "\u04AB",
      "\\cyrchar\\CYRTDSC": "\u04AC",
      "\\cyrchar\\cyrtdsc": "\u04AD",
      "\\cyrchar\\CYRY": "\u04AE",
      "\\cyrchar\\cyry": "\u04AF",
      "\\cyrchar\\CYRYHCRS": "\u04B0",
      "\\cyrchar\\cyryhcrs": "\u04B1",
      "\\cyrchar\\CYRHDSC": "\u04B2",
      "\\cyrchar\\cyrhdsc": "\u04B3",
      "\\cyrchar\\CYRTETSE": "\u04B4",
      "\\cyrchar\\cyrtetse": "\u04B5",
      "\\cyrchar\\CYRCHRDSC": "\u04B6",
      "\\cyrchar\\cyrchrdsc": "\u04B7",
      "\\cyrchar\\CYRCHVCRS": "\u04B8",
      "\\cyrchar\\cyrchvcrs": "\u04B9",
      "\\cyrchar\\CYRSHHA": "\u04BA",
      "\\cyrchar\\cyrshha": "\u04BB",
      "\\cyrchar\\CYRABHCH": "\u04BC",
      "\\cyrchar\\cyrabhch": "\u04BD",
      "\\cyrchar\\CYRABHCHDSC": "\u04BE",
      "\\cyrchar\\cyrabhchdsc": "\u04BF",
      "\\cyrchar\\CYRpalochka": "\u04C0",
      "\\cyrchar\\CYRKHK": "\u04C3",
      "\\cyrchar\\cyrkhk": "\u04C4",
      "\\cyrchar\\CYRNHK": "\u04C7",
      "\\cyrchar\\cyrnhk": "\u04C8",
      "\\cyrchar\\CYRCHLDSC": "\u04CB",
      "\\cyrchar\\cyrchldsc": "\u04CC",
      "\\cyrchar\\CYRAE": "\u04D4",
      "\\cyrchar\\cyrae": "\u04D5",
      "\\cyrchar\\CYRSCHWA": "\u04D8",
      "\\cyrchar\\cyrschwa": "\u04D9",
      "\\cyrchar\\CYRABHDZE": "\u04E0",
      "\\cyrchar\\cyrabhdze": "\u04E1",
      "\\cyrchar\\CYROTLD": "\u04E8",
      "\\cyrchar\\cyrotld": "\u04E9",
      "\\\\backslash": "\u0871",
      "\\textsuperscript{a}": "\u1D43",
      "^{a}": "\u1D43",
      "\\textsuperscript{b}": "\u1D47",
      "^{b}": "\u1D47",
      "\\textsuperscript{d}": "\u1D48",
      "^{d}": "\u1D48",
      "\\textsuperscript{e}": "\u1D49",
      "^{e}": "\u1D49",
      "\\textsuperscript{g}": "\u1D4D",
      "^{g}": "\u1D4D",
      "\\textsuperscript{k}": "\u1D4F",
      "^{k}": "\u1D4F",
      "\\textsuperscript{m}": "\u1D50",
      "^{m}": "\u1D50",
      "\\textsuperscript{o}": "\u1D52",
      "^{o}": "\u1D52",
      "\\textsuperscript{p}": "\u1D56",
      "^{p}": "\u1D56",
      "\\textsuperscript{t}": "\u1D57",
      "^{t}": "\u1D57",
      "\\textsuperscript{u}": "\u1D58",
      "^{u}": "\u1D58",
      "\\textsuperscript{v}": "\u1D5B",
      "^{v}": "\u1D5B",
      "\\textsuperscript{c}": "\u1D9C",
      "^{c}": "\u1D9C",
      "\\textsuperscript{f}": "\u1DA0",
      "^{f}": "\u1DA0",
      "\\textsuperscript{z}": "\u1DBB",
      "^{z}": "\u1DBB",
      "\\.B": "\u1E02",
      "\\.b": "\u1E03",
      "\\d{B}": "\u1E04",
      "\\d{b}": "\u1E05",
      "\\b{B}": "\u1E06",
      "\\b{b}": "\u1E07",
      "\\.D": "\u1E0A",
      "\\.d": "\u1E0B",
      "\\d{D}": "\u1E0C",
      "\\d{d}": "\u1E0D",
      "\\b{D}": "\u1E0E",
      "\\b{d}": "\u1E0F",
      "\\c{D}": "\u1E10",
      "\\c{d}": "\u1E11",
      "\\c{\\u{E}}": "\u1E1C",
      "\\c{\\u{e}}": "\u1E1D",
      "\\.F": "\u1E1E",
      "\\.f": "\u1E1F",
      "\\=G": "\u1E20",
      "\\=g": "\u1E21",
      "\\.H": "\u1E22",
      "\\.h": "\u1E23",
      "\\d{H}": "\u1E24",
      "\\d{h}": "\u1E25",
      '\\"H': "\u1E26",
      '\\"h': "\u1E27",
      "\\c{H}": "\u1E28",
      "\\c{h}": "\u1E29",
      "\\'K": "\u1E30",
      "\\'k": "\u1E31",
      "\\d{K}": "\u1E32",
      "\\d{k}": "\u1E33",
      "\\b{K}": "\u1E34",
      "\\b{k}": "\u1E35",
      "\\d{L}": "\u1E36",
      "\\d{l}": "\u1E37",
      "\\b{L}": "\u1E3A",
      "\\b{l}": "\u1E3B",
      "\\'M": "\u1E3E",
      "\\'m": "\u1E3F",
      "\\.M": "\u1E40",
      "\\.m": "\u1E41",
      "\\d{M}": "\u1E42",
      "\\d{m}": "\u1E43",
      "\\.N": "\u1E44",
      "\\.n": "\u1E45",
      "\\d{N}": "\u1E46",
      "\\d{n}": "\u1E47",
      "\\b{N}": "\u1E48",
      "\\b{n}": "\u1E49",
      "\\'P": "\u1E54",
      "\\'p": "\u1E55",
      "\\.P": "\u1E56",
      "\\.p": "\u1E57",
      "\\.R": "\u1E58",
      "\\.r": "\u1E59",
      "\\d{R}": "\u1E5A",
      "\\d{r}": "\u1E5B",
      "\\b{R}": "\u1E5E",
      "\\b{r}": "\u1E5F",
      "\\.S": "\u1E60",
      "\\.s": "\u1E61",
      "\\d{S}": "\u1E62",
      "\\d{s}": "\u1E63",
      "\\.T": "\u1E6A",
      "\\.t": "\u1E6B",
      "\\d{T}": "\u1E6C",
      "\\d{t}": "\u1E6D",
      "\\b{T}": "\u1E6E",
      "\\b{t}": "\u1E6F",
      "\\~V": "\u1E7C",
      "\\~v": "\u1E7D",
      "\\d{V}": "\u1E7E",
      "\\d{v}": "\u1E7F",
      "\\`W": "\u1E80",
      "\\`w": "\u1E81",
      "\\'W": "\u1E82",
      "\\'w": "\u1E83",
      '\\"W': "\u1E84",
      '\\"w': "\u1E85",
      "\\.W": "\u1E86",
      "\\.w": "\u1E87",
      "\\d{W}": "\u1E88",
      "\\d{w}": "\u1E89",
      "\\.X": "\u1E8A",
      "\\.x": "\u1E8B",
      '\\"X': "\u1E8C",
      '\\"x': "\u1E8D",
      "\\.Y": "\u1E8E",
      "\\.y": "\u1E8F",
      "\\^Z": "\u1E90",
      "\\^z": "\u1E91",
      "\\d{Z}": "\u1E92",
      "\\d{z}": "\u1E93",
      "\\b{Z}": "\u1E94",
      "\\b{z}": "\u1E95",
      "\\b{h}": "\u1E96",
      '\\"t': "\u1E97",
      "\\r{w}": "\u1E98",
      "\\r{y}": "\u1E99",
      "\\d{A}": "\u1EA0",
      "\\d{a}": "\u1EA1",
      "\\d{E}": "\u1EB8",
      "\\d{e}": "\u1EB9",
      "\\~E": "\u1EBC",
      "\\~e": "\u1EBD",
      "\\d{I}": "\u1ECA",
      "\\d{i}": "\u1ECB",
      "\\d{O}": "\u1ECC",
      "\\d{o}": "\u1ECD",
      "\\d{U}": "\u1EE4",
      "\\d{u}": "\u1EE5",
      "\\`Y": "\u1EF2",
      "\\`y": "\u1EF3",
      "\\d{Y}": "\u1EF4",
      "\\d{y}": "\u1EF5",
      "\\~Y": "\u1EF8",
      "\\~y": "\u1EF9",
      "\\hspace{0.6em}": "\u2000",
      "\\quad": "\u2003",
      "\\;": "\u2004",
      "\\hspace{0.25em}": "\u2005",
      "\\hspace{0.166em}": "\u2006",
      "\\hphantom{0}": "\u2007",
      "\\hphantom{,}": "\u2008",
      "\\,": "\u2009",
      "\\mkern1mu": "\u200A",
      "\\hspace{0pt}": "\u200B",
      "{\\aftergroup\\ignorespaces}": "\u200C",
      "\\textendash": "\u2013",
      "\\textemdash": "\u2014",
      "\\rule{1em}{1pt}": "\u2015",
      "\\horizbar": "\u2015",
      "\\Vert": "\u2016",
      "\\twolowline": "\u2017",
      "\\textquoteleft": "\u2018",
      "\\textquoteright": "\u2019",
      "\\Elzreapos": "\u201B",
      "\\textquotedblleft": "\u201C",
      "\\textquotedblright": "\u201D",
      "\\quotedblbase": "\u201F",
      "\\textdagger": "\u2020",
      "\\dagger": "\u2020",
      "\\textdaggerdbl": "\u2021",
      "\\ddagger": "\u2021",
      "\\textbullet": "\u2022",
      "\\enleadertwodots": "\u2025",
      "\\ldots": "\u2026",
      "\\textperthousand": "\u2030",
      "\\textpertenthousand": "\u2031",
      "{'}": "\u2032",
      "{''}": "\u2033",
      "{'''}": "\u2034",
      "\\backprime": "\u2035",
      "\\backdprime": "\u2036",
      "\\backtrprime": "\u2037",
      "\\caretinsert": "\u2038",
      "\\guilsinglleft": "\u2039",
      "\\guilsinglright": "\u203A",
      "\\Exclam": "\u203C",
      "\\hyphenbullet": "\u2043",
      "\\fracslash": "\u2044",
      "\\Question": "\u2047",
      "\\closure": "\u2050",
      "\\:": "\u205F",
      "\\nolinebreak": "\u2060",
      "^{0}": "\u2070",
      "\\textsuperscript{i}": "\u2071",
      "^{i}": "\u2071",
      "^{4}": "\u2074",
      "^{5}": "\u2075",
      "^{6}": "\u2076",
      "^{7}": "\u2077",
      "^{8}": "\u2078",
      "^{9}": "\u2079",
      "^{+}": "\u207A",
      "^{-}": "\u207B",
      "^{=}": "\u207C",
      "^{(}": "\u207D",
      "^{)}": "\u207E",
      "\\textsuperscript{n}": "\u207F",
      "^{n}": "\u207F",
      "_{0}": "\u2080",
      "_{1}": "\u2081",
      "_{2}": "\u2082",
      "_{3}": "\u2083",
      "_{4}": "\u2084",
      "_{5}": "\u2085",
      "_{6}": "\u2086",
      "_{7}": "\u2087",
      "_{8}": "\u2088",
      "_{9}": "\u2089",
      "_{+}": "\u208A",
      "_{-}": "\u208B",
      "_{=}": "\u208C",
      "_{(}": "\u208D",
      "_{)}": "\u208E",
      "\\textsubscript{a}": "\u2090",
      "_{a}": "\u2090",
      "\\textsubscript{e}": "\u2091",
      "_{e}": "\u2091",
      "\\textsubscript{o}": "\u2092",
      "_{o}": "\u2092",
      "\\textsubscript{x}": "\u2093",
      "_{x}": "\u2093",
      "\\textsubscript{\\textschwa}": "\u2094",
      "\\textsubscript{h}": "\u2095",
      "_{h}": "\u2095",
      "\\textsubscript{k}": "\u2096",
      "_{k}": "\u2096",
      "\\textsubscript{l}": "\u2097",
      "_{l}": "\u2097",
      "\\textsubscript{m}": "\u2098",
      "_{m}": "\u2098",
      "\\textsubscript{n}": "\u2099",
      "_{n}": "\u2099",
      "\\textsubscript{p}": "\u209A",
      "_{p}": "\u209A",
      "\\textsubscript{s}": "\u209B",
      "_{s}": "\u209B",
      "\\textsubscript{t}": "\u209C",
      "_{t}": "\u209C",
      "\\ensuremath{\\Elzpes}": "\u20A7",
      "\\texteuro": "\u20AC",
      "\\euro": "\u20AC",
      "\\lvec": "\u20D0",
      "\\vertoverlay": "\u20D2",
      "\\LVec": "\u20D6",
      "\\vec": "\u20D7",
      "\\dddot": "\u20DB",
      "\\ddddot": "\u20DC",
      "\\enclosecircle": "\u20DD",
      "\\enclosesquare": "\u20DE",
      "\\enclosediamond": "\u20DF",
      "\\overleftrightarrow": "\u20E1",
      "\\enclosetriangle": "\u20E4",
      "\\annuity": "\u20E7",
      "\\threeunderdot": "\u20E8",
      "\\widebridgeabove": "\u20E9",
      "\\underrightharpoondown": "\u20EC",
      "\\underleftharpoondown": "\u20ED",
      "\\underleftarrow": "\u20EE",
      "\\underrightarrow": "\u20EF",
      "\\asteraccent": "\u20F0",
      "\\mathbb{C}": "\u2102",
      "\\textcelsius": "\u2103",
      "\\Euler": "\u2107",
      "\\mathscr{g}": "\u210A",
      "\\mathscr{H}": "\u210B",
      "\\mathfrak{H}": "\u210C",
      "\\mathbb{H}": "\u210D",
      "\\Planckconst": "\u210E",
      "\\hslash": "\u210F",
      "\\mathscr{I}": "\u2110",
      "\\mathfrak{I}": "\u2111",
      "\\mathscr{L}": "\u2112",
      "\\mathscr{l}": "\u2113",
      "\\mathbb{N}": "\u2115",
      "\\cyrchar\\textnumero": "\u2116",
      "\\textcircledP": "\u2117",
      "\\wp": "\u2118",
      "\\mathbb{P}": "\u2119",
      "\\mathbb{Q}": "\u211A",
      "\\mathscr{R}": "\u211B",
      "\\mathfrak{R}": "\u211C",
      "\\mathbb{R}": "\u211D",
      "\\Elzxrat": "\u211E",
      "\\textservicemark": "\u2120",
      "\\texttrademark": "\u2122",
      "\\mathbb{Z}": "\u2124",
      "\\mho": "\u2127",
      "\\mathfrak{Z}": "\u2128",
      "\\textriota": "\u2129",
      "\\Angstroem": "\u212B",
      "\\mathscr{B}": "\u212C",
      "\\mathfrak{C}": "\u212D",
      "\\textestimated": "\u212E",
      "\\mathscr{e}": "\u212F",
      "\\mathscr{E}": "\u2130",
      "\\mathscr{F}": "\u2131",
      "\\Finv": "\u2132",
      "\\mathscr{M}": "\u2133",
      "\\mathscr{o}": "\u2134",
      "\\aleph": "\u2135",
      "\\beth": "\u2136",
      "\\gimel": "\u2137",
      "\\daleth": "\u2138",
      "\\mathbb{\\pi}": "\u213C",
      "\\mathbb{\\gamma}": "\u213D",
      "\\mathbb{\\Gamma}": "\u213E",
      "\\mathbb{\\Pi}": "\u213F",
      "\\mathbb{\\Sigma}": "\u2140",
      "\\Game": "\u2141",
      "\\sansLturned": "\u2142",
      "\\sansLmirrored": "\u2143",
      "\\Yup": "\u2144",
      "\\CapitalDifferentialD": "\u2145",
      "\\DifferentialD": "\u2146",
      "\\ExponetialE": "\u2147",
      "\\ComplexI": "\u2148",
      "\\ComplexJ": "\u2149",
      "\\PropertyLine": "\u214A",
      "\\invamp": "\u214B",
      "\\frac{1}{7}": "\u2150",
      "\\textfrac{1}{7}": "\u2150",
      "\\frac{1}{9}": "\u2151",
      "\\textfrac{1}{9}": "\u2151",
      "\\frac{1}{10}": "\u2152",
      "\\textfrac{1}{10}": "\u2152",
      "\\frac{1}{3}": "\u2153",
      "\\textfrac{1}{3}": "\u2153",
      "\\frac{2}{3}": "\u2154",
      "\\textfrac{2}{3}": "\u2154",
      "\\frac{1}{5}": "\u2155",
      "\\textfrac{1}{5}": "\u2155",
      "\\frac{2}{5}": "\u2156",
      "\\textfrac{2}{5}": "\u2156",
      "\\frac{3}{5}": "\u2157",
      "\\textfrac{3}{5}": "\u2157",
      "\\frac{4}{5}": "\u2158",
      "\\textfrac{4}{5}": "\u2158",
      "\\frac{1}{6}": "\u2159",
      "\\textfrac{1}{6}": "\u2159",
      "\\frac{5}{6}": "\u215A",
      "\\textfrac{5}{6}": "\u215A",
      "\\frac{1}{8}": "\u215B",
      "\\textfrac{1}{8}": "\u215B",
      "\\frac{3}{8}": "\u215C",
      "\\textfrac{3}{8}": "\u215C",
      "\\frac{5}{8}": "\u215D",
      "\\textfrac{5}{8}": "\u215D",
      "\\frac{7}{8}": "\u215E",
      "\\textfrac{7}{8}": "\u215E",
      "\\frac{1}": "\u215F",
      "\\textfrac{1}": "\u215F",
      "\\frac{0}{3}": "\u2189",
      "\\textfrac{0}{3}": "\u2189",
      "\\leftarrow": "\u2190",
      "\\uparrow": "\u2191",
      "\\textrightarrow": "\u2192",
      "\\rightarrow": "\u2192",
      "\\to": "\u2192",
      "\\downarrow": "\u2193",
      "\\leftrightarrow": "\u2194",
      "\\updownarrow": "\u2195",
      "\\nwarrow": "\u2196",
      "\\nearrow": "\u2197",
      "\\searrow": "\u2198",
      "\\swarrow": "\u2199",
      "\\nleftarrow": "\u219A",
      "\\nrightarrow": "\u219B",
      "\\arrowwaveleft": "\u219C",
      "\\arrowwaveright": "\u219D",
      "\\twoheadleftarrow": "\u219E",
      "\\twoheaduparrow": "\u219F",
      "\\twoheadrightarrow": "\u21A0",
      "\\twoheaddownarrow": "\u21A1",
      "\\leftarrowtail": "\u21A2",
      "\\rightarrowtail": "\u21A3",
      "\\mapsfrom": "\u21A4",
      "\\MapsUp": "\u21A5",
      "\\mapsto": "\u21A6",
      "\\MapsDown": "\u21A7",
      "\\updownarrowbar": "\u21A8",
      "\\hookleftarrow": "\u21A9",
      "\\hookrightarrow": "\u21AA",
      "\\looparrowleft": "\u21AB",
      "\\looparrowright": "\u21AC",
      "\\leftrightsquigarrow": "\u21AD",
      "\\nleftrightarrow": "\u21AE",
      "\\lightning": "\u21AF",
      "\\Lsh": "\u21B0",
      "\\Rsh": "\u21B1",
      "\\dlsh": "\u21B2",
      "\\reflectbox{\\carriagereturn}": "\u21B3",
      "\\linefeed": "\u21B4",
      "\\carriagereturn": "\u21B5",
      "\\curvearrowleft": "\u21B6",
      "\\curvearrowright": "\u21B7",
      "\\barovernorthwestarrow": "\u21B8",
      "\\barleftarrowrightarrowba": "\u21B9",
      "\\circlearrowleft": "\u21BA",
      "\\circlearrowright": "\u21BB",
      "\\leftharpoonup": "\u21BC",
      "\\leftharpoondown": "\u21BD",
      "\\upharpoonright": "\u21BE",
      "\\upharpoonleft": "\u21BF",
      "\\rightharpoonup": "\u21C0",
      "\\rightharpoondown": "\u21C1",
      "\\downharpoonright": "\u21C2",
      "\\downharpoonleft": "\u21C3",
      "\\rightleftarrows": "\u21C4",
      "\\dblarrowupdown": "\u21C5",
      "\\leftrightarrows": "\u21C6",
      "\\leftleftarrows": "\u21C7",
      "\\upuparrows": "\u21C8",
      "\\rightrightarrows": "\u21C9",
      "\\downdownarrows": "\u21CA",
      "\\leftrightharpoons": "\u21CB",
      "\\rightleftharpoons": "\u21CC",
      "\\nLeftarrow": "\u21CD",
      "\\nLeftrightarrow": "\u21CE",
      "\\nRightarrow": "\u21CF",
      "\\Leftarrow": "\u21D0",
      "\\Uparrow": "\u21D1",
      "\\Rightarrow": "\u21D2",
      "\\Downarrow": "\u21D3",
      "\\Leftrightarrow": "\u21D4",
      "\\Updownarrow": "\u21D5",
      "\\Nwarrow": "\u21D6",
      "\\Nearrow": "\u21D7",
      "\\Searrow": "\u21D8",
      "\\Swarrow": "\u21D9",
      "\\Lleftarrow": "\u21DA",
      "\\Rrightarrow": "\u21DB",
      "\\leftsquigarrow": "\u21DC",
      "\\rightsquigarrow": "\u21DD",
      "\\nHuparrow": "\u21DE",
      "\\nHdownarrow": "\u21DF",
      "\\dashleftarrow": "\u21E0",
      "\\updasharrow": "\u21E1",
      "\\dashrightarrow": "\u21E2",
      "\\downdasharrow": "\u21E3",
      "\\LeftArrowBar": "\u21E4",
      "\\RightArrowBar": "\u21E5",
      "\\leftwhitearrow": "\u21E6",
      "\\upwhitearrow": "\u21E7",
      "\\rightwhitearrow": "\u21E8",
      "\\downwhitearrow": "\u21E9",
      "\\whitearrowupfrombar": "\u21EA",
      "\\circleonrightarrow": "\u21F4",
      "\\DownArrowUpArrow": "\u21F5",
      "\\rightthreearrows": "\u21F6",
      "\\nvleftarrow": "\u21F7",
      "\\pfun": "\u21F8",
      "\\nvleftrightarrow": "\u21F9",
      "\\nVleftarrow": "\u21FA",
      "\\ffun": "\u21FB",
      "\\nVleftrightarrow": "\u21FC",
      "\\leftarrowtriangle": "\u21FD",
      "\\rightarrowtriangle": "\u21FE",
      "\\leftrightarrowtriangle": "\u21FF",
      "\\forall": "\u2200",
      "\\complement": "\u2201",
      "\\partial": "\u2202",
      "\\exists": "\u2203",
      "\\nexists": "\u2204",
      "\\varnothing": "\u2205",
      "\\increment": "\u2206",
      "\\nabla": "\u2207",
      "\\in": "\u2208",
      "\\not\\in": "\u2209",
      "\\smallin": "\u220A",
      "\\ni": "\u220B",
      "\\not\\ni": "\u220C",
      "\\smallni": "\u220D",
      "\\QED": "\u220E",
      "\\prod": "\u220F",
      "\\coprod": "\u2210",
      "\\sum": "\u2211",
      "\\mp": "\u2213",
      "\\dotplus": "\u2214",
      "\\setminus": "\u2216",
      "{_\\ast}": "\u2217",
      "\\circ": "\u2218",
      "\\bullet": "\u2219",
      "\\surd": "\u221A",
      "\\sqrt[3]": "\u221B",
      "\\sqrt[4]": "\u221C",
      "\\propto": "\u221D",
      "\\infty": "\u221E",
      "\\rightangle": "\u221F",
      "\\angle": "\u2220",
      "\\measuredangle": "\u2221",
      "\\sphericalangle": "\u2222",
      "\\mid": "\u2223",
      "\\nmid": "\u2224",
      "\\parallel": "\u2225",
      "\\nparallel": "\u2226",
      "\\wedge": "\u2227",
      "\\vee": "\u2228",
      "\\cap": "\u2229",
      "\\cup": "\u222A",
      "\\int": "\u222B",
      "{\\int\\!\\int}": "\u222C",
      "{\\int\\!\\int\\!\\int}": "\u222D",
      "\\oint": "\u222E",
      "\\surfintegral": "\u222F",
      "\\volintegral": "\u2230",
      "\\clwintegral": "\u2231",
      "\\lcirclerightint": "\u2232",
      "\\rcirclerightint": "\u2233",
      "\\therefore": "\u2234",
      "\\because": "\u2235",
      "\\Colon": "\u2237",
      "\\dotdiv": "\u2238",
      "\\eqcolon": "\u2239",
      "\\mathbin{{:}\\!\\!{-}\\!\\!{:}}": "\u223A",
      "\\homothetic": "\u223B",
      "\\sim": "\u223C",
      "\\backsim": "\u223D",
      "\\lazysinv": "\u223E",
      "\\AC": "\u223F",
      "\\wr": "\u2240",
      "\\not\\sim": "\u2241",
      "\\texteqsim": "\u2242",
      "\\NotEqualTilde": "\u2242\u0338",
      "\\simeq": "\u2243",
      "\\not\\simeq": "\u2244",
      "\\cong": "\u2245",
      "\\approxnotequal": "\u2246",
      "\\not\\cong": "\u2247",
      "\\approx": "\u2248",
      "\\not\\approx": "\u2249",
      "\\approxeq": "\u224A",
      "\\tildetrpl": "\u224B",
      "\\not\\apid": "\u224B\u0338",
      "\\allequal": "\u224C",
      "\\asymp": "\u224D",
      "\\Bumpeq": "\u224E",
      "\\NotHumpDownHump": "\u224E\u0338",
      "\\bumpeq": "\u224F",
      "\\NotHumpEqual": "\u224F\u0338",
      "\\doteq": "\u2250",
      "\\not\\doteq": "\u2250\u0338",
      "\\doteqdot": "\u2251",
      "\\fallingdotseq": "\u2252",
      "\\risingdotseq": "\u2253",
      "\\coloneq": "\u2254",
      "\\eqcirc": "\u2256",
      "\\circeq": "\u2257",
      "\\arceq": "\u2258",
      "\\estimates": "\u2259",
      "\\starequal": "\u225B",
      "\\triangleq": "\u225C",
      "\\eqdef": "\u225D",
      "\\measeq": "\u225E",
      "\\neq": "\u2260",
      "\\equiv": "\u2261",
      "\\not\\equiv": "\u2262",
      "\\Equiv": "\u2263",
      "\\leq": "\u2264",
      "\\le": "\u2264",
      "\\geq": "\u2265",
      "\\leqq": "\u2266",
      "\\geqq": "\u2267",
      "\\lneqq": "\u2268",
      "\\lvertneqq": "\u2268\uFE00",
      "\\gneqq": "\u2269",
      "\\gvertneqq": "\u2269\uFE00",
      "\\ll": "\u226A",
      "\\NotLessLess": "\u226A\u0338",
      "\\gg": "\u226B",
      "\\NotGreaterGreater": "\u226B\u0338",
      "\\between": "\u226C",
      "{\\not\\kern-0.3em\\times}": "\u226D",
      "\\not<": "\u226E",
      "\\not>": "\u226F",
      "\\not\\leq": "\u2270",
      "\\not\\geq": "\u2271",
      "\\lessequivlnt": "\u2272",
      "\\greaterequivlnt": "\u2273",
      "\\lessgtr": "\u2276",
      "\\gtrless": "\u2277",
      "\\notlessgreater": "\u2278",
      "\\notgreaterless": "\u2279",
      "\\prec": "\u227A",
      "\\succ": "\u227B",
      "\\preccurlyeq": "\u227C",
      "\\succcurlyeq": "\u227D",
      "\\NotPrecedesTilde": "\u227E\u0338",
      "\\NotSucceedsTilde": "\u227F\u0338",
      "\\not\\prec": "\u2280",
      "\\not\\succ": "\u2281",
      "\\subset": "\u2282",
      "\\supset": "\u2283",
      "\\not\\subset": "\u2284",
      "\\not\\supset": "\u2285",
      "\\subseteq": "\u2286",
      "\\supseteq": "\u2287",
      "\\not\\subseteq": "\u2288",
      "\\not\\supseteq": "\u2289",
      "\\subsetneq": "\u228A",
      "\\varsubsetneqq": "\u228A\uFE00",
      "\\supsetneq": "\u228B",
      "\\varsupsetneq": "\u228B\uFE00",
      "\\cupleftarrow": "\u228C",
      "\\cupdot": "\u228D",
      "\\uplus": "\u228E",
      "\\sqsubset": "\u228F",
      "\\NotSquareSubset": "\u228F\u0338",
      "\\sqsupset": "\u2290",
      "\\NotSquareSuperset": "\u2290\u0338",
      "\\sqsubseteq": "\u2291",
      "\\sqsupseteq": "\u2292",
      "\\sqcap": "\u2293",
      "\\sqcup": "\u2294",
      "\\oplus": "\u2295",
      "\\ominus": "\u2296",
      "\\otimes": "\u2297",
      "\\oslash": "\u2298",
      "\\odot": "\u2299",
      "\\circledcirc": "\u229A",
      "\\circledast": "\u229B",
      "\\circledequal": "\u229C",
      "\\circleddash": "\u229D",
      "\\boxplus": "\u229E",
      "\\boxminus": "\u229F",
      "\\boxtimes": "\u22A0",
      "\\boxdot": "\u22A1",
      "\\vdash": "\u22A2",
      "\\dashv": "\u22A3",
      "\\top": "\u22A4",
      "\\assert": "\u22A6",
      "\\truestate": "\u22A7",
      "\\forcesextra": "\u22A8",
      "\\Vdash": "\u22A9",
      "\\Vvdash": "\u22AA",
      "\\VDash": "\u22AB",
      "\\nvdash": "\u22AC",
      "\\nvDash": "\u22AD",
      "\\nVdash": "\u22AE",
      "\\nVDash": "\u22AF",
      "\\prurel": "\u22B0",
      "\\scurel": "\u22B1",
      "\\vartriangleleft": "\u22B2",
      "\\vartriangleright": "\u22B3",
      "\\trianglelefteq": "\u22B4",
      "\\trianglerighteq": "\u22B5",
      "\\original": "\u22B6",
      "\\image": "\u22B7",
      "\\multimap": "\u22B8",
      "\\hermitconjmatrix": "\u22B9",
      "\\intercal": "\u22BA",
      "\\veebar": "\u22BB",
      "\\barvee": "\u22BD",
      "\\rightanglearc": "\u22BE",
      "\\varlrtriangle": "\u22BF",
      "\\bigcap": "\u22C2",
      "\\bigcup": "\u22C3",
      "\\diamond": "\u22C4",
      "\\cdot": "\u22C5",
      "\\star": "\u22C6",
      "\\divideontimes": "\u22C7",
      "\\bowtie": "\u22C8",
      "\\ltimes": "\u22C9",
      "\\rtimes": "\u22CA",
      "\\leftthreetimes": "\u22CB",
      "\\rightthreetimes": "\u22CC",
      "\\backsimeq": "\u22CD",
      "\\curlyvee": "\u22CE",
      "\\curlywedge": "\u22CF",
      "\\Subset": "\u22D0",
      "\\Supset": "\u22D1",
      "\\Cap": "\u22D2",
      "\\Cup": "\u22D3",
      "\\pitchfork": "\u22D4",
      "\\hash": "\u22D5",
      "\\lessdot": "\u22D6",
      "\\gtrdot": "\u22D7",
      "\\verymuchless": "\u22D8",
      "\\verymuchgreater": "\u22D9",
      "\\lesseqgtr": "\u22DA",
      "\\gtreqless": "\u22DB",
      "\\eqless": "\u22DC",
      "\\eqgtr": "\u22DD",
      "\\curlyeqprec": "\u22DE",
      "\\curlyeqsucc": "\u22DF",
      "\\npreceq": "\u22E0",
      "\\nsucceq": "\u22E1",
      "\\not\\sqsubseteq": "\u22E2",
      "\\not\\sqsupseteq": "\u22E3",
      "\\sqsubsetneq": "\u22E4",
      "\\Elzsqspne": "\u22E5",
      "\\lnsim": "\u22E6",
      "\\gnsim": "\u22E7",
      "\\precedesnotsimilar": "\u22E8",
      "\\succnsim": "\u22E9",
      "\\ntriangleleft": "\u22EA",
      "\\ntriangleright": "\u22EB",
      "\\ntrianglelefteq": "\u22EC",
      "\\ntrianglerighteq": "\u22ED",
      "\\vdots": "\u22EE",
      "\\cdots": "\u22EF",
      "\\upslopeellipsis": "\u22F0",
      "\\downslopeellipsis": "\u22F1",
      "\\disin": "\u22F2",
      "\\varisins": "\u22F3",
      "\\isins": "\u22F4",
      "\\isindot": "\u22F5",
      "\\barin": "\u22F6",
      "\\isinobar": "\u22F7",
      "\\isinvb": "\u22F8",
      "\\isinE": "\u22F9",
      "\\nisd": "\u22FA",
      "\\varnis": "\u22FB",
      "\\nis": "\u22FC",
      "\\varniobar": "\u22FD",
      "\\niobar": "\u22FE",
      "\\bagmember": "\u22FF",
      "\\diameter": "\u2300",
      "\\house": "\u2302",
      "\\barwedge": "\u2305",
      "\\varbarwedge": "\u2305",
      "\\perspcorrespond": "\u2306",
      "\\lceil": "\u2308",
      "\\rceil": "\u2309",
      "\\lfloor": "\u230A",
      "\\rfloor": "\u230B",
      "\\invneg": "\u2310",
      "\\wasylozenge": "\u2311",
      "\\profline": "\u2312",
      "\\profsurf": "\u2313",
      "\\recorder": "\u2315",
      '{\\mathchar"2208}': "\u2316",
      "\\viewdata": "\u2317",
      "\\turnednot": "\u2319",
      "\\ulcorner": "\u231C",
      "\\urcorner": "\u231D",
      "\\llcorner": "\u231E",
      "\\lrcorner": "\u231F",
      "\\inttop": "\u2320",
      "\\intbottom": "\u2321",
      "\\frown": "\u2322",
      "\\smile": "\u2323",
      "\\varhexagonlrbonds": "\u232C",
      "\\conictaper": "\u2332",
      "\\topbot": "\u2336",
      "\\APLinv": "\u2339",
      "\\notslash": "\u233F",
      "\\notbackslash": "\u2340",
      "\\APLleftarrowbox": "\u2347",
      "\\APLrightarrowbox": "\u2348",
      "\\invdiameter": "\u2349",
      "\\APLuparrowbox": "\u2350",
      "\\APLboxupcaret": "\u2353",
      "\\APLdownarrowbox": "\u2357",
      "\\APLcomment": "\u235D",
      "\\APLinput": "\u235E",
      "\\APLlog": "\u235F",
      "\\APLboxquestion": "\u2370",
      "\\rangledownzigzagarrow": "\u237C",
      "\\hexagon": "\u2394",
      "\\lparenuend": "\u239B",
      "\\lparenextender": "\u239C",
      "\\lparenlend": "\u239D",
      "\\rparenuend": "\u239E",
      "\\rparenextender": "\u239F",
      "\\rparenlend": "\u23A0",
      "\\lbrackuend": "\u23A1",
      "\\lbrackextender": "\u23A2",
      "\\Elzdlcorn": "\u23A3",
      "\\rbrackuend": "\u23A4",
      "\\rbrackextender": "\u23A5",
      "\\rbracklend": "\u23A6",
      "\\lbraceuend": "\u23A7",
      "\\lbracemid": "\u23A8",
      "\\lbracelend": "\u23A9",
      "\\vbraceextender": "\u23AA",
      "\\rbraceuend": "\u23AB",
      "\\rbracemid": "\u23AC",
      "\\rbracelend": "\u23AD",
      "\\intextender": "\u23AE",
      "\\harrowextender": "\u23AF",
      "\\lmoustache": "\u23B0",
      "\\rmoustache": "\u23B1",
      "\\sumtop": "\u23B2",
      "\\sumbottom": "\u23B3",
      "\\overbracket": "\u23B4",
      "\\underbracket": "\u23B5",
      "\\bbrktbrk": "\u23B6",
      "\\sqrtbottom": "\u23B7",
      "\\lvboxline": "\u23B8",
      "\\rvboxline": "\u23B9",
      "\\varcarriagereturn": "\u23CE",
      "\\overparen": "\u23DC",
      "\\underparen": "\u23DD",
      "\\overbrace": "\u23DE",
      "\\underbrace": "\u23DF",
      "\\obrbrak": "\u23E0",
      "\\ubrbrak": "\u23E1",
      "\\trapezium": "\u23E2",
      "\\benzenr": "\u23E3",
      "\\strns": "\u23E4",
      "\\fltns": "\u23E5",
      "\\accurrent": "\u23E6",
      "\\elinters": "\u23E7",
      "\\ding{172}": "\u2460",
      "\\ding{173}": "\u2461",
      "\\ding{174}": "\u2462",
      "\\ding{175}": "\u2463",
      "\\ding{176}": "\u2464",
      "\\ding{177}": "\u2465",
      "\\ding{178}": "\u2466",
      "\\ding{179}": "\u2467",
      "\\ding{180}": "\u2468",
      "\\ding{181}": "\u2469",
      "\\circledS": "\u24C8",
      "\\Elzdshfnc": "\u2506",
      "\\Elzsqfnw": "\u2519",
      "\\diagup": "\u2571",
      "\\blockuphalf": "\u2580",
      "\\blocklowhalf": "\u2584",
      "\\blockfull": "\u2588",
      "\\blocklefthalf": "\u258C",
      "\\blockrighthalf": "\u2590",
      "\\blockqtrshaded": "\u2591",
      "\\blockhalfshaded": "\u2592",
      "\\blockthreeqtrshaded": "\u2593",
      "\\ding{110}": "\u25A0",
      "\\mdlgblksquare": "\u25A0",
      "\\square": "\u25A1",
      "\\Box": "\u25A1",
      "\\squoval": "\u25A2",
      "\\blackinwhitesquare": "\u25A3",
      "\\squarehfill": "\u25A4",
      "\\squarevfill": "\u25A5",
      "\\squarehvfill": "\u25A6",
      "\\squarenwsefill": "\u25A7",
      "\\squareneswfill": "\u25A8",
      "\\squarecrossfill": "\u25A9",
      "\\smwhtsquare": "\u25AB",
      "\\hrectangleblack": "\u25AC",
      "\\fbox{~~}": "\u25AD",
      "\\vrectangleblack": "\u25AE",
      "\\Elzvrecto": "\u25AF",
      "\\parallelogramblack": "\u25B0",
      "\\ding{115}": "\u25B2",
      "\\bigblacktriangleup": "\u25B2",
      "\\bigtriangleup": "\u25B3",
      "\\blacktriangle": "\u25B4",
      "\\vartriangle": "\u25B5",
      "\\RHD": "\u25B6",
      "\\rhd": "\u25B7",
      "\\blacktriangleright": "\u25B8",
      "\\triangleright": "\u25B9",
      "\\blackpointerright": "\u25BA",
      "\\whitepointerright": "\u25BB",
      "\\ding{116}": "\u25BC",
      "\\bigblacktriangledown": "\u25BC",
      "\\bigtriangledown": "\u25BD",
      "\\blacktriangledown": "\u25BE",
      "\\triangledown": "\u25BF",
      "\\LHD": "\u25C0",
      "\\lhd": "\u25C1",
      "\\blacktriangleleft": "\u25C2",
      "\\triangleleft": "\u25C3",
      "\\blackpointerleft": "\u25C4",
      "\\whitepointerleft": "\u25C5",
      "\\ding{117}": "\u25C6",
      "\\Diamondblack": "\u25C6",
      "\\Diamond": "\u25C7",
      "\\blackinwhitediamond": "\u25C8",
      "\\fisheye": "\u25C9",
      "\\lozenge": "\u25CA",
      "\\dottedcircle": "\u25CC",
      "\\circlevertfill": "\u25CD",
      "\\bullseye": "\u25CE",
      "\\ding{108}": "\u25CF",
      "\\CIRCLE": "\u25CF",
      "\\Elzcirfl": "\u25D0",
      "\\Elzcirfr": "\u25D1",
      "\\Elzcirfb": "\u25D2",
      "\\circletophalfblack": "\u25D3",
      "\\circleurquadblack": "\u25D4",
      "\\blackcircleulquadwhite": "\u25D5",
      "\\LEFTCIRCLE": "\u25D6",
      "\\ding{119}": "\u25D7",
      "\\RIGHTCIRCLE": "\u25D7",
      "\\Elzrvbull": "\u25D8",
      "\\inversewhitecircle": "\u25D9",
      "\\invwhiteupperhalfcircle": "\u25DA",
      "\\invwhitelowerhalfcircle": "\u25DB",
      "\\ularc": "\u25DC",
      "\\urarc": "\u25DD",
      "\\lrarc": "\u25DE",
      "\\llarc": "\u25DF",
      "\\topsemicircle": "\u25E0",
      "\\botsemicircle": "\u25E1",
      "\\lrblacktriangle": "\u25E2",
      "\\llblacktriangle": "\u25E3",
      "\\ulblacktriangle": "\u25E4",
      "\\urblacktriangle": "\u25E5",
      "\\smwhtcircle": "\u25E6",
      "\\Elzsqfl": "\u25E7",
      "\\Elzsqfr": "\u25E8",
      "\\squareulblack": "\u25E9",
      "\\Elzsqfse": "\u25EA",
      "\\boxbar": "\u25EB",
      "\\trianglecdot": "\u25EC",
      "\\triangleleftblack": "\u25ED",
      "\\trianglerightblack": "\u25EE",
      "\\bigcirc": "\u25EF",
      "\\squareulquad": "\u25F0",
      "\\squarellquad": "\u25F1",
      "\\squarelrquad": "\u25F2",
      "\\squareurquad": "\u25F3",
      "\\circleulquad": "\u25F4",
      "\\circlellquad": "\u25F5",
      "\\circlelrquad": "\u25F6",
      "\\circleurquad": "\u25F7",
      "\\ultriangle": "\u25F8",
      "\\urtriangle": "\u25F9",
      "\\lltriangle": "\u25FA",
      "\\mdsmwhtsquare": "\u25FD",
      "\\mdsmblksquare": "\u25FE",
      "\\lrtriangle": "\u25FF",
      "\\ding{72}": "\u2605",
      "\\bigstar": "\u2605",
      "\\ding{73}": "\u2606",
      "\\bigwhitestar": "\u2606",
      "\\Sun": "\u2609",
      "\\ding{37}": "\u260E",
      "\\Square": "\u2610",
      "\\CheckedBox": "\u2611",
      "\\XBox": "\u2612",
      "\\steaming": "\u2615",
      "\\ding{42}": "\u261B",
      "\\ding{43}": "\u261E",
      "\\pointright": "\u261E",
      "\\skull": "\u2620",
      "\\danger": "\u2621",
      "\\radiation": "\u2622",
      "\\biohazard": "\u2623",
      "\\yinyang": "\u262F",
      "\\frownie": "\u2639",
      "\\smiley": "\u263A",
      "\\blacksmiley": "\u263B",
      "\\sun": "\u263C",
      "\\rightmoon": "\u263D",
      "\\leftmoon": "\u263E",
      "\\mercury": "\u263F",
      "\\venus": "\u2640",
      "\\female": "\u2640",
      "\\earth": "\u2641",
      "\\male": "\u2642",
      "\\jupiter": "\u2643",
      "\\saturn": "\u2644",
      "\\uranus": "\u2645",
      "\\neptune": "\u2646",
      "\\pluto": "\u2647",
      "\\aries": "\u2648",
      "\\taurus": "\u2649",
      "\\gemini": "\u264A",
      "\\cancer": "\u264B",
      "\\leo": "\u264C",
      "\\virgo": "\u264D",
      "\\libra": "\u264E",
      "\\scorpio": "\u264F",
      "\\sagittarius": "\u2650",
      "\\capricornus": "\u2651",
      "\\aquarius": "\u2652",
      "\\pisces": "\u2653",
      "\\ding{171}": "\u2660",
      "\\spadesuit": "\u2660",
      "\\heartsuit": "\u2661",
      "\\ding{168}": "\u2663",
      "\\clubsuit": "\u2663",
      "\\varspadesuit": "\u2664",
      "\\ding{170}": "\u2665",
      "\\varheartsuit": "\u2665",
      "\\ding{169}": "\u2666",
      "\\vardiamondsuit": "\u2666",
      "\\varclubsuit": "\u2667",
      "\\quarternote": "\u2669",
      "\\eighthnote": "\u266A",
      "\\twonotes": "\u266B",
      "\\sixteenthnote": "\u266C",
      "\\flat": "\u266D",
      "\\natural": "\u266E",
      "\\sharp": "\u266F",
      "\\recycle": "\u267B",
      "\\acidfree": "\u267E",
      "\\dicei": "\u2680",
      "\\diceii": "\u2681",
      "\\diceiii": "\u2682",
      "\\diceiv": "\u2683",
      "\\dicev": "\u2684",
      "\\dicevi": "\u2685",
      "\\circledrightdot": "\u2686",
      "\\circledtwodots": "\u2687",
      "\\blackcircledrightdot": "\u2688",
      "\\blackcircledtwodots": "\u2689",
      "\\anchor": "\u2693",
      "\\swords": "\u2694",
      "\\warning": "\u26A0",
      "\\Hermaphrodite": "\u26A5",
      "\\medcirc": "\u26AA",
      "\\medbullet": "\u26AB",
      "\\mdsmwhtcircle": "\u26AC",
      "\\neuter": "\u26B2",
      "\\ding{33}": "\u2701",
      "\\ding{34}": "\u2702",
      "\\ding{35}": "\u2703",
      "\\ding{36}": "\u2704",
      "\\ding{38}": "\u2706",
      "\\ding{39}": "\u2707",
      "\\ding{40}": "\u2708",
      "\\ding{41}": "\u2709",
      "\\ding{44}": "\u270C",
      "\\ding{45}": "\u270D",
      "\\ding{46}": "\u270E",
      "\\pencil": "\u270E",
      "\\ding{47}": "\u270F",
      "\\ding{48}": "\u2710",
      "\\ding{49}": "\u2711",
      "\\ding{50}": "\u2712",
      "\\ding{51}": "\u2713",
      "\\checkmark": "\u2713",
      "\\ding{52}": "\u2714",
      "\\ding{53}": "\u2715",
      "\\ding{54}": "\u2716",
      "\\ding{55}": "\u2717",
      "\\ballotx": "\u2717",
      "\\ding{56}": "\u2718",
      "\\ding{57}": "\u2719",
      "\\ding{58}": "\u271A",
      "\\ding{59}": "\u271B",
      "\\ding{60}": "\u271C",
      "\\ding{61}": "\u271D",
      "\\ding{62}": "\u271E",
      "\\ding{63}": "\u271F",
      "\\ding{64}": "\u2720",
      "\\maltese": "\u2720",
      "\\ding{65}": "\u2721",
      "\\ding{66}": "\u2722",
      "\\ding{67}": "\u2723",
      "\\ding{68}": "\u2724",
      "\\ding{69}": "\u2725",
      "\\ding{70}": "\u2726",
      "\\ding{71}": "\u2727",
      "\\ding{74}": "\u272A",
      "\\circledstar": "\u272A",
      "\\ding{75}": "\u272B",
      "\\ding{76}": "\u272C",
      "\\ding{77}": "\u272D",
      "\\ding{78}": "\u272E",
      "\\ding{79}": "\u272F",
      "\\ding{80}": "\u2730",
      "\\ding{81}": "\u2731",
      "\\ding{82}": "\u2732",
      "\\ding{83}": "\u2733",
      "\\ding{84}": "\u2734",
      "\\ding{85}": "\u2735",
      "\\ding{86}": "\u2736",
      "\\varstar": "\u2736",
      "\\ding{87}": "\u2737",
      "\\ding{88}": "\u2738",
      "\\ding{89}": "\u2739",
      "\\ding{90}": "\u273A",
      "\\ding{91}": "\u273B",
      "\\ding{92}": "\u273C",
      "\\ding{93}": "\u273D",
      "\\dingasterisk": "\u273D",
      "\\ding{94}": "\u273E",
      "\\ding{95}": "\u273F",
      "\\ding{96}": "\u2740",
      "\\ding{97}": "\u2741",
      "\\ding{98}": "\u2742",
      "\\ding{99}": "\u2743",
      "\\ding{100}": "\u2744",
      "\\ding{101}": "\u2745",
      "\\ding{102}": "\u2746",
      "\\ding{103}": "\u2747",
      "\\ding{104}": "\u2748",
      "\\ding{105}": "\u2749",
      "\\ding{106}": "\u274A",
      "\\ding{107}": "\u274B",
      "\\ding{109}": "\u274D",
      "\\ding{111}": "\u274F",
      "\\ding{112}": "\u2750",
      "\\ding{113}": "\u2751",
      "\\ding{114}": "\u2752",
      "\\ding{118}": "\u2756",
      "\\ding{120}": "\u2758",
      "\\ding{121}": "\u2759",
      "\\ding{122}": "\u275A",
      "\\ding{123}": "\u275B",
      "\\ding{124}": "\u275C",
      "\\ding{125}": "\u275D",
      "\\ding{126}": "\u275E",
      "\\ding{161}": "\u2761",
      "\\ding{162}": "\u2762",
      "\\ding{163}": "\u2763",
      "\\ding{164}": "\u2764",
      "\\ding{165}": "\u2765",
      "\\ding{166}": "\u2766",
      "\\ding{167}": "\u2767",
      "\\ding{182}": "\u2776",
      "\\ding{183}": "\u2777",
      "\\ding{184}": "\u2778",
      "\\ding{185}": "\u2779",
      "\\ding{186}": "\u277A",
      "\\ding{187}": "\u277B",
      "\\ding{188}": "\u277C",
      "\\ding{189}": "\u277D",
      "\\ding{190}": "\u277E",
      "\\ding{191}": "\u277F",
      "\\ding{192}": "\u2780",
      "\\ding{193}": "\u2781",
      "\\ding{194}": "\u2782",
      "\\ding{195}": "\u2783",
      "\\ding{196}": "\u2784",
      "\\ding{197}": "\u2785",
      "\\ding{198}": "\u2786",
      "\\ding{199}": "\u2787",
      "\\ding{200}": "\u2788",
      "\\ding{201}": "\u2789",
      "\\ding{202}": "\u278A",
      "\\ding{203}": "\u278B",
      "\\ding{204}": "\u278C",
      "\\ding{205}": "\u278D",
      "\\ding{206}": "\u278E",
      "\\ding{207}": "\u278F",
      "\\ding{208}": "\u2790",
      "\\ding{209}": "\u2791",
      "\\ding{210}": "\u2792",
      "\\ding{211}": "\u2793",
      "\\ding{212}": "\u2794",
      "\\ding{216}": "\u2798",
      "\\ding{217}": "\u2799",
      "\\ding{218}": "\u279A",
      "\\ding{219}": "\u279B",
      "\\draftingarrow": "\u279B",
      "\\ding{220}": "\u279C",
      "\\ding{221}": "\u279D",
      "\\ding{222}": "\u279E",
      "\\ding{223}": "\u279F",
      "\\ding{224}": "\u27A0",
      "\\ding{225}": "\u27A1",
      "\\ding{226}": "\u27A2",
      "\\arrowbullet": "\u27A2",
      "\\ding{227}": "\u27A3",
      "\\ding{228}": "\u27A4",
      "\\ding{229}": "\u27A5",
      "\\ding{230}": "\u27A6",
      "\\ding{231}": "\u27A7",
      "\\ding{232}": "\u27A8",
      "\\ding{233}": "\u27A9",
      "\\ding{234}": "\u27AA",
      "\\ding{235}": "\u27AB",
      "\\ding{236}": "\u27AC",
      "\\ding{237}": "\u27AD",
      "\\ding{238}": "\u27AE",
      "\\ding{239}": "\u27AF",
      "\\ding{241}": "\u27B1",
      "\\ding{242}": "\u27B2",
      "\\ding{243}": "\u27B3",
      "\\ding{244}": "\u27B4",
      "\\ding{245}": "\u27B5",
      "\\ding{246}": "\u27B6",
      "\\ding{247}": "\u27B7",
      "\\ding{248}": "\u27B8",
      "\\ding{249}": "\u27B9",
      "\\ding{250}": "\u27BA",
      "\\ding{251}": "\u27BB",
      "\\ding{252}": "\u27BC",
      "\\ding{253}": "\u27BD",
      "\\ding{254}": "\u27BE",
      "\\threedangle": "\u27C0",
      "\\whiteinwhitetriangle": "\u27C1",
      "\\perp": "\u27C2",
      "\\subsetcirc": "\u27C3",
      "\\supsetcirc": "\u27C4",
      "\\Lbag": "\u27C5",
      "\\Rbag": "\u27C6",
      "\\veedot": "\u27C7",
      "\\bsolhsub": "\u27C8",
      "\\suphsol": "\u27C9",
      "\\longdivision": "\u27CC",
      "\\Diamonddot": "\u27D0",
      "\\wedgedot": "\u27D1",
      "\\upin": "\u27D2",
      "\\pullback": "\u27D3",
      "\\pushout": "\u27D4",
      "\\leftouterjoin": "\u27D5",
      "\\rightouterjoin": "\u27D6",
      "\\fullouterjoin": "\u27D7",
      "\\bigbot": "\u27D8",
      "\\bigtop": "\u27D9",
      "\\DashVDash": "\u27DA",
      "\\dashVdash": "\u27DB",
      "\\multimapinv": "\u27DC",
      "\\vlongdash": "\u27DD",
      "\\longdashv": "\u27DE",
      "\\cirbot": "\u27DF",
      "\\lozengeminus": "\u27E0",
      "\\concavediamond": "\u27E1",
      "\\concavediamondtickleft": "\u27E2",
      "\\concavediamondtickright": "\u27E3",
      "\\whitesquaretickleft": "\u27E4",
      "\\whitesquaretickright": "\u27E5",
      "\\llbracket": "\u27E6",
      "\\rrbracket": "\u27E7",
      "\\langle": "\u27E8",
      "\\rangle": "\u27E9",
      "\\lang": "\u27EA",
      "\\rang": "\u27EB",
      "\\Lbrbrak": "\u27EC",
      "\\Rbrbrak": "\u27ED",
      "\\lgroup": "\u27EE",
      "\\rgroup": "\u27EF",
      "\\UUparrow": "\u27F0",
      "\\DDownarrow": "\u27F1",
      "\\acwgapcirclearrow": "\u27F2",
      "\\cwgapcirclearrow": "\u27F3",
      "\\rightarrowonoplus": "\u27F4",
      "\\longleftarrow": "\u27F5",
      "\\longrightarrow": "\u27F6",
      "\\longleftrightarrow": "\u27F7",
      "\\Longleftarrow": "\u27F8",
      "\\Longrightarrow": "\u27F9",
      "\\Longleftrightarrow": "\u27FA",
      "\\longmapsfrom": "\u27FB",
      "\\longmapsto": "\u27FC",
      "\\Longmapsfrom": "\u27FD",
      "\\Longmapsto": "\u27FE",
      "\\sim\\joinrel\\leadsto": "\u27FF",
      "\\psur": "\u2900",
      "\\nVtwoheadrightarrow": "\u2901",
      "\\nvLeftarrow": "\u2902",
      "\\nvRightarrow": "\u2903",
      "\\nvLeftrightarrow": "\u2904",
      "\\Mapsfrom": "\u2906",
      "\\Mapsto": "\u2907",
      "\\downarrowbarred": "\u2908",
      "\\uparrowbarred": "\u2909",
      "\\Uuparrow": "\u290A",
      "\\Ddownarrow": "\u290B",
      "\\leftbkarrow": "\u290C",
      "\\rightbkarrow": "\u290D",
      "\\leftdbkarrow": "\u290E",
      "\\dbkarow": "\u290F",
      "\\drbkarow": "\u2910",
      "\\rightdotarrow": "\u2911",
      "\\UpArrowBar": "\u2912",
      "\\DownArrowBar": "\u2913",
      "\\pinj": "\u2914",
      "\\finj": "\u2915",
      "\\bij": "\u2916",
      "\\nvtwoheadrightarrowtail": "\u2917",
      "\\nVtwoheadrightarrowtail": "\u2918",
      "\\lefttail": "\u2919",
      "\\righttail": "\u291A",
      "\\leftdbltail": "\u291B",
      "\\rightdbltail": "\u291C",
      "\\diamondleftarrow": "\u291D",
      "\\rightarrowdiamond": "\u291E",
      "\\diamondleftarrowbar": "\u291F",
      "\\barrightarrowdiamond": "\u2920",
      "\\nwsearrow": "\u2921",
      "\\neswarrow": "\u2922",
      "\\rdiagovfdiag": "\u292B",
      "\\fdiagovrdiag": "\u292C",
      "\\seovnearrow": "\u292D",
      "\\neovsearrow": "\u292E",
      "\\fdiagovnearrow": "\u292F",
      "\\rdiagovsearrow": "\u2930",
      "\\neovnwarrow": "\u2931",
      "\\nwovnearrow": "\u2932",
      "\\uprightcurvearrow": "\u2934",
      "\\downrightcurvedarrow": "\u2935",
      "\\cwrightarcarrow": "\u2938",
      "\\acwleftarcarrow": "\u2939",
      "\\acwoverarcarrow": "\u293A",
      "\\acwunderarcarrow": "\u293B",
      "\\curvearrowrightminus": "\u293C",
      "\\curvearrowleftplus": "\u293D",
      "\\cwundercurvearrow": "\u293E",
      "\\ccwundercurvearrow": "\u293F",
      "\\Elolarr": "\u2940",
      "\\Elorarr": "\u2941",
      "\\ElzRlarr": "\u2942",
      "\\leftarrowshortrightarrow": "\u2943",
      "\\ElzrLarr": "\u2944",
      "\\rightarrowplus": "\u2945",
      "\\leftarrowplus": "\u2946",
      "\\Elzrarrx": "\u2947",
      "\\leftrightarrowcircle": "\u2948",
      "\\twoheaduparrowcircle": "\u2949",
      "\\leftrightharpoon": "\u294A",
      "\\rightleftharpoon": "\u294B",
      "\\updownharpoonrightleft": "\u294C",
      "\\updownharpoonleftright": "\u294D",
      "\\LeftRightVector": "\u294E",
      "\\RightUpDownVector": "\u294F",
      "\\DownLeftRightVector": "\u2950",
      "\\LeftUpDownVector": "\u2951",
      "\\LeftVectorBar": "\u2952",
      "\\RightVectorBar": "\u2953",
      "\\RightUpVectorBar": "\u2954",
      "\\RightDownVectorBar": "\u2955",
      "\\DownLeftVectorBar": "\u2956",
      "\\DownRightVectorBar": "\u2957",
      "\\LeftUpVectorBar": "\u2958",
      "\\LeftDownVectorBar": "\u2959",
      "\\LeftTeeVector": "\u295A",
      "\\RightTeeVector": "\u295B",
      "\\RightUpTeeVector": "\u295C",
      "\\RightDownTeeVector": "\u295D",
      "\\DownLeftTeeVector": "\u295E",
      "\\DownRightTeeVector": "\u295F",
      "\\LeftUpTeeVector": "\u2960",
      "\\LeftDownTeeVector": "\u2961",
      "\\leftleftharpoons": "\u2962",
      "\\upupharpoons": "\u2963",
      "\\rightrightharpoons": "\u2964",
      "\\downdownharpoons": "\u2965",
      "\\leftrightharpoonsup": "\u2966",
      "\\leftrightharpoonsdown": "\u2967",
      "\\rightleftharpoonsup": "\u2968",
      "\\rightleftharpoonsdown": "\u2969",
      "\\leftbarharpoon": "\u296A",
      "\\barleftharpoon": "\u296B",
      "\\rightbarharpoon": "\u296C",
      "\\barrightharpoon": "\u296D",
      "\\UpEquilibrium": "\u296E",
      "\\ReverseUpEquilibrium": "\u296F",
      "\\RoundImplies": "\u2970",
      "\\equalrightarrow": "\u2971",
      "\\similarrightarrow": "\u2972",
      "\\leftarrowsimilar": "\u2973",
      "\\rightarrowsimilar": "\u2974",
      "\\rightarrowapprox": "\u2975",
      "\\ltlarr": "\u2976",
      "\\leftarrowless": "\u2977",
      "\\gtrarr": "\u2978",
      "\\subrarr": "\u2979",
      "\\leftarrowsubset": "\u297A",
      "\\suplarr": "\u297B",
      "\\upfishtail": "\u297E",
      "\\downfishtail": "\u297F",
      "\\Elztfnc": "\u2980",
      "\\spot": "\u2981",
      "\\typecolon": "\u2982",
      "\\lBrace": "\u2983",
      "\\rBrace": "\u2984",
      "\\Elroang": "\u2986",
      "\\limg": "\u2987",
      "\\rimg": "\u2988",
      "\\lblot": "\u2989",
      "\\rblot": "\u298A",
      "\\lbrackubar": "\u298B",
      "\\rbrackubar": "\u298C",
      "\\lbrackultick": "\u298D",
      "\\rbracklrtick": "\u298E",
      "\\lbracklltick": "\u298F",
      "\\rbrackurtick": "\u2990",
      "\\langledot": "\u2991",
      "\\rangledot": "\u2992",
      "<\\kern-0.58em(": "\u2993",
      "\\Lparengtr": "\u2995",
      "\\Rparenless": "\u2996",
      "\\lblkbrbrak": "\u2997",
      "\\rblkbrbrak": "\u2998",
      "\\Elzddfnc": "\u2999",
      "\\vzigzag": "\u299A",
      "\\measuredangleleft": "\u299B",
      "\\Angle": "\u299C",
      "\\rightanglemdot": "\u299D",
      "\\angles": "\u299E",
      "\\angdnr": "\u299F",
      "\\Elzlpargt": "\u29A0",
      "\\sphericalangleup": "\u29A1",
      "\\turnangle": "\u29A2",
      "\\revangle": "\u29A3",
      "\\angleubar": "\u29A4",
      "\\revangleubar": "\u29A5",
      "\\wideangledown": "\u29A6",
      "\\wideangleup": "\u29A7",
      "\\measanglerutone": "\u29A8",
      "\\measanglelutonw": "\u29A9",
      "\\measanglerdtose": "\u29AA",
      "\\measangleldtosw": "\u29AB",
      "\\measangleurtone": "\u29AC",
      "\\measangleultonw": "\u29AD",
      "\\measangledrtose": "\u29AE",
      "\\measangledltosw": "\u29AF",
      "\\revemptyset": "\u29B0",
      "\\emptysetobar": "\u29B1",
      "\\emptysetocirc": "\u29B2",
      "\\emptysetoarr": "\u29B3",
      "\\emptysetoarrl": "\u29B4",
      "\\circledparallel": "\u29B7",
      "\\circledbslash": "\u29B8",
      "\\operp": "\u29B9",
      "\\obot": "\u29BA",
      "\\olcross": "\u29BB",
      "\\odotslashdot": "\u29BC",
      "\\uparrowoncircle": "\u29BD",
      "\\circledwhitebullet": "\u29BE",
      "\\circledbullet": "\u29BF",
      "\\circledless": "\u29C0",
      "\\circledgtr": "\u29C1",
      "\\cirscir": "\u29C2",
      "\\cirE": "\u29C3",
      "\\boxslash": "\u29C4",
      "\\boxbslash": "\u29C5",
      "\\boxast": "\u29C6",
      "\\boxcircle": "\u29C7",
      "\\boxbox": "\u29C8",
      "\\boxonbox": "\u29C9",
      "\\ElzLap": "\u29CA",
      "\\Elzdefas": "\u29CB",
      "\\triangles": "\u29CC",
      "\\triangleserifs": "\u29CD",
      "\\rtriltri": "\u29CE",
      "\\LeftTriangleBar": "\u29CF",
      "\\NotLeftTriangleBar": "\u29CF\u0338",
      "\\RightTriangleBar": "\u29D0",
      "\\NotRightTriangleBar": "\u29D0\u0338",
      "\\lfbowtie": "\u29D1",
      "\\rfbowtie": "\u29D2",
      "\\fbowtie": "\u29D3",
      "\\lftimes": "\u29D4",
      "\\rftimes": "\u29D5",
      "\\hourglass": "\u29D6",
      "\\blackhourglass": "\u29D7",
      "\\lvzigzag": "\u29D8",
      "\\rvzigzag": "\u29D9",
      "\\Lvzigzag": "\u29DA",
      "\\Rvzigzag": "\u29DB",
      "\\tieinfty": "\u29DD",
      "\\nvinfty": "\u29DE",
      "\\multimapboth": "\u29DF",
      "\\laplac": "\u29E0",
      "\\lrtriangleeq": "\u29E1",
      "\\shuffle": "\u29E2",
      "\\eparsl": "\u29E3",
      "\\smeparsl": "\u29E4",
      "\\eqvparsl": "\u29E5",
      "\\gleichstark": "\u29E6",
      "\\thermod": "\u29E7",
      "\\downtriangleleftblack": "\u29E8",
      "\\downtrianglerightblack": "\u29E9",
      "\\blackdiamonddownarrow": "\u29EA",
      "\\blacklozenge": "\u29EB",
      "\\circledownarrow": "\u29EC",
      "\\blackcircledownarrow": "\u29ED",
      "\\errbarsquare": "\u29EE",
      "\\errbarblacksquare": "\u29EF",
      "\\errbardiamond": "\u29F0",
      "\\errbarblackdiamond": "\u29F1",
      "\\errbarcircle": "\u29F2",
      "\\errbarblackcircle": "\u29F3",
      "\\RuleDelayed": "\u29F4",
      "\\dsol": "\u29F6",
      "\\rsolbar": "\u29F7",
      "\\xsol": "\u29F8",
      "\\zhide": "\u29F9",
      "\\doubleplus": "\u29FA",
      "\\tripleplus": "\u29FB",
      "\\lcurvyangle": "\u29FC",
      "\\rcurvyangle": "\u29FD",
      "\\tplus": "\u29FE",
      "\\tminus": "\u29FF",
      "\\bigodot": "\u2A00",
      "\\bigoplus": "\u2A01",
      "\\bigotimes": "\u2A02",
      "\\bigcupdot": "\u2A03",
      "\\Elxuplus": "\u2A04",
      "\\ElzThr": "\u2A05",
      "\\Elxsqcup": "\u2A06",
      "\\ElzInf": "\u2A07",
      "\\ElzSup": "\u2A08",
      "\\varprod": "\u2A09",
      "\\modtwosum": "\u2A0A",
      "\\sumint": "\u2A0B",
      "\\iiiint": "\u2A0C",
      "\\ElzCint": "\u2A0D",
      "\\intBar": "\u2A0E",
      "\\clockoint": "\u2A0F",
      "\\awint": "\u2A11",
      "\\rppolint": "\u2A12",
      "\\scpolint": "\u2A13",
      "\\npolint": "\u2A14",
      "\\pointint": "\u2A15",
      "\\sqrint": "\u2A16",
      "\\intlarhk": "\u2A17",
      "\\intx": "\u2A18",
      "\\intcap": "\u2A19",
      "\\intcup": "\u2A1A",
      "\\upint": "\u2A1B",
      "\\lowint": "\u2A1C",
      "\\Join": "\u2A1D",
      "\\bigtriangleleft": "\u2A1E",
      "\\zcmp": "\u2A1F",
      "\\zpipe": "\u2A20",
      "\\zproject": "\u2A21",
      "\\ringplus": "\u2A22",
      "\\plushat": "\u2A23",
      "\\simplus": "\u2A24",
      "\\plussim": "\u2A26",
      "\\plussubtwo": "\u2A27",
      "\\plustrif": "\u2A28",
      "\\commaminus": "\u2A29",
      "\\minusfdots": "\u2A2B",
      "\\minusrdots": "\u2A2C",
      "\\ElzTimes": "\u2A2F",
      "\\dottimes": "\u2A30",
      "\\timesbar": "\u2A31",
      "\\btimes": "\u2A32",
      "\\smashtimes": "\u2A33",
      "\\otimeshat": "\u2A36",
      "\\Otimes": "\u2A37",
      "\\odiv": "\u2A38",
      "\\triangleplus": "\u2A39",
      "\\triangleminus": "\u2A3A",
      "\\triangletimes": "\u2A3B",
      "\\intprodr": "\u2A3D",
      "\\fcmp": "\u2A3E",
      "\\amalg": "\u2A3F",
      "\\capdot": "\u2A40",
      "\\uminus": "\u2A41",
      "\\barcup": "\u2A42",
      "\\barcap": "\u2A43",
      "\\capwedge": "\u2A44",
      "\\cupvee": "\u2A45",
      "\\cupovercap": "\u2A46",
      "\\capovercup": "\u2A47",
      "\\cupbarcap": "\u2A48",
      "\\capbarcup": "\u2A49",
      "\\twocups": "\u2A4A",
      "\\twocaps": "\u2A4B",
      "\\closedvarcup": "\u2A4C",
      "\\closedvarcap": "\u2A4D",
      "\\Sqcap": "\u2A4E",
      "\\Sqcup": "\u2A4F",
      "\\closedvarcupsmashprod": "\u2A50",
      "\\wedgeodot": "\u2A51",
      "\\veeodot": "\u2A52",
      "\\ElzAnd": "\u2A53",
      "\\ElzOr": "\u2A54",
      "\\ElOr": "\u2A56",
      "\\bigslopedvee": "\u2A57",
      "\\bigslopedwedge": "\u2A58",
      "\\veeonwedge": "\u2A59",
      "\\wedgemidvert": "\u2A5A",
      "\\veemidvert": "\u2A5B",
      "\\midbarwedge": "\u2A5C",
      "\\midbarvee": "\u2A5D",
      "\\Elzminhat": "\u2A5F",
      "\\wedgedoublebar": "\u2A60",
      "\\varveebar": "\u2A61",
      "\\doublebarvee": "\u2A62",
      "\\dsub": "\u2A64",
      "\\rsub": "\u2A65",
      "\\eqdot": "\u2A66",
      "\\dotequiv": "\u2A67",
      "\\equivVert": "\u2A68",
      "\\equivVvert": "\u2A69",
      "\\dotsim": "\u2A6A",
      "\\simrdots": "\u2A6B",
      "\\simminussim": "\u2A6C",
      "\\congdot": "\u2A6D",
      "\\stackrel{*}{=}": "\u2A6E",
      "\\hatapprox": "\u2A6F",
      "\\approxeqq": "\u2A70",
      "\\eqqplus": "\u2A71",
      "\\pluseqq": "\u2A72",
      "\\eqqsim": "\u2A73",
      "\\Coloneqq": "\u2A74",
      "\\Equal": "\u2A75",
      "\\Same": "\u2A76",
      "\\ddotseq": "\u2A77",
      "\\equivDD": "\u2A78",
      "\\ltcir": "\u2A79",
      "\\gtcir": "\u2A7A",
      "\\ltquest": "\u2A7B",
      "\\gtquest": "\u2A7C",
      "\\leqslant": "\u2A7D",
      "\\nleqslant": "\u2A7D\u0338",
      "\\geqslant": "\u2A7E",
      "\\ngeqslant": "\u2A7E\u0338",
      "\\lesdot": "\u2A7F",
      "\\gesdot": "\u2A80",
      "\\lesdoto": "\u2A81",
      "\\gesdoto": "\u2A82",
      "\\lesdotor": "\u2A83",
      "\\gesdotol": "\u2A84",
      "\\lessapprox": "\u2A85",
      "\\gtrapprox": "\u2A86",
      "\\lneq": "\u2A87",
      "\\gneq": "\u2A88",
      "\\lnapprox": "\u2A89",
      "\\gnapprox": "\u2A8A",
      "\\lesseqqgtr": "\u2A8B",
      "\\gtreqqless": "\u2A8C",
      "\\lsime": "\u2A8D",
      "\\gsime": "\u2A8E",
      "\\lsimg": "\u2A8F",
      "\\gsiml": "\u2A90",
      "\\lgE": "\u2A91",
      "\\glE": "\u2A92",
      "\\lesges": "\u2A93",
      "\\gesles": "\u2A94",
      "\\eqslantless": "\u2A95",
      "\\eqslantgtr": "\u2A96",
      "\\elsdot": "\u2A97",
      "\\egsdot": "\u2A98",
      "\\eqqless": "\u2A99",
      "\\eqqgtr": "\u2A9A",
      "\\eqqslantless": "\u2A9B",
      "\\eqqslantgtr": "\u2A9C",
      "\\Pisymbol{ppi020}{117}": "\u2A9D",
      "\\Pisymbol{ppi020}{105}": "\u2A9E",
      "\\simlE": "\u2A9F",
      "\\simgE": "\u2AA0",
      "\\NestedLessLess": "\u2AA1",
      "\\NotNestedLessLess": "\u2AA1\u0338",
      "\\NestedGreaterGreater": "\u2AA2",
      "\\NotNestedGreaterGreater": "\u2AA2\u0338",
      "\\partialmeetcontraction": "\u2AA3",
      "\\glj": "\u2AA4",
      "\\gla": "\u2AA5",
      "\\leftslice": "\u2AA6",
      "\\rightslice": "\u2AA7",
      "\\lescc": "\u2AA8",
      "\\gescc": "\u2AA9",
      "\\smt": "\u2AAA",
      "\\lat": "\u2AAB",
      "\\smte": "\u2AAC",
      "\\late": "\u2AAD",
      "\\bumpeqq": "\u2AAE",
      "\\preceq": "\u2AAF",
      "\\not\\preceq": "\u2AAF\u0338",
      "\\succeq": "\u2AB0",
      "\\not\\succeq": "\u2AB0\u0338",
      "\\precneq": "\u2AB1",
      "\\succneq": "\u2AB2",
      "\\preceqq": "\u2AB3",
      "\\succeqq": "\u2AB4",
      "\\precneqq": "\u2AB5",
      "\\succneqq": "\u2AB6",
      "\\precapprox": "\u2AB7",
      "\\succapprox": "\u2AB8",
      "\\precnapprox": "\u2AB9",
      "\\succnapprox": "\u2ABA",
      "\\llcurly": "\u2ABB",
      "\\ggcurly": "\u2ABC",
      "\\subsetdot": "\u2ABD",
      "\\supsetdot": "\u2ABE",
      "\\subsetplus": "\u2ABF",
      "\\supsetplus": "\u2AC0",
      "\\submult": "\u2AC1",
      "\\supmult": "\u2AC2",
      "\\subedot": "\u2AC3",
      "\\supedot": "\u2AC4",
      "\\subseteqq": "\u2AC5",
      "\\nsubseteqq": "\u2AC5\u0338",
      "\\supseteqq": "\u2AC6",
      "\\nsupseteqq": "\u2AC6\u0338",
      "\\subsim": "\u2AC7",
      "\\supsim": "\u2AC8",
      "\\subsetapprox": "\u2AC9",
      "\\supsetapprox": "\u2ACA",
      "\\subsetneqq": "\u2ACB",
      "\\supsetneqq": "\u2ACC",
      "\\lsqhook": "\u2ACD",
      "\\rsqhook": "\u2ACE",
      "\\csub": "\u2ACF",
      "\\csup": "\u2AD0",
      "\\csube": "\u2AD1",
      "\\csupe": "\u2AD2",
      "\\subsup": "\u2AD3",
      "\\supsub": "\u2AD4",
      "\\subsub": "\u2AD5",
      "\\supsup": "\u2AD6",
      "\\suphsub": "\u2AD7",
      "\\supdsub": "\u2AD8",
      "\\forkv": "\u2AD9",
      "\\topfork": "\u2ADA",
      "\\mlcp": "\u2ADB",
      "\\forks": "\u2ADC",
      "\\forksnot": "\u2ADD",
      "\\shortlefttack": "\u2ADE",
      "\\shortdowntack": "\u2ADF",
      "\\shortuptack": "\u2AE0",
      "\\perps": "\u2AE1",
      "\\vDdash": "\u2AE2",
      "\\dashV": "\u2AE3",
      "\\Dashv": "\u2AE4",
      "\\DashV": "\u2AE5",
      "\\varVdash": "\u2AE6",
      "\\Barv": "\u2AE7",
      "\\vBar": "\u2AE8",
      "\\vBarv": "\u2AE9",
      "\\Top": "\u2AEA",
      "\\Not": "\u2AEC",
      "\\bNot": "\u2AED",
      "\\revnmid": "\u2AEE",
      "\\cirmid": "\u2AEF",
      "\\midcir": "\u2AF0",
      "\\topcir": "\u2AF1",
      "\\nhpar": "\u2AF2",
      "\\parsim": "\u2AF3",
      "\\interleave": "\u2AF4",
      "\\nhVvert": "\u2AF5",
      "\\Elztdcol": "\u2AF6",
      "\\lllnest": "\u2AF7",
      "\\gggnest": "\u2AF8",
      "\\leqqslant": "\u2AF9",
      "\\geqqslant": "\u2AFA",
      "\\trslash": "\u2AFB",
      "\\biginterleave": "\u2AFC",
      "{{/}\\!\\!{/}}": "\u2AFD",
      "{\\rlap{\\textbackslash}{{/}\\!\\!{/}}}": "\u2AFD\u20E5",
      "\\talloblong": "\u2AFE",
      "\\bigtalloblong": "\u2AFF",
      "\\squaretopblack": "\u2B12",
      "\\squarebotblack": "\u2B13",
      "\\squareurblack": "\u2B14",
      "\\squarellblack": "\u2B15",
      "\\diamondleftblack": "\u2B16",
      "\\diamondrightblack": "\u2B17",
      "\\diamondtopblack": "\u2B18",
      "\\diamondbotblack": "\u2B19",
      "\\dottedsquare": "\u2B1A",
      "\\blacksquare": "\u2B1B",
      "\\vysmblksquare": "\u2B1D",
      "\\vysmwhtsquare": "\u2B1E",
      "\\pentagonblack": "\u2B1F",
      "\\pentagon": "\u2B20",
      "\\varhexagon": "\u2B21",
      "\\varhexagonblack": "\u2B22",
      "\\hexagonblack": "\u2B23",
      "\\lgblkcircle": "\u2B24",
      "\\mdblkdiamond": "\u2B25",
      "\\mdwhtdiamond": "\u2B26",
      "\\mdblklozenge": "\u2B27",
      "\\mdwhtlozenge": "\u2B28",
      "\\smblkdiamond": "\u2B29",
      "\\smblklozenge": "\u2B2A",
      "\\smwhtlozenge": "\u2B2B",
      "\\blkhorzoval": "\u2B2C",
      "\\whthorzoval": "\u2B2D",
      "\\blkvertoval": "\u2B2E",
      "\\whtvertoval": "\u2B2F",
      "\\circleonleftarrow": "\u2B30",
      "\\leftthreearrows": "\u2B31",
      "\\leftarrowonoplus": "\u2B32",
      "\\longleftsquigarrow": "\u2B33",
      "\\nvtwoheadleftarrow": "\u2B34",
      "\\nVtwoheadleftarrow": "\u2B35",
      "\\twoheadmapsfrom": "\u2B36",
      "\\twoheadleftdbkarrow": "\u2B37",
      "\\leftdotarrow": "\u2B38",
      "\\nvleftarrowtail": "\u2B39",
      "\\nVleftarrowtail": "\u2B3A",
      "\\twoheadleftarrowtail": "\u2B3B",
      "\\nvtwoheadleftarrowtail": "\u2B3C",
      "\\nVtwoheadleftarrowtail": "\u2B3D",
      "\\leftarrowx": "\u2B3E",
      "\\leftcurvedarrow": "\u2B3F",
      "\\equalleftarrow": "\u2B40",
      "\\bsimilarleftarrow": "\u2B41",
      "\\leftarrowbackapprox": "\u2B42",
      "\\rightarrowgtr": "\u2B43",
      "\\rightarrowsupset": "\u2B44",
      "\\LLeftarrow": "\u2B45",
      "\\RRightarrow": "\u2B46",
      "\\bsimilarrightarrow": "\u2B47",
      "\\rightarrowbackapprox": "\u2B48",
      "\\similarleftarrow": "\u2B49",
      "\\leftarrowapprox": "\u2B4A",
      "\\leftarrowbsimilar": "\u2B4B",
      "\\rightarrowbsimilar": "\u2B4C",
      "\\medwhitestar": "\u2B50",
      "\\medblackstar": "\u2B51",
      "\\smwhitestar": "\u2B52",
      "\\rightpentagonblack": "\u2B53",
      "\\rightpentagon": "\u2B54",
      "\\postalmark": "\u3012",
      "\\lbrbrak": "\u3014",
      "\\rbrbrak": "\u3015",
      "\\openbracketleft": "\u301A",
      "\\openbracketright": "\u301B",
      "\\hzigzag": "\u3030",
      "\\dbend": "\uFFFD",
      "\\mathbf{A}": "\u{1D400}",
      "\\mathbf{B}": "\u{1D401}",
      "\\mathbf{C}": "\u{1D402}",
      "\\mathbf{D}": "\u{1D403}",
      "\\mathbf{E}": "\u{1D404}",
      "\\mathbf{F}": "\u{1D405}",
      "\\mathbf{G}": "\u{1D406}",
      "\\mathbf{H}": "\u{1D407}",
      "\\mathbf{I}": "\u{1D408}",
      "\\mathbf{J}": "\u{1D409}",
      "\\mathbf{K}": "\u{1D40A}",
      "\\mathbf{L}": "\u{1D40B}",
      "\\mathbf{M}": "\u{1D40C}",
      "\\mathbf{N}": "\u{1D40D}",
      "\\mathbf{O}": "\u{1D40E}",
      "\\mathbf{P}": "\u{1D40F}",
      "\\mathbf{Q}": "\u{1D410}",
      "\\mathbf{R}": "\u{1D411}",
      "\\mathbf{S}": "\u{1D412}",
      "\\mathbf{T}": "\u{1D413}",
      "\\mathbf{U}": "\u{1D414}",
      "\\mathbf{V}": "\u{1D415}",
      "\\mathbf{W}": "\u{1D416}",
      "\\mathbf{X}": "\u{1D417}",
      "\\mathbf{Y}": "\u{1D418}",
      "\\mathbf{Z}": "\u{1D419}",
      "\\mathbf{a}": "\u{1D41A}",
      "\\mathbf{b}": "\u{1D41B}",
      "\\mathbf{c}": "\u{1D41C}",
      "\\mathbf{d}": "\u{1D41D}",
      "\\mathbf{e}": "\u{1D41E}",
      "\\mathbf{f}": "\u{1D41F}",
      "\\mathbf{g}": "\u{1D420}",
      "\\mathbf{h}": "\u{1D421}",
      "\\mathbf{i}": "\u{1D422}",
      "\\mathbf{j}": "\u{1D423}",
      "\\mathbf{k}": "\u{1D424}",
      "\\mathbf{l}": "\u{1D425}",
      "\\mathbf{m}": "\u{1D426}",
      "\\mathbf{n}": "\u{1D427}",
      "\\mathbf{o}": "\u{1D428}",
      "\\mathbf{p}": "\u{1D429}",
      "\\mathbf{q}": "\u{1D42A}",
      "\\mathbf{r}": "\u{1D42B}",
      "\\mathbf{s}": "\u{1D42C}",
      "\\mathbf{t}": "\u{1D42D}",
      "\\mathbf{u}": "\u{1D42E}",
      "\\mathbf{v}": "\u{1D42F}",
      "\\mathbf{w}": "\u{1D430}",
      "\\mathbf{x}": "\u{1D431}",
      "\\mathbf{y}": "\u{1D432}",
      "\\mathbf{z}": "\u{1D433}",
      "\\mathsl{A}": "\u{1D434}",
      "\\mathsl{B}": "\u{1D435}",
      "\\mathsl{C}": "\u{1D436}",
      "\\mathsl{D}": "\u{1D437}",
      "\\mathsl{E}": "\u{1D438}",
      "\\mathsl{F}": "\u{1D439}",
      "\\mathsl{G}": "\u{1D43A}",
      "\\mathsl{H}": "\u{1D43B}",
      "\\mathsl{I}": "\u{1D43C}",
      "\\mathsl{J}": "\u{1D43D}",
      "\\mathsl{K}": "\u{1D43E}",
      "\\mathsl{L}": "\u{1D43F}",
      "\\mathsl{M}": "\u{1D440}",
      "\\mathsl{N}": "\u{1D441}",
      "\\mathsl{O}": "\u{1D442}",
      "\\mathsl{P}": "\u{1D443}",
      "\\mathsl{Q}": "\u{1D444}",
      "\\mathsl{R}": "\u{1D445}",
      "\\mathsl{S}": "\u{1D446}",
      "\\mathsl{T}": "\u{1D447}",
      "\\mathsl{U}": "\u{1D448}",
      "\\mathsl{V}": "\u{1D449}",
      "\\mathsl{W}": "\u{1D44A}",
      "\\mathsl{X}": "\u{1D44B}",
      "\\mathsl{Y}": "\u{1D44C}",
      "\\mathsl{Z}": "\u{1D44D}",
      "\\mathsl{a}": "\u{1D44E}",
      "\\mathsl{b}": "\u{1D44F}",
      "\\mathsl{c}": "\u{1D450}",
      "\\mathsl{d}": "\u{1D451}",
      "\\mathsl{e}": "\u{1D452}",
      "\\mathsl{f}": "\u{1D453}",
      "\\mathsl{g}": "\u{1D454}",
      "\\mathsl{i}": "\u{1D456}",
      "\\mathsl{j}": "\u{1D457}",
      "\\mathsl{k}": "\u{1D458}",
      "\\mathsl{l}": "\u{1D459}",
      "\\mathsl{m}": "\u{1D45A}",
      "\\mathsl{n}": "\u{1D45B}",
      "\\mathsl{o}": "\u{1D45C}",
      "\\mathsl{p}": "\u{1D45D}",
      "\\mathsl{q}": "\u{1D45E}",
      "\\mathsl{r}": "\u{1D45F}",
      "\\mathsl{s}": "\u{1D460}",
      "\\mathsl{t}": "\u{1D461}",
      "\\mathsl{u}": "\u{1D462}",
      "\\mathsl{v}": "\u{1D463}",
      "\\mathsl{w}": "\u{1D464}",
      "\\mathsl{x}": "\u{1D465}",
      "\\mathsl{y}": "\u{1D466}",
      "\\mathsl{z}": "\u{1D467}",
      "\\mathbit{A}": "\u{1D468}",
      "\\mathbit{B}": "\u{1D469}",
      "\\mathbit{C}": "\u{1D46A}",
      "\\mathbit{D}": "\u{1D46B}",
      "\\mathbit{E}": "\u{1D46C}",
      "\\mathbit{F}": "\u{1D46D}",
      "\\mathbit{G}": "\u{1D46E}",
      "\\mathbit{H}": "\u{1D46F}",
      "\\mathbit{I}": "\u{1D470}",
      "\\mathbit{J}": "\u{1D471}",
      "\\mathbit{K}": "\u{1D472}",
      "\\mathbit{L}": "\u{1D473}",
      "\\mathbit{M}": "\u{1D474}",
      "\\mathbit{N}": "\u{1D475}",
      "\\mathbit{O}": "\u{1D476}",
      "\\mathbit{P}": "\u{1D477}",
      "\\mathbit{Q}": "\u{1D478}",
      "\\mathbit{R}": "\u{1D479}",
      "\\mathbit{S}": "\u{1D47A}",
      "\\mathbit{T}": "\u{1D47B}",
      "\\mathbit{U}": "\u{1D47C}",
      "\\mathbit{V}": "\u{1D47D}",
      "\\mathbit{W}": "\u{1D47E}",
      "\\mathbit{X}": "\u{1D47F}",
      "\\mathbit{Y}": "\u{1D480}",
      "\\mathbit{Z}": "\u{1D481}",
      "\\mathbit{a}": "\u{1D482}",
      "\\mathbit{b}": "\u{1D483}",
      "\\mathbit{c}": "\u{1D484}",
      "\\mathbit{d}": "\u{1D485}",
      "\\mathbit{e}": "\u{1D486}",
      "\\mathbit{f}": "\u{1D487}",
      "\\mathbit{g}": "\u{1D488}",
      "\\mathbit{h}": "\u{1D489}",
      "\\mathbit{i}": "\u{1D48A}",
      "\\mathbit{j}": "\u{1D48B}",
      "\\mathbit{k}": "\u{1D48C}",
      "\\mathbit{l}": "\u{1D48D}",
      "\\mathbit{m}": "\u{1D48E}",
      "\\mathbit{n}": "\u{1D48F}",
      "\\mathbit{o}": "\u{1D490}",
      "\\mathbit{p}": "\u{1D491}",
      "\\mathbit{q}": "\u{1D492}",
      "\\mathbit{r}": "\u{1D493}",
      "\\mathbit{s}": "\u{1D494}",
      "\\mathbit{t}": "\u{1D495}",
      "\\mathbit{u}": "\u{1D496}",
      "\\mathbit{v}": "\u{1D497}",
      "\\mathbit{w}": "\u{1D498}",
      "\\mathbit{x}": "\u{1D499}",
      "\\mathbit{y}": "\u{1D49A}",
      "\\mathbit{z}": "\u{1D49B}",
      "\\mathscr{A}": "\u{1D49C}",
      "\\mathscr{C}": "\u{1D49E}",
      "\\mathscr{D}": "\u{1D49F}",
      "\\mathscr{G}": "\u{1D4A2}",
      "\\mathscr{J}": "\u{1D4A5}",
      "\\mathscr{K}": "\u{1D4A6}",
      "\\mathscr{N}": "\u{1D4A9}",
      "\\mathscr{O}": "\u{1D4AA}",
      "\\mathscr{P}": "\u{1D4AB}",
      "\\mathscr{Q}": "\u{1D4AC}",
      "\\mathscr{S}": "\u{1D4AE}",
      "\\mathscr{T}": "\u{1D4AF}",
      "\\mathscr{U}": "\u{1D4B0}",
      "\\mathscr{V}": "\u{1D4B1}",
      "\\mathscr{W}": "\u{1D4B2}",
      "\\mathscr{X}": "\u{1D4B3}",
      "\\mathscr{Y}": "\u{1D4B4}",
      "\\mathscr{Z}": "\u{1D4B5}",
      "\\mathscr{a}": "\u{1D4B6}",
      "\\mathscr{b}": "\u{1D4B7}",
      "\\mathscr{c}": "\u{1D4B8}",
      "\\mathscr{d}": "\u{1D4B9}",
      "\\mathscr{f}": "\u{1D4BB}",
      "\\mathscr{h}": "\u{1D4BD}",
      "\\mathscr{i}": "\u{1D4BE}",
      "\\mathscr{j}": "\u{1D4BF}",
      "\\mathscr{k}": "\u{1D4C0}",
      "\\mathscr{m}": "\u{1D4C2}",
      "\\mathscr{n}": "\u{1D4C3}",
      "\\mathscr{p}": "\u{1D4C5}",
      "\\mathscr{q}": "\u{1D4C6}",
      "\\mathscr{r}": "\u{1D4C7}",
      "\\mathscr{s}": "\u{1D4C8}",
      "\\mathscr{t}": "\u{1D4C9}",
      "\\mathscr{u}": "\u{1D4CA}",
      "\\mathscr{v}": "\u{1D4CB}",
      "\\mathscr{w}": "\u{1D4CC}",
      "\\mathscr{x}": "\u{1D4CD}",
      "\\mathscr{y}": "\u{1D4CE}",
      "\\mathscr{z}": "\u{1D4CF}",
      "\\mathmit{A}": "\u{1D4D0}",
      "\\mathmit{B}": "\u{1D4D1}",
      "\\mathmit{C}": "\u{1D4D2}",
      "\\mathmit{D}": "\u{1D4D3}",
      "\\mathmit{E}": "\u{1D4D4}",
      "\\mathmit{F}": "\u{1D4D5}",
      "\\mathmit{G}": "\u{1D4D6}",
      "\\mathmit{H}": "\u{1D4D7}",
      "\\mathmit{I}": "\u{1D4D8}",
      "\\mathmit{J}": "\u{1D4D9}",
      "\\mathmit{K}": "\u{1D4DA}",
      "\\mathmit{L}": "\u{1D4DB}",
      "\\mathmit{M}": "\u{1D4DC}",
      "\\mathmit{N}": "\u{1D4DD}",
      "\\mathmit{O}": "\u{1D4DE}",
      "\\mathmit{P}": "\u{1D4DF}",
      "\\mathmit{Q}": "\u{1D4E0}",
      "\\mathmit{R}": "\u{1D4E1}",
      "\\mathmit{S}": "\u{1D4E2}",
      "\\mathmit{T}": "\u{1D4E3}",
      "\\mathmit{U}": "\u{1D4E4}",
      "\\mathmit{V}": "\u{1D4E5}",
      "\\mathmit{W}": "\u{1D4E6}",
      "\\mathmit{X}": "\u{1D4E7}",
      "\\mathmit{Y}": "\u{1D4E8}",
      "\\mathmit{Z}": "\u{1D4E9}",
      "\\mathmit{a}": "\u{1D4EA}",
      "\\mathmit{b}": "\u{1D4EB}",
      "\\mathmit{c}": "\u{1D4EC}",
      "\\mathmit{d}": "\u{1D4ED}",
      "\\mathmit{e}": "\u{1D4EE}",
      "\\mathmit{f}": "\u{1D4EF}",
      "\\mathmit{g}": "\u{1D4F0}",
      "\\mathmit{h}": "\u{1D4F1}",
      "\\mathmit{i}": "\u{1D4F2}",
      "\\mathmit{j}": "\u{1D4F3}",
      "\\mathmit{k}": "\u{1D4F4}",
      "\\mathmit{l}": "\u{1D4F5}",
      "\\mathmit{m}": "\u{1D4F6}",
      "\\mathmit{n}": "\u{1D4F7}",
      "\\mathmit{o}": "\u{1D4F8}",
      "\\mathmit{p}": "\u{1D4F9}",
      "\\mathmit{q}": "\u{1D4FA}",
      "\\mathmit{r}": "\u{1D4FB}",
      "\\mathmit{s}": "\u{1D4FC}",
      "\\mathmit{t}": "\u{1D4FD}",
      "\\mathmit{u}": "\u{1D4FE}",
      "\\mathmit{v}": "\u{1D4FF}",
      "\\mathmit{w}": "\u{1D500}",
      "\\mathmit{x}": "\u{1D501}",
      "\\mathmit{y}": "\u{1D502}",
      "\\mathmit{z}": "\u{1D503}",
      "\\mathfrak{A}": "\u{1D504}",
      "\\mathfrak{B}": "\u{1D505}",
      "\\mathfrak{D}": "\u{1D507}",
      "\\mathfrak{E}": "\u{1D508}",
      "\\mathfrak{F}": "\u{1D509}",
      "\\mathfrak{G}": "\u{1D50A}",
      "\\mathfrak{J}": "\u{1D50D}",
      "\\mathfrak{K}": "\u{1D50E}",
      "\\mathfrak{L}": "\u{1D50F}",
      "\\mathfrak{M}": "\u{1D510}",
      "\\mathfrak{N}": "\u{1D511}",
      "\\mathfrak{O}": "\u{1D512}",
      "\\mathfrak{P}": "\u{1D513}",
      "\\mathfrak{Q}": "\u{1D514}",
      "\\mathfrak{S}": "\u{1D516}",
      "\\mathfrak{T}": "\u{1D517}",
      "\\mathfrak{U}": "\u{1D518}",
      "\\mathfrak{V}": "\u{1D519}",
      "\\mathfrak{W}": "\u{1D51A}",
      "\\mathfrak{X}": "\u{1D51B}",
      "\\mathfrak{Y}": "\u{1D51C}",
      "\\mathfrak{a}": "\u{1D51E}",
      "\\mathfrak{b}": "\u{1D51F}",
      "\\mathfrak{c}": "\u{1D520}",
      "\\mathfrak{d}": "\u{1D521}",
      "\\mathfrak{e}": "\u{1D522}",
      "\\mathfrak{f}": "\u{1D523}",
      "\\mathfrak{g}": "\u{1D524}",
      "\\mathfrak{h}": "\u{1D525}",
      "\\mathfrak{i}": "\u{1D526}",
      "\\mathfrak{j}": "\u{1D527}",
      "\\mathfrak{k}": "\u{1D528}",
      "\\mathfrak{l}": "\u{1D529}",
      "\\mathfrak{m}": "\u{1D52A}",
      "\\mathfrak{n}": "\u{1D52B}",
      "\\mathfrak{o}": "\u{1D52C}",
      "\\mathfrak{p}": "\u{1D52D}",
      "\\mathfrak{q}": "\u{1D52E}",
      "\\mathfrak{r}": "\u{1D52F}",
      "\\mathfrak{s}": "\u{1D530}",
      "\\mathfrak{t}": "\u{1D531}",
      "\\mathfrak{u}": "\u{1D532}",
      "\\mathfrak{v}": "\u{1D533}",
      "\\mathfrak{w}": "\u{1D534}",
      "\\mathfrak{x}": "\u{1D535}",
      "\\mathfrak{y}": "\u{1D536}",
      "\\mathfrak{z}": "\u{1D537}",
      "\\mathbb{A}": "\u{1D538}",
      "\\mathbb{B}": "\u{1D539}",
      "\\mathbb{D}": "\u{1D53B}",
      "\\mathbb{E}": "\u{1D53C}",
      "\\mathbb{F}": "\u{1D53D}",
      "\\mathbb{G}": "\u{1D53E}",
      "\\mathbb{I}": "\u{1D540}",
      "\\mathbb{J}": "\u{1D541}",
      "\\mathbb{K}": "\u{1D542}",
      "\\mathbb{L}": "\u{1D543}",
      "\\mathbb{M}": "\u{1D544}",
      "\\mathbb{O}": "\u{1D546}",
      "\\mathbb{S}": "\u{1D54A}",
      "\\mathbb{T}": "\u{1D54B}",
      "\\mathbb{U}": "\u{1D54C}",
      "\\mathbb{V}": "\u{1D54D}",
      "\\mathbb{W}": "\u{1D54E}",
      "\\mathbb{X}": "\u{1D54F}",
      "\\mathbb{Y}": "\u{1D550}",
      "\\mathbb{a}": "\u{1D552}",
      "\\mathbb{b}": "\u{1D553}",
      "\\mathbb{c}": "\u{1D554}",
      "\\mathbb{d}": "\u{1D555}",
      "\\mathbb{e}": "\u{1D556}",
      "\\mathbb{f}": "\u{1D557}",
      "\\mathbb{g}": "\u{1D558}",
      "\\mathbb{h}": "\u{1D559}",
      "\\mathbb{i}": "\u{1D55A}",
      "\\mathbb{j}": "\u{1D55B}",
      "\\mathbb{k}": "\u{1D55C}",
      "\\mathbb{l}": "\u{1D55D}",
      "\\mathbb{m}": "\u{1D55E}",
      "\\mathbb{n}": "\u{1D55F}",
      "\\mathbb{o}": "\u{1D560}",
      "\\mathbb{p}": "\u{1D561}",
      "\\mathbb{q}": "\u{1D562}",
      "\\mathbb{r}": "\u{1D563}",
      "\\mathbb{s}": "\u{1D564}",
      "\\mathbb{t}": "\u{1D565}",
      "\\mathbb{u}": "\u{1D566}",
      "\\mathbb{v}": "\u{1D567}",
      "\\mathbb{w}": "\u{1D568}",
      "\\mathbb{x}": "\u{1D569}",
      "\\mathbb{y}": "\u{1D56A}",
      "\\mathbb{z}": "\u{1D56B}",
      "\\mathslbb{A}": "\u{1D56C}",
      "\\mathslbb{B}": "\u{1D56D}",
      "\\mathslbb{C}": "\u{1D56E}",
      "\\mathslbb{D}": "\u{1D56F}",
      "\\mathslbb{E}": "\u{1D570}",
      "\\mathslbb{F}": "\u{1D571}",
      "\\mathslbb{G}": "\u{1D572}",
      "\\mathslbb{H}": "\u{1D573}",
      "\\mathslbb{I}": "\u{1D574}",
      "\\mathslbb{J}": "\u{1D575}",
      "\\mathslbb{K}": "\u{1D576}",
      "\\mathslbb{L}": "\u{1D577}",
      "\\mathslbb{M}": "\u{1D578}",
      "\\mathslbb{N}": "\u{1D579}",
      "\\mathslbb{O}": "\u{1D57A}",
      "\\mathslbb{P}": "\u{1D57B}",
      "\\mathslbb{Q}": "\u{1D57C}",
      "\\mathslbb{R}": "\u{1D57D}",
      "\\mathslbb{S}": "\u{1D57E}",
      "\\mathslbb{T}": "\u{1D57F}",
      "\\mathslbb{U}": "\u{1D580}",
      "\\mathslbb{V}": "\u{1D581}",
      "\\mathslbb{W}": "\u{1D582}",
      "\\mathslbb{X}": "\u{1D583}",
      "\\mathslbb{Y}": "\u{1D584}",
      "\\mathslbb{Z}": "\u{1D585}",
      "\\mathslbb{a}": "\u{1D586}",
      "\\mathslbb{b}": "\u{1D587}",
      "\\mathslbb{c}": "\u{1D588}",
      "\\mathslbb{d}": "\u{1D589}",
      "\\mathslbb{e}": "\u{1D58A}",
      "\\mathslbb{f}": "\u{1D58B}",
      "\\mathslbb{g}": "\u{1D58C}",
      "\\mathslbb{h}": "\u{1D58D}",
      "\\mathslbb{i}": "\u{1D58E}",
      "\\mathslbb{j}": "\u{1D58F}",
      "\\mathslbb{k}": "\u{1D590}",
      "\\mathslbb{l}": "\u{1D591}",
      "\\mathslbb{m}": "\u{1D592}",
      "\\mathslbb{n}": "\u{1D593}",
      "\\mathslbb{o}": "\u{1D594}",
      "\\mathslbb{p}": "\u{1D595}",
      "\\mathslbb{q}": "\u{1D596}",
      "\\mathslbb{r}": "\u{1D597}",
      "\\mathslbb{s}": "\u{1D598}",
      "\\mathslbb{t}": "\u{1D599}",
      "\\mathslbb{u}": "\u{1D59A}",
      "\\mathslbb{v}": "\u{1D59B}",
      "\\mathslbb{w}": "\u{1D59C}",
      "\\mathslbb{x}": "\u{1D59D}",
      "\\mathslbb{y}": "\u{1D59E}",
      "\\mathslbb{z}": "\u{1D59F}",
      "\\mathsf{A}": "\u{1D5A0}",
      "\\mathsf{B}": "\u{1D5A1}",
      "\\mathsf{C}": "\u{1D5A2}",
      "\\mathsf{D}": "\u{1D5A3}",
      "\\mathsf{E}": "\u{1D5A4}",
      "\\mathsf{F}": "\u{1D5A5}",
      "\\mathsf{G}": "\u{1D5A6}",
      "\\mathsf{H}": "\u{1D5A7}",
      "\\mathsf{I}": "\u{1D5A8}",
      "\\mathsf{J}": "\u{1D5A9}",
      "\\mathsf{K}": "\u{1D5AA}",
      "\\mathsf{L}": "\u{1D5AB}",
      "\\mathsf{M}": "\u{1D5AC}",
      "\\mathsf{N}": "\u{1D5AD}",
      "\\mathsf{O}": "\u{1D5AE}",
      "\\mathsf{P}": "\u{1D5AF}",
      "\\mathsf{Q}": "\u{1D5B0}",
      "\\mathsf{R}": "\u{1D5B1}",
      "\\mathsf{S}": "\u{1D5B2}",
      "\\mathsf{T}": "\u{1D5B3}",
      "\\mathsf{U}": "\u{1D5B4}",
      "\\mathsf{V}": "\u{1D5B5}",
      "\\mathsf{W}": "\u{1D5B6}",
      "\\mathsf{X}": "\u{1D5B7}",
      "\\mathsf{Y}": "\u{1D5B8}",
      "\\mathsf{Z}": "\u{1D5B9}",
      "\\mathsf{a}": "\u{1D5BA}",
      "\\mathsf{b}": "\u{1D5BB}",
      "\\mathsf{c}": "\u{1D5BC}",
      "\\mathsf{d}": "\u{1D5BD}",
      "\\mathsf{e}": "\u{1D5BE}",
      "\\mathsf{f}": "\u{1D5BF}",
      "\\mathsf{g}": "\u{1D5C0}",
      "\\mathsf{h}": "\u{1D5C1}",
      "\\mathsf{i}": "\u{1D5C2}",
      "\\mathsf{j}": "\u{1D5C3}",
      "\\mathsf{k}": "\u{1D5C4}",
      "\\mathsf{l}": "\u{1D5C5}",
      "\\mathsf{m}": "\u{1D5C6}",
      "\\mathsf{n}": "\u{1D5C7}",
      "\\mathsf{o}": "\u{1D5C8}",
      "\\mathsf{p}": "\u{1D5C9}",
      "\\mathsf{q}": "\u{1D5CA}",
      "\\mathsf{r}": "\u{1D5CB}",
      "\\mathsf{s}": "\u{1D5CC}",
      "\\mathsf{t}": "\u{1D5CD}",
      "\\mathsf{u}": "\u{1D5CE}",
      "\\mathsf{v}": "\u{1D5CF}",
      "\\mathsf{w}": "\u{1D5D0}",
      "\\mathsf{x}": "\u{1D5D1}",
      "\\mathsf{y}": "\u{1D5D2}",
      "\\mathsf{z}": "\u{1D5D3}",
      "\\mathsfbf{A}": "\u{1D5D4}",
      "\\mathsfbf{B}": "\u{1D5D5}",
      "\\mathsfbf{C}": "\u{1D5D6}",
      "\\mathsfbf{D}": "\u{1D5D7}",
      "\\mathsfbf{E}": "\u{1D5D8}",
      "\\mathsfbf{F}": "\u{1D5D9}",
      "\\mathsfbf{G}": "\u{1D5DA}",
      "\\mathsfbf{H}": "\u{1D5DB}",
      "\\mathsfbf{I}": "\u{1D5DC}",
      "\\mathsfbf{J}": "\u{1D5DD}",
      "\\mathsfbf{K}": "\u{1D5DE}",
      "\\mathsfbf{L}": "\u{1D5DF}",
      "\\mathsfbf{M}": "\u{1D5E0}",
      "\\mathsfbf{N}": "\u{1D5E1}",
      "\\mathsfbf{O}": "\u{1D5E2}",
      "\\mathsfbf{P}": "\u{1D5E3}",
      "\\mathsfbf{Q}": "\u{1D5E4}",
      "\\mathsfbf{R}": "\u{1D5E5}",
      "\\mathsfbf{S}": "\u{1D5E6}",
      "\\mathsfbf{T}": "\u{1D5E7}",
      "\\mathsfbf{U}": "\u{1D5E8}",
      "\\mathsfbf{V}": "\u{1D5E9}",
      "\\mathsfbf{W}": "\u{1D5EA}",
      "\\mathsfbf{X}": "\u{1D5EB}",
      "\\mathsfbf{Y}": "\u{1D5EC}",
      "\\mathsfbf{Z}": "\u{1D5ED}",
      "\\mathsfbf{a}": "\u{1D5EE}",
      "\\mathsfbf{b}": "\u{1D5EF}",
      "\\mathsfbf{c}": "\u{1D5F0}",
      "\\mathsfbf{d}": "\u{1D5F1}",
      "\\mathsfbf{e}": "\u{1D5F2}",
      "\\mathsfbf{f}": "\u{1D5F3}",
      "\\mathsfbf{g}": "\u{1D5F4}",
      "\\mathsfbf{h}": "\u{1D5F5}",
      "\\mathsfbf{i}": "\u{1D5F6}",
      "\\mathsfbf{j}": "\u{1D5F7}",
      "\\mathsfbf{k}": "\u{1D5F8}",
      "\\mathsfbf{l}": "\u{1D5F9}",
      "\\mathsfbf{m}": "\u{1D5FA}",
      "\\mathsfbf{n}": "\u{1D5FB}",
      "\\mathsfbf{o}": "\u{1D5FC}",
      "\\mathsfbf{p}": "\u{1D5FD}",
      "\\mathsfbf{q}": "\u{1D5FE}",
      "\\mathsfbf{r}": "\u{1D5FF}",
      "\\mathsfbf{s}": "\u{1D600}",
      "\\mathsfbf{t}": "\u{1D601}",
      "\\mathsfbf{u}": "\u{1D602}",
      "\\mathsfbf{v}": "\u{1D603}",
      "\\mathsfbf{w}": "\u{1D604}",
      "\\mathsfbf{x}": "\u{1D605}",
      "\\mathsfbf{y}": "\u{1D606}",
      "\\mathsfbf{z}": "\u{1D607}",
      "\\mathsfsl{A}": "\u{1D608}",
      "\\mathsfsl{B}": "\u{1D609}",
      "\\mathsfsl{C}": "\u{1D60A}",
      "\\mathsfsl{D}": "\u{1D60B}",
      "\\mathsfsl{E}": "\u{1D60C}",
      "\\mathsfsl{F}": "\u{1D60D}",
      "\\mathsfsl{G}": "\u{1D60E}",
      "\\mathsfsl{H}": "\u{1D60F}",
      "\\mathsfsl{I}": "\u{1D610}",
      "\\mathsfsl{J}": "\u{1D611}",
      "\\mathsfsl{K}": "\u{1D612}",
      "\\mathsfsl{L}": "\u{1D613}",
      "\\mathsfsl{M}": "\u{1D614}",
      "\\mathsfsl{N}": "\u{1D615}",
      "\\mathsfsl{O}": "\u{1D616}",
      "\\mathsfsl{P}": "\u{1D617}",
      "\\mathsfsl{Q}": "\u{1D618}",
      "\\mathsfsl{R}": "\u{1D619}",
      "\\mathsfsl{S}": "\u{1D61A}",
      "\\mathsfsl{T}": "\u{1D61B}",
      "\\mathsfsl{U}": "\u{1D61C}",
      "\\mathsfsl{V}": "\u{1D61D}",
      "\\mathsfsl{W}": "\u{1D61E}",
      "\\mathsfsl{X}": "\u{1D61F}",
      "\\mathsfsl{Y}": "\u{1D620}",
      "\\mathsfsl{Z}": "\u{1D621}",
      "\\mathsfsl{a}": "\u{1D622}",
      "\\mathsfsl{b}": "\u{1D623}",
      "\\mathsfsl{c}": "\u{1D624}",
      "\\mathsfsl{d}": "\u{1D625}",
      "\\mathsfsl{e}": "\u{1D626}",
      "\\mathsfsl{f}": "\u{1D627}",
      "\\mathsfsl{g}": "\u{1D628}",
      "\\mathsfsl{h}": "\u{1D629}",
      "\\mathsfsl{i}": "\u{1D62A}",
      "\\mathsfsl{j}": "\u{1D62B}",
      "\\mathsfsl{k}": "\u{1D62C}",
      "\\mathsfsl{l}": "\u{1D62D}",
      "\\mathsfsl{m}": "\u{1D62E}",
      "\\mathsfsl{n}": "\u{1D62F}",
      "\\mathsfsl{o}": "\u{1D630}",
      "\\mathsfsl{p}": "\u{1D631}",
      "\\mathsfsl{q}": "\u{1D632}",
      "\\mathsfsl{r}": "\u{1D633}",
      "\\mathsfsl{s}": "\u{1D634}",
      "\\mathsfsl{t}": "\u{1D635}",
      "\\mathsfsl{u}": "\u{1D636}",
      "\\mathsfsl{v}": "\u{1D637}",
      "\\mathsfsl{w}": "\u{1D638}",
      "\\mathsfsl{x}": "\u{1D639}",
      "\\mathsfsl{y}": "\u{1D63A}",
      "\\mathsfsl{z}": "\u{1D63B}",
      "\\mathsfbfsl{A}": "\u{1D63C}",
      "\\mathsfbfsl{B}": "\u{1D63D}",
      "\\mathsfbfsl{C}": "\u{1D63E}",
      "\\mathsfbfsl{D}": "\u{1D63F}",
      "\\mathsfbfsl{E}": "\u{1D640}",
      "\\mathsfbfsl{F}": "\u{1D641}",
      "\\mathsfbfsl{G}": "\u{1D642}",
      "\\mathsfbfsl{H}": "\u{1D643}",
      "\\mathsfbfsl{I}": "\u{1D644}",
      "\\mathsfbfsl{J}": "\u{1D645}",
      "\\mathsfbfsl{K}": "\u{1D646}",
      "\\mathsfbfsl{L}": "\u{1D647}",
      "\\mathsfbfsl{M}": "\u{1D648}",
      "\\mathsfbfsl{N}": "\u{1D649}",
      "\\mathsfbfsl{O}": "\u{1D64A}",
      "\\mathsfbfsl{P}": "\u{1D64B}",
      "\\mathsfbfsl{Q}": "\u{1D64C}",
      "\\mathsfbfsl{R}": "\u{1D64D}",
      "\\mathsfbfsl{S}": "\u{1D64E}",
      "\\mathsfbfsl{T}": "\u{1D64F}",
      "\\mathsfbfsl{U}": "\u{1D650}",
      "\\mathsfbfsl{V}": "\u{1D651}",
      "\\mathsfbfsl{W}": "\u{1D652}",
      "\\mathsfbfsl{X}": "\u{1D653}",
      "\\mathsfbfsl{Y}": "\u{1D654}",
      "\\mathsfbfsl{Z}": "\u{1D655}",
      "\\mathsfbfsl{a}": "\u{1D656}",
      "\\mathsfbfsl{b}": "\u{1D657}",
      "\\mathsfbfsl{c}": "\u{1D658}",
      "\\mathsfbfsl{d}": "\u{1D659}",
      "\\mathsfbfsl{e}": "\u{1D65A}",
      "\\mathsfbfsl{f}": "\u{1D65B}",
      "\\mathsfbfsl{g}": "\u{1D65C}",
      "\\mathsfbfsl{h}": "\u{1D65D}",
      "\\mathsfbfsl{i}": "\u{1D65E}",
      "\\mathsfbfsl{j}": "\u{1D65F}",
      "\\mathsfbfsl{k}": "\u{1D660}",
      "\\mathsfbfsl{l}": "\u{1D661}",
      "\\mathsfbfsl{m}": "\u{1D662}",
      "\\mathsfbfsl{n}": "\u{1D663}",
      "\\mathsfbfsl{o}": "\u{1D664}",
      "\\mathsfbfsl{p}": "\u{1D665}",
      "\\mathsfbfsl{q}": "\u{1D666}",
      "\\mathsfbfsl{r}": "\u{1D667}",
      "\\mathsfbfsl{s}": "\u{1D668}",
      "\\mathsfbfsl{t}": "\u{1D669}",
      "\\mathsfbfsl{u}": "\u{1D66A}",
      "\\mathsfbfsl{v}": "\u{1D66B}",
      "\\mathsfbfsl{w}": "\u{1D66C}",
      "\\mathsfbfsl{x}": "\u{1D66D}",
      "\\mathsfbfsl{y}": "\u{1D66E}",
      "\\mathsfbfsl{z}": "\u{1D66F}",
      "\\mathtt{A}": "\u{1D670}",
      "\\mathtt{B}": "\u{1D671}",
      "\\mathtt{C}": "\u{1D672}",
      "\\mathtt{D}": "\u{1D673}",
      "\\mathtt{E}": "\u{1D674}",
      "\\mathtt{F}": "\u{1D675}",
      "\\mathtt{G}": "\u{1D676}",
      "\\mathtt{H}": "\u{1D677}",
      "\\mathtt{I}": "\u{1D678}",
      "\\mathtt{J}": "\u{1D679}",
      "\\mathtt{K}": "\u{1D67A}",
      "\\mathtt{L}": "\u{1D67B}",
      "\\mathtt{M}": "\u{1D67C}",
      "\\mathtt{N}": "\u{1D67D}",
      "\\mathtt{O}": "\u{1D67E}",
      "\\mathtt{P}": "\u{1D67F}",
      "\\mathtt{Q}": "\u{1D680}",
      "\\mathtt{R}": "\u{1D681}",
      "\\mathtt{S}": "\u{1D682}",
      "\\mathtt{T}": "\u{1D683}",
      "\\mathtt{U}": "\u{1D684}",
      "\\mathtt{V}": "\u{1D685}",
      "\\mathtt{W}": "\u{1D686}",
      "\\mathtt{X}": "\u{1D687}",
      "\\mathtt{Y}": "\u{1D688}",
      "\\mathtt{Z}": "\u{1D689}",
      "\\mathtt{a}": "\u{1D68A}",
      "\\mathtt{b}": "\u{1D68B}",
      "\\mathtt{c}": "\u{1D68C}",
      "\\mathtt{d}": "\u{1D68D}",
      "\\mathtt{e}": "\u{1D68E}",
      "\\mathtt{f}": "\u{1D68F}",
      "\\mathtt{g}": "\u{1D690}",
      "\\mathtt{h}": "\u{1D691}",
      "\\mathtt{i}": "\u{1D692}",
      "\\mathtt{j}": "\u{1D693}",
      "\\mathtt{k}": "\u{1D694}",
      "\\mathtt{l}": "\u{1D695}",
      "\\mathtt{m}": "\u{1D696}",
      "\\mathtt{n}": "\u{1D697}",
      "\\mathtt{o}": "\u{1D698}",
      "\\mathtt{p}": "\u{1D699}",
      "\\mathtt{q}": "\u{1D69A}",
      "\\mathtt{r}": "\u{1D69B}",
      "\\mathtt{s}": "\u{1D69C}",
      "\\mathtt{t}": "\u{1D69D}",
      "\\mathtt{u}": "\u{1D69E}",
      "\\mathtt{v}": "\u{1D69F}",
      "\\mathtt{w}": "\u{1D6A0}",
      "\\mathtt{x}": "\u{1D6A1}",
      "\\mathtt{y}": "\u{1D6A2}",
      "\\mathtt{z}": "\u{1D6A3}",
      "\\mathbf{\\Gamma}": "\u{1D6AA}",
      "\\mathbf{\\Delta}": "\u{1D6AB}",
      "\\mathbf{\\Theta}": "\u{1D6AF}",
      "\\mathbf{\\Lambda}": "\u{1D6B2}",
      "\\mathbf{\\Xi}": "\u{1D6B5}",
      "\\mathbf{\\Pi}": "\u{1D6B7}",
      "\\mathbf{\\vartheta}": "\u{1D6B9}",
      "\\mathbf{\\Sigma}": "\u{1D6BA}",
      "\\mathbf{\\Upsilon}": "\u{1D6BC}",
      "\\mathbf{\\Phi}": "\u{1D6BD}",
      "\\mathbf{\\Psi}": "\u{1D6BF}",
      "\\mathbf{\\Omega}": "\u{1D6C0}",
      "\\mathbf{\\nabla}": "\u{1D6C1}",
      "\\mathbf{\\alpha}": "\u{1D6C2}",
      "\\mathbf{\\beta}": "\u{1D6C3}",
      "\\mathbf{\\gamma}": "\u{1D6C4}",
      "\\mathbf{\\delta}": "\u{1D6C5}",
      "\\mathbf{\\epsilon}": "\u{1D6C6}",
      "\\mathbf{\\zeta}": "\u{1D6C7}",
      "\\mathbf{\\eta}": "\u{1D6C8}",
      "\\mathbf{\\theta}": "\u{1D6C9}",
      "\\mathbf{\\lambda}": "\u{1D6CC}",
      "\\mathbf{\\xi}": "\u{1D6CF}",
      "\\mathbf{\\pi}": "\u{1D6D1}",
      "\\mathbf{\\varsigma}": "\u{1D6D3}",
      "\\mathbf{\\sigma}": "\u{1D6D4}",
      "\\mathbf{\\upsilon}": "\u{1D6D6}",
      "\\mathbf{\\phi}": "\u{1D6D7}",
      "\\mathbf{\\psi}": "\u{1D6D9}",
      "\\mathbf{\\omega}": "\u{1D6DA}",
      "\\mathbf{\\varkappa}": "\u{1D6DE}",
      "\\mathbf{\\varrho}": "\u{1D6E0}",
      "\\mathbf{\\varpi}": "\u{1D6E1}",
      "\\mathsl{\\Gamma}": "\u{1D6E4}",
      "\\mathsl{\\Delta}": "\u{1D6E5}",
      "\\mathsl{\\Lambda}": "\u{1D6EC}",
      "\\mathsl{\\Xi}": "\u{1D6EF}",
      "\\mathsl{\\Pi}": "\u{1D6F1}",
      "\\mathsl{\\Theta}": "\u{1D6F3}",
      "\\mathsl{\\Sigma}": "\u{1D6F4}",
      "\\mathsl{\\Upsilon}": "\u{1D6F6}",
      "\\mathsl{\\Phi}": "\u{1D6F7}",
      "\\mathsl{\\Psi}": "\u{1D6F9}",
      "\\mathsl{\\Omega}": "\u{1D6FA}",
      "\\mathsl{\\nabla}": "\u{1D6FB}",
      "\\mathsl{\\gamma}": "\u{1D6FE}",
      "\\mathsl{\\delta}": "\u{1D6FF}",
      "\\mathsl{\\theta}": "\u{1D703}",
      "\\mathsl{\\lambda}": "\u{1D706}",
      "\\mu": "\u{1D707}",
      "\\mathsl{\\xi}": "\u{1D709}",
      "\\mathsl{\\pi}": "\u{1D70B}",
      "\\mathsl{\\varsigma}": "\u{1D70D}",
      "\\mathsl{\\sigma}": "\u{1D70E}",
      "\\mathsl{\\upsilon}": "\u{1D710}",
      "\\mathsl{\\varphi}": "\u{1D711}",
      "\\mathsl{\\psi}": "\u{1D713}",
      "\\mathsl{\\omega}": "\u{1D714}",
      "\\mathsl{\\vartheta}": "\u{1D717}",
      "\\mathsl{\\varkappa}": "\u{1D718}",
      "\\mathsl{\\phi}": "\u{1D719}",
      "\\mathsl{\\varrho}": "\u{1D71A}",
      "\\mathsl{\\varpi}": "\u{1D71B}",
      "\\mathbit{\\Gamma}": "\u{1D71E}",
      "\\mathbit{\\Delta}": "\u{1D71F}",
      "\\mathbit{\\Theta}": "\u{1D723}",
      "\\mathbit{\\Lambda}": "\u{1D726}",
      "\\mathbit{\\Xi}": "\u{1D729}",
      "\\mathbit{\\Pi}": "\u{1D72B}",
      "\\mathbit{\\Sigma}": "\u{1D72E}",
      "\\mathbit{\\Upsilon}": "\u{1D730}",
      "\\mathbit{\\Phi}": "\u{1D731}",
      "\\mathbit{\\Psi}": "\u{1D733}",
      "\\mathbit{\\Omega}": "\u{1D734}",
      "\\mathbit{\\nabla}": "\u{1D735}",
      "\\mathbit{\\alpha}": "\u{1D736}",
      "\\mathbit{\\beta}": "\u{1D737}",
      "\\mathbit{\\gamma}": "\u{1D738}",
      "\\mathbit{\\delta}": "\u{1D739}",
      "\\mathbit{\\epsilon}": "\u{1D73A}",
      "\\mathbit{\\zeta}": "\u{1D73B}",
      "\\mathbit{\\eta}": "\u{1D73C}",
      "\\mathbit{\\theta}": "\u{1D73D}",
      "\\mathbit{\\imath}": "\u{1D73E}",
      "\\mathbit{\\kappa}": "\u{1D73F}",
      "\\mathbit{\\lambda}": "\u{1D740}",
      "\\mathbit{\\xi}": "\u{1D743}",
      "\\mathbit{\\pi}": "\u{1D745}",
      "\\mathbit{\\rho}": "\u{1D746}",
      "\\mathbit{\\varsigma}": "\u{1D747}",
      "\\mathbit{\\sigma}": "\u{1D748}",
      "\\mathbit{\\tau}": "\u{1D749}",
      "\\mathbit{\\upsilon}": "\u{1D74A}",
      "\\mathbit{\\varphi}": "\u{1D74B}",
      "\\mathbit{\\chi}": "\u{1D74C}",
      "\\mathbit{\\psi}": "\u{1D74D}",
      "\\mathbit{\\omega}": "\u{1D74E}",
      "\\mathbit{\\vartheta}": "\u{1D751}",
      "\\mathbit{\\varkappa}": "\u{1D752}",
      "\\mathbit{\\phi}": "\u{1D753}",
      "\\mathbit{\\varrho}": "\u{1D754}",
      "\\mathbit{\\varpi}": "\u{1D755}",
      "\\mathsfbf{\\Gamma}": "\u{1D758}",
      "\\mathsfbf{\\Delta}": "\u{1D759}",
      "\\mathsfbf{\\Theta}": "\u{1D75D}",
      "\\mathsfbf{\\Lambda}": "\u{1D760}",
      "\\mathsfbf{\\Xi}": "\u{1D763}",
      "\\mathsfbf{\\Pi}": "\u{1D765}",
      "\\mathsfbf{\\Sigma}": "\u{1D768}",
      "\\mathsfbf{\\Upsilon}": "\u{1D76A}",
      "\\mathsfbf{\\Phi}": "\u{1D76B}",
      "\\mathsfbf{\\Psi}": "\u{1D76D}",
      "\\mathsfbf{\\Omega}": "\u{1D76E}",
      "\\mathsfbf{\\nabla}": "\u{1D76F}",
      "\\mathsfbf{\\alpha}": "\u{1D770}",
      "\\mathsfbf{\\beta}": "\u{1D771}",
      "\\mathsfbf{\\gamma}": "\u{1D772}",
      "\\mathsfbf{\\delta}": "\u{1D773}",
      "\\mathsfbf{\\varepsilon}": "\u{1D774}",
      "\\mathsfbf{\\zeta}": "\u{1D775}",
      "\\mathsfbf{\\eta}": "\u{1D776}",
      "\\mathsfbf{\\theta}": "\u{1D777}",
      "\\mathsfbf{\\imath}": "\u{1D778}",
      "\\mathsfbf{\\kappa}": "\u{1D779}",
      "\\mathsfbf{\\lambda}": "\u{1D77A}",
      "\\mathsfbf{\\xi}": "\u{1D77D}",
      "\\mathsfbf{\\pi}": "\u{1D77F}",
      "\\mathsfbf{\\rho}": "\u{1D780}",
      "\\mathsfbf{\\varsigma}": "\u{1D781}",
      "\\mathsfbf{\\sigma}": "\u{1D782}",
      "\\mathsfbf{\\tau}": "\u{1D783}",
      "\\mathsfbf{\\upsilon}": "\u{1D784}",
      "\\mathsfbf{\\varphi}": "\u{1D785}",
      "\\mathsfbf{\\chi}": "\u{1D786}",
      "\\mathsfbf{\\psi}": "\u{1D787}",
      "\\mathsfbf{\\omega}": "\u{1D788}",
      "\\mathsfbf{\\vartheta}": "\u{1D78B}",
      "\\mathsfbf{\\varkappa}": "\u{1D78C}",
      "\\mathsfbf{\\phi}": "\u{1D78D}",
      "\\mathsfbf{\\varrho}": "\u{1D78E}",
      "\\mathsfbf{\\varpi}": "\u{1D78F}",
      "\\mathsfbfsl{\\Gamma}": "\u{1D792}",
      "\\mathsfbfsl{\\Delta}": "\u{1D793}",
      "\\mathsfbfsl{\\Theta}": "\u{1D797}",
      "\\mathsfbfsl{\\Lambda}": "\u{1D79A}",
      "\\mathsfbfsl{\\Xi}": "\u{1D79D}",
      "\\mathsfbfsl{\\Pi}": "\u{1D79F}",
      "\\mathsfbfsl{\\Sigma}": "\u{1D7A2}",
      "\\mathsfbfsl{\\Upsilon}": "\u{1D7A4}",
      "\\mathsfbfsl{\\Phi}": "\u{1D7A5}",
      "\\mathsfbfsl{\\Psi}": "\u{1D7A7}",
      "\\mathsfbfsl{\\Omega}": "\u{1D7A8}",
      "\\mathsfbfsl{\\nabla}": "\u{1D7A9}",
      "\\mathsfbfsl{\\alpha}": "\u{1D7AA}",
      "\\mathsfbfsl{\\beta}": "\u{1D7AB}",
      "\\mathsfbfsl{\\gamma}": "\u{1D7AC}",
      "\\mathsfbfsl{\\delta}": "\u{1D7AD}",
      "\\mathsfbfsl{\\varepsilon}": "\u{1D7AE}",
      "\\mathsfbfsl{\\zeta}": "\u{1D7AF}",
      "\\mathsfbfsl{\\eta}": "\u{1D7B0}",
      "\\mathsfbfsl{\\theta}": "\u{1D7B1}",
      "\\mathsfbfsl{\\imath}": "\u{1D7B2}",
      "\\mathsfbfsl{\\kappa}": "\u{1D7B3}",
      "\\mathsfbfsl{\\lambda}": "\u{1D7B4}",
      "\\mathsfbfsl{\\xi}": "\u{1D7B7}",
      "\\mathsfbfsl{\\pi}": "\u{1D7B9}",
      "\\mathsfbfsl{\\rho}": "\u{1D7BA}",
      "\\mathsfbfsl{\\varsigma}": "\u{1D7BB}",
      "\\mathsfbfsl{\\sigma}": "\u{1D7BC}",
      "\\mathsfbfsl{\\tau}": "\u{1D7BD}",
      "\\mathsfbfsl{\\upsilon}": "\u{1D7BE}",
      "\\mathsfbfsl{\\varphi}": "\u{1D7BF}",
      "\\mathsfbfsl{\\chi}": "\u{1D7C0}",
      "\\mathsfbfsl{\\psi}": "\u{1D7C1}",
      "\\mathsfbfsl{\\omega}": "\u{1D7C2}",
      "\\mathsfbfsl{\\vartheta}": "\u{1D7C5}",
      "\\mathsfbfsl{\\varkappa}": "\u{1D7C6}",
      "\\mathsfbfsl{\\phi}": "\u{1D7C7}",
      "\\mathsfbfsl{\\varrho}": "\u{1D7C8}",
      "\\mathsfbfsl{\\varpi}": "\u{1D7C9}",
      "\\mbfDigamma": "\u{1D7CA}",
      "\\mbfdigamma": "\u{1D7CB}",
      "\\mathbf{0}": "\u{1D7CE}",
      "\\mathbf{1}": "\u{1D7CF}",
      "\\mathbf{2}": "\u{1D7D0}",
      "\\mathbf{3}": "\u{1D7D1}",
      "\\mathbf{4}": "\u{1D7D2}",
      "\\mathbf{5}": "\u{1D7D3}",
      "\\mathbf{6}": "\u{1D7D4}",
      "\\mathbf{7}": "\u{1D7D5}",
      "\\mathbf{8}": "\u{1D7D6}",
      "\\mathbf{9}": "\u{1D7D7}",
      "\\mathbb{0}": "\u{1D7D8}",
      "\\mathbb{1}": "\u{1D7D9}",
      "\\mathbb{2}": "\u{1D7DA}",
      "\\mathbb{3}": "\u{1D7DB}",
      "\\mathbb{4}": "\u{1D7DC}",
      "\\mathbb{5}": "\u{1D7DD}",
      "\\mathbb{6}": "\u{1D7DE}",
      "\\mathbb{7}": "\u{1D7DF}",
      "\\mathbb{8}": "\u{1D7E0}",
      "\\mathbb{9}": "\u{1D7E1}",
      "\\mathsf{0}": "\u{1D7E2}",
      "\\mathsf{1}": "\u{1D7E3}",
      "\\mathsf{2}": "\u{1D7E4}",
      "\\mathsf{3}": "\u{1D7E5}",
      "\\mathsf{4}": "\u{1D7E6}",
      "\\mathsf{5}": "\u{1D7E7}",
      "\\mathsf{6}": "\u{1D7E8}",
      "\\mathsf{7}": "\u{1D7E9}",
      "\\mathsf{8}": "\u{1D7EA}",
      "\\mathsf{9}": "\u{1D7EB}",
      "\\mathsfbf{0}": "\u{1D7EC}",
      "\\mathsfbf{1}": "\u{1D7ED}",
      "\\mathsfbf{2}": "\u{1D7EE}",
      "\\mathsfbf{3}": "\u{1D7EF}",
      "\\mathsfbf{4}": "\u{1D7F0}",
      "\\mathsfbf{5}": "\u{1D7F1}",
      "\\mathsfbf{6}": "\u{1D7F2}",
      "\\mathsfbf{7}": "\u{1D7F3}",
      "\\mathsfbf{8}": "\u{1D7F4}",
      "\\mathsfbf{9}": "\u{1D7F5}",
      "\\mathtt{0}": "\u{1D7F6}",
      "\\mathtt{1}": "\u{1D7F7}",
      "\\mathtt{2}": "\u{1D7F8}",
      "\\mathtt{3}": "\u{1D7F9}",
      "\\mathtt{4}": "\u{1D7FA}",
      "\\mathtt{5}": "\u{1D7FB}",
      "\\mathtt{6}": "\u{1D7FC}",
      "\\mathtt{7}": "\u{1D7FD}",
      "\\mathtt{8}": "\u{1D7FE}",
      "\\mathtt{9}": "\u{1D7FF}"
    };
  }
});

// node_modules/unicode2latex/tables/diacritics.json
var require_diacritics = __commonJS({
  "node_modules/unicode2latex/tables/diacritics.json"(exports, module2) {
    module2.exports = {
      commands: [
        "acute",
        "bar",
        "breve",
        "c",
        "d",
        "ddot",
        "dot",
        "grave",
        "hat",
        "k",
        "mathring",
        "overline",
        "r",
        "textacutemacron",
        "textacutewedge",
        "textadvancing",
        "textbrevemacron",
        "textcircumdot",
        "textcorner",
        "textdotacute",
        "textdotbreve",
        "textdoublegrave",
        "textdoublevbaraccent",
        "textgravedot",
        "textgravemacron",
        "textinvsubbridge",
        "textlowering",
        "textovercross",
        "textraising",
        "textretracting",
        "textringmacron",
        "textseagull",
        "textsubarch",
        "textsubbar",
        "textsubbridge",
        "textsubgrave",
        "textsublhalfring",
        "textsubplus",
        "textsubrhalfring",
        "textsubring",
        "textsubsquare",
        "textsubtilde",
        "textsubumlaut",
        "textsubwedge",
        "textsuperimposetilde",
        "textsyllabic",
        "texttildedot",
        "textvbaraccent",
        "tilde",
        "u",
        "underbar",
        "v"
      ],
      tolatex: {
        "\u0300": {
          command: "`",
          mode: "text"
        },
        "\u0300\u0304": {
          command: "textgravemacron",
          mode: "text"
        },
        "\u0300\u0307": {
          command: "textgravedot",
          mode: "text"
        },
        "\u0301": {
          command: "'",
          mode: "text"
        },
        "\u0301\u0304": {
          command: "textacutemacron",
          mode: "text"
        },
        "\u0301\u0307": {
          command: "textdotacute",
          mode: "text"
        },
        "\u0301\u030C": {
          command: "textacutewedge",
          mode: "text"
        },
        "\u0302": {
          command: "^",
          mode: "text"
        },
        "\u0302\u0307": {
          command: "textcircumdot",
          mode: "text"
        },
        "\u0303": {
          command: "~",
          mode: "text"
        },
        "\u0303\u0307": {
          command: "texttildedot",
          mode: "text"
        },
        "\u0304": {
          command: "=",
          mode: "text"
        },
        "\u0304\u0300": {
          command: "textgravemacron",
          mode: "text"
        },
        "\u0304\u0301": {
          command: "textacutemacron",
          mode: "text"
        },
        "\u0304\u0306": {
          command: "textbrevemacron",
          mode: "text"
        },
        "\u0304\u030A": {
          command: "textringmacron",
          mode: "text"
        },
        "\u0305": {
          command: "overline",
          mode: "math"
        },
        "\u0306": {
          command: "u",
          mode: "text"
        },
        "\u0306\u0304": {
          command: "textbrevemacron",
          mode: "text"
        },
        "\u0306\u0307": {
          command: "textdotbreve",
          mode: "text"
        },
        "\u0307": {
          command: ".",
          mode: "text"
        },
        "\u0307\u0300": {
          command: "textgravedot",
          mode: "text"
        },
        "\u0307\u0301": {
          command: "textdotacute",
          mode: "text"
        },
        "\u0307\u0302": {
          command: "textcircumdot",
          mode: "text"
        },
        "\u0307\u0303": {
          command: "texttildedot",
          mode: "text"
        },
        "\u0307\u0306": {
          command: "textdotbreve",
          mode: "text"
        },
        "\u0308": {
          command: '"',
          mode: "text"
        },
        "\u030A": {
          command: "r",
          mode: "text"
        },
        "\u030A\u0304": {
          command: "textringmacron",
          mode: "text"
        },
        "\u030B": {
          command: "H",
          mode: "text"
        },
        "\u030C": {
          command: "v",
          mode: "text"
        },
        "\u030C\u0301": {
          command: "textacutewedge",
          mode: "text"
        },
        "\u030D": {
          command: "textvbaraccent",
          mode: "text"
        },
        "\u030E": {
          command: "textdoublevbaraccent",
          mode: "text"
        },
        "\u030F": {
          command: "textdoublegrave",
          mode: "text"
        },
        "\u0310": {
          command: "textdotbreve",
          mode: "text"
        },
        "\u0316": {
          command: "textsubgrave",
          mode: "text"
        },
        "\u0318": {
          command: "textadvancing",
          mode: "text"
        },
        "\u0319": {
          command: "textretracting",
          mode: "text"
        },
        "\u031A": {
          command: "textcorner",
          mode: "text"
        },
        "\u031C": {
          command: "textsublhalfring",
          mode: "text"
        },
        "\u031D": {
          command: "textraising",
          mode: "text"
        },
        "\u031E": {
          command: "textlowering",
          mode: "text"
        },
        "\u031F": {
          command: "textsubplus",
          mode: "text"
        },
        "\u0323": {
          command: "d",
          mode: "text"
        },
        "\u0324": {
          command: "textsubumlaut",
          mode: "text"
        },
        "\u0325": {
          command: "textsubring",
          mode: "text"
        },
        "\u0327": {
          command: "c",
          mode: "text"
        },
        "\u0328": {
          command: "k",
          mode: "text"
        },
        "\u0329": {
          command: "textsyllabic",
          mode: "text"
        },
        "\u032A": {
          command: "textsubbridge",
          mode: "text"
        },
        "\u032C": {
          command: "textsubwedge",
          mode: "text"
        },
        "\u032F": {
          command: "textsubarch",
          mode: "text"
        },
        "\u0330": {
          command: "textsubtilde",
          mode: "text"
        },
        "\u0331": {
          command: "textsubbar",
          mode: "text"
        },
        "\u0334": {
          command: "textsuperimposetilde",
          mode: "text"
        },
        "\u0339": {
          command: "textsubrhalfring",
          mode: "text"
        },
        "\u033A": {
          command: "textinvsubbridge",
          mode: "text"
        },
        "\u033B": {
          command: "textsubsquare",
          mode: "text"
        },
        "\u033C": {
          command: "textseagull",
          mode: "text"
        },
        "\u033D": {
          command: "textovercross",
          mode: "text"
        }
      },
      tounicode: {
        '"': "\u0308",
        "'": "\u0301",
        ".": "\u0307",
        "=": "\u0304",
        H: "\u030B",
        "^": "\u0302",
        "`": "\u0300",
        acute: "\u0301",
        bar: "\u0304",
        breve: "\u0306",
        c: "\u0327",
        d: "\u0323",
        ddot: "\u0308",
        dot: "\u0307",
        grave: "\u0300",
        hat: "\u0302",
        k: "\u0328",
        mathring: "\u030A",
        overline: "\u0305",
        r: "\u030A",
        textacutemacron: "\u0304\u0301",
        textacutewedge: "\u030C\u0301",
        textadvancing: "\u0318",
        textbrevemacron: "\u0304\u0306",
        textcircumdot: "\u0307\u0302",
        textcorner: "\u031A",
        textdotacute: "\u0301\u0307",
        textdotbreve: "\u0310",
        textdoublegrave: "\u030F",
        textdoublevbaraccent: "\u030E",
        textgravedot: "\u0307\u0300",
        textgravemacron: "\u0300\u0304",
        textinvsubbridge: "\u033A",
        textlowering: "\u031E",
        textovercross: "\u033D",
        textraising: "\u031D",
        textretracting: "\u0319",
        textringmacron: "\u0304\u030A",
        textseagull: "\u033C",
        textsubarch: "\u032F",
        textsubbar: "\u0331",
        textsubbridge: "\u032A",
        textsubgrave: "\u0316",
        textsublhalfring: "\u031C",
        textsubplus: "\u031F",
        textsubrhalfring: "\u0339",
        textsubring: "\u0325",
        textsubsquare: "\u033B",
        textsubtilde: "\u0330",
        textsubumlaut: "\u0324",
        textsubwedge: "\u032C",
        textsuperimposetilde: "\u0334",
        textsyllabic: "\u0329",
        texttildedot: "\u0307\u0303",
        textvbaraccent: "\u030D",
        tilde: "\u0303",
        u: "\u0306",
        underbar: "\u0331",
        v: "\u030C",
        "~": "\u0303"
      }
    };
  }
});

// node_modules/unicode2latex/index.js
var require_unicode2latex = __commonJS({
  "node_modules/unicode2latex/index.js"(exports, module2) {
    module2.exports = {
      ascii: require_ascii(),
      ascii_bibtex_creator: require_ascii_bibtex_creator(),
      unicode: require_unicode(),
      latex: require_latex(),
      diacritics: require_diacritics()
    };
  }
});

// node_modules/@retorquere/bibtex-parser/crossref.json
var require_crossref = __commonJS({
  "node_modules/@retorquere/bibtex-parser/crossref.json"(exports, module2) {
    module2.exports = {
      "*": {
        "*": {
          verbb: "verba"
        }
      },
      article: {
        periodical: {
          journalsubtitle: "subtitle",
          journaltitle: "title"
        }
      },
      book: {
        mvbook: {
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        }
      },
      bookinbook: {
        book: {
          author: "author",
          bookauthor: "author",
          booksubtitle: "subtitle",
          booktitle: "title",
          booktitleaddon: "titleaddon"
        },
        mvbook: {
          author: "author",
          bookauthor: "author",
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        }
      },
      collection: {
        mvcollection: {
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        },
        mvreference: {
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        }
      },
      inbook: {
        "*": {
          bookauthor: "author"
        },
        book: {
          author: "author",
          bookauthor: "author",
          booksubtitle: "subtitle",
          booktitle: "title",
          booktitleaddon: "titleaddon"
        },
        mvbook: {
          author: "author",
          bookauthor: "author",
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        }
      },
      incollection: {
        collection: {
          booksubtitle: "subtitle",
          booktitle: "title",
          booktitleaddon: "titleaddon"
        },
        mvcollection: {
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        },
        mvreference: {
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        },
        reference: {
          booksubtitle: "subtitle",
          booktitle: "title",
          booktitleaddon: "titleaddon"
        }
      },
      inproceedings: {
        mvproceedings: {
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        },
        proceedings: {
          booksubtitle: "subtitle",
          booktitle: "title",
          booktitleaddon: "titleaddon"
        }
      },
      inreference: {
        collection: {
          booksubtitle: "subtitle",
          booktitle: "title",
          booktitleaddon: "titleaddon"
        },
        mvcollection: {
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        },
        mvreference: {
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        },
        reference: {
          booksubtitle: "subtitle",
          booktitle: "title",
          booktitleaddon: "titleaddon"
        }
      },
      proceedings: {
        mvproceedings: {
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        }
      },
      reference: {
        mvcollection: {
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        },
        mvreference: {
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        }
      },
      suppbook: {
        book: {
          author: "author",
          bookauthor: "author",
          booksubtitle: "subtitle",
          booktitle: "title",
          booktitleaddon: "titleaddon"
        },
        mvbook: {
          author: "author",
          bookauthor: "author",
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        }
      },
      suppcollection: {
        collection: {
          booksubtitle: "subtitle",
          booktitle: "title",
          booktitleaddon: "titleaddon"
        },
        mvcollection: {
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        },
        mvreference: {
          mainsubtitle: "subtitle",
          maintitle: "title",
          maintitleaddon: "titleaddon"
        },
        reference: {
          booksubtitle: "subtitle",
          booktitle: "title",
          booktitleaddon: "titleaddon"
        }
      },
      suppperiodical: {
        periodical: {
          journalsubtitle: "subtitle",
          journaltitle: "title"
        }
      }
    };
  }
});

// node_modules/@retorquere/bibtex-parser/fields.json
var require_fields = __commonJS({
  "node_modules/@retorquere/bibtex-parser/fields.json"(exports, module2) {
    module2.exports = {
      article: [
        "abstract",
        "addendum",
        "annotation",
        "annotator",
        "author",
        "authortype",
        "bookpagination",
        "commentator",
        "crossref",
        "day",
        "doi",
        "editor",
        "editora",
        "editoratype",
        "editorb",
        "editorbtype",
        "editorc",
        "editorctype",
        "editortype",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "issn",
        "issue",
        "issuesubtitle",
        "issuetitle",
        "issuetitleaddon",
        "iswc",
        "journalsubtitle",
        "journaltitle",
        "journaltitleaddon",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlanguage",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagination",
        "presort",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "translator",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "version",
        "volume",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      artwork: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      audio: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      bibnote: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      book: [
        "abstract",
        "addendum",
        "afterword",
        "annotation",
        "annotator",
        "author",
        "authortype",
        "bookpagination",
        "chapter",
        "commentator",
        "crossref",
        "day",
        "doi",
        "edition",
        "editor",
        "editora",
        "editoratype",
        "editorb",
        "editorbtype",
        "editorc",
        "editorctype",
        "editortype",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "foreword",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "introduction",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "mainsubtitle",
        "maintitle",
        "maintitleaddon",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlanguage",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagetotal",
        "pagination",
        "part",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "translator",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "volume",
        "volumes",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      bookinbook: [
        "abstract",
        "addendum",
        "afterword",
        "annotation",
        "annotator",
        "author",
        "authortype",
        "bookauthor",
        "bookpagination",
        "booksubtitle",
        "booktitle",
        "booktitleaddon",
        "chapter",
        "commentator",
        "crossref",
        "day",
        "doi",
        "edition",
        "editor",
        "editora",
        "editoratype",
        "editorb",
        "editorbtype",
        "editorc",
        "editorctype",
        "editortype",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "foreword",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "introduction",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "mainsubtitle",
        "maintitle",
        "maintitleaddon",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlanguage",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagination",
        "part",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "translator",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "volume",
        "volumes",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      booklet: [
        "abstract",
        "addendum",
        "annotation",
        "author",
        "authortype",
        "bookpagination",
        "chapter",
        "crossref",
        "day",
        "doi",
        "editor",
        "editortype",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "howpublished",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagetotal",
        "pagination",
        "presort",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "type",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      collection: [
        "abstract",
        "addendum",
        "afterword",
        "annotation",
        "annotator",
        "authortype",
        "bookpagination",
        "chapter",
        "commentator",
        "crossref",
        "day",
        "doi",
        "edition",
        "editor",
        "editora",
        "editoratype",
        "editorb",
        "editorbtype",
        "editorc",
        "editorctype",
        "editortype",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "foreword",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "introduction",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "mainsubtitle",
        "maintitle",
        "maintitleaddon",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlanguage",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagetotal",
        "pagination",
        "part",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "translator",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "volume",
        "volumes",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      commentary: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      customa: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      customb: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      customc: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      customd: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      custome: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      customf: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      dataset: [
        "abstract",
        "addendum",
        "annotation",
        "author",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "edition",
        "editor",
        "editortype",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "organization",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "type",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "version",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      image: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      inbook: [
        "abstract",
        "addendum",
        "afterword",
        "annotation",
        "annotator",
        "author",
        "authortype",
        "bookauthor",
        "bookpagination",
        "booksubtitle",
        "booktitle",
        "booktitleaddon",
        "chapter",
        "commentator",
        "crossref",
        "day",
        "doi",
        "edition",
        "editor",
        "editora",
        "editoratype",
        "editorb",
        "editorbtype",
        "editorc",
        "editorctype",
        "editortype",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "foreword",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "introduction",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "mainsubtitle",
        "maintitle",
        "maintitleaddon",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlanguage",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagination",
        "part",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "translator",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "volume",
        "volumes",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      incollection: [
        "abstract",
        "addendum",
        "afterword",
        "annotation",
        "annotator",
        "author",
        "authortype",
        "bookpagination",
        "booksubtitle",
        "booktitle",
        "booktitleaddon",
        "chapter",
        "commentator",
        "crossref",
        "day",
        "doi",
        "edition",
        "editor",
        "editora",
        "editoratype",
        "editorb",
        "editorbtype",
        "editorc",
        "editorctype",
        "editortype",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "foreword",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "introduction",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "mainsubtitle",
        "maintitle",
        "maintitleaddon",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlanguage",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagination",
        "part",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "translator",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "volume",
        "volumes",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      inproceedings: [
        "abstract",
        "addendum",
        "annotation",
        "author",
        "authortype",
        "bookpagination",
        "booksubtitle",
        "booktitle",
        "booktitleaddon",
        "chapter",
        "crossref",
        "day",
        "doi",
        "editor",
        "editortype",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "eventday",
        "eventendday",
        "eventendhour",
        "eventendminute",
        "eventendmonth",
        "eventendsecond",
        "eventendtimezone",
        "eventendyear",
        "eventendyeardivision",
        "eventhour",
        "eventminute",
        "eventmonth",
        "eventsecond",
        "eventtimezone",
        "eventtitle",
        "eventtitleaddon",
        "eventyear",
        "eventyeardivision",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "mainsubtitle",
        "maintitle",
        "maintitleaddon",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "organization",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagination",
        "part",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "venue",
        "verba",
        "verbb",
        "verbc",
        "volume",
        "volumes",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      inreference: [
        "abstract",
        "addendum",
        "afterword",
        "annotation",
        "annotator",
        "author",
        "authortype",
        "bookpagination",
        "booksubtitle",
        "booktitle",
        "booktitleaddon",
        "chapter",
        "commentator",
        "crossref",
        "day",
        "doi",
        "edition",
        "editor",
        "editora",
        "editoratype",
        "editorb",
        "editorbtype",
        "editorc",
        "editorctype",
        "editortype",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "foreword",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "introduction",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "mainsubtitle",
        "maintitle",
        "maintitleaddon",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlanguage",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagination",
        "part",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "translator",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "volume",
        "volumes",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      jurisdiction: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      legal: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      legislation: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      letter: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      manual: [
        "abstract",
        "addendum",
        "annotation",
        "author",
        "authortype",
        "bookpagination",
        "chapter",
        "crossref",
        "day",
        "doi",
        "edition",
        "editor",
        "editortype",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "organization",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagetotal",
        "pagination",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "type",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "version",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      misc: [
        "abstract",
        "addendum",
        "annotation",
        "author",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "editor",
        "editortype",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "howpublished",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "options",
        "organization",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "type",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "version",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      movie: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      music: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      mvbook: [
        "abstract",
        "addendum",
        "afterword",
        "annotation",
        "annotator",
        "author",
        "authortype",
        "bookpagination",
        "commentator",
        "crossref",
        "day",
        "doi",
        "edition",
        "editor",
        "editora",
        "editoratype",
        "editorb",
        "editorbtype",
        "editorc",
        "editorctype",
        "editortype",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "foreword",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "introduction",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlanguage",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagetotal",
        "pagination",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "translator",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "volume",
        "volumes",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      mvcollection: [
        "abstract",
        "addendum",
        "afterword",
        "annotation",
        "annotator",
        "author",
        "authortype",
        "bookpagination",
        "commentator",
        "crossref",
        "day",
        "doi",
        "edition",
        "editor",
        "editora",
        "editoratype",
        "editorb",
        "editorbtype",
        "editorc",
        "editorctype",
        "editortype",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "foreword",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "introduction",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlanguage",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "translator",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "volume",
        "volumes",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      mvproceedings: [
        "abstract",
        "addendum",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "editor",
        "editortype",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "eventday",
        "eventendday",
        "eventendhour",
        "eventendminute",
        "eventendmonth",
        "eventendsecond",
        "eventendtimezone",
        "eventendyear",
        "eventendyeardivision",
        "eventhour",
        "eventminute",
        "eventmonth",
        "eventsecond",
        "eventtimezone",
        "eventtitle",
        "eventtitleaddon",
        "eventyear",
        "eventyeardivision",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "organization",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagetotal",
        "pagination",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "venue",
        "verba",
        "verbb",
        "verbc",
        "volumes",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      mvreference: [
        "abstract",
        "addendum",
        "afterword",
        "annotation",
        "annotator",
        "author",
        "authortype",
        "bookpagination",
        "commentator",
        "crossref",
        "day",
        "doi",
        "edition",
        "editor",
        "editora",
        "editoratype",
        "editorb",
        "editorbtype",
        "editorc",
        "editorctype",
        "editortype",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "foreword",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "introduction",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlanguage",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "translator",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "volume",
        "volumes",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      online: [
        "abstract",
        "addendum",
        "annotation",
        "author",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "editor",
        "editortype",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "options",
        "organization",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "version",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      patent: [
        "abstract",
        "addendum",
        "annotation",
        "author",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "holder",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "type",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "version",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      performance: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      periodical: [
        "abstract",
        "addendum",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "editor",
        "editora",
        "editoratype",
        "editorb",
        "editorbtype",
        "editorc",
        "editorctype",
        "editortype",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "issn",
        "issue",
        "issuesubtitle",
        "issuetitle",
        "issuetitleaddon",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "volume",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      proceedings: [
        "abstract",
        "addendum",
        "annotation",
        "authortype",
        "bookpagination",
        "chapter",
        "crossref",
        "day",
        "doi",
        "editor",
        "editortype",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "eventday",
        "eventendday",
        "eventendhour",
        "eventendminute",
        "eventendmonth",
        "eventendsecond",
        "eventendtimezone",
        "eventendyear",
        "eventendyeardivision",
        "eventhour",
        "eventminute",
        "eventmonth",
        "eventsecond",
        "eventtimezone",
        "eventtitle",
        "eventtitleaddon",
        "eventyear",
        "eventyeardivision",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "mainsubtitle",
        "maintitle",
        "maintitleaddon",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "organization",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagetotal",
        "pagination",
        "part",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "venue",
        "verba",
        "verbb",
        "verbc",
        "volume",
        "volumes",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      reference: [
        "abstract",
        "addendum",
        "afterword",
        "annotation",
        "annotator",
        "authortype",
        "bookpagination",
        "chapter",
        "commentator",
        "crossref",
        "day",
        "doi",
        "edition",
        "editor",
        "editora",
        "editoratype",
        "editorb",
        "editorbtype",
        "editorc",
        "editorctype",
        "editortype",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "foreword",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "introduction",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "mainsubtitle",
        "maintitle",
        "maintitleaddon",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlanguage",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagetotal",
        "pagination",
        "part",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "translator",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "volume",
        "volumes",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      report: [
        "abstract",
        "addendum",
        "annotation",
        "author",
        "authortype",
        "bookpagination",
        "chapter",
        "crossref",
        "day",
        "doi",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "institution",
        "isan",
        "ismn",
        "isrn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagetotal",
        "pagination",
        "presort",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "type",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "version",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      review: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      set: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      software: [
        "abstract",
        "addendum",
        "annotation",
        "author",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "editor",
        "editortype",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "howpublished",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "options",
        "organization",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "type",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "version",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      standard: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      suppbook: [
        "abstract",
        "addendum",
        "afterword",
        "annotation",
        "annotator",
        "author",
        "authortype",
        "bookauthor",
        "bookpagination",
        "booksubtitle",
        "booktitle",
        "booktitleaddon",
        "chapter",
        "commentator",
        "crossref",
        "day",
        "doi",
        "edition",
        "editor",
        "editora",
        "editoratype",
        "editorb",
        "editorbtype",
        "editorc",
        "editorctype",
        "editortype",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "foreword",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "introduction",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "mainsubtitle",
        "maintitle",
        "maintitleaddon",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlanguage",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagination",
        "part",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "translator",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "volume",
        "volumes",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      suppcollection: [
        "abstract",
        "addendum",
        "afterword",
        "annotation",
        "annotator",
        "author",
        "authortype",
        "bookpagination",
        "booksubtitle",
        "booktitle",
        "booktitleaddon",
        "chapter",
        "commentator",
        "crossref",
        "day",
        "doi",
        "edition",
        "editor",
        "editora",
        "editoratype",
        "editorb",
        "editorbtype",
        "editorc",
        "editorctype",
        "editortype",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "foreword",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "introduction",
        "isan",
        "isbn",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "mainsubtitle",
        "maintitle",
        "maintitleaddon",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "number",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlanguage",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagination",
        "part",
        "presort",
        "publisher",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "series",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "translator",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "volume",
        "volumes",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      suppperiodical: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      thesis: [
        "abstract",
        "addendum",
        "annotation",
        "author",
        "authortype",
        "bookpagination",
        "chapter",
        "crossref",
        "day",
        "doi",
        "eid",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "institution",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pages",
        "pagetotal",
        "pagination",
        "presort",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "type",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      unpublished: [
        "abstract",
        "addendum",
        "annotation",
        "author",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "eventday",
        "eventendday",
        "eventendhour",
        "eventendminute",
        "eventendmonth",
        "eventendsecond",
        "eventendtimezone",
        "eventendyear",
        "eventendyeardivision",
        "eventhour",
        "eventminute",
        "eventmonth",
        "eventsecond",
        "eventtimezone",
        "eventtitle",
        "eventtitleaddon",
        "eventyear",
        "eventyeardivision",
        "execute",
        "file",
        "gender",
        "hour",
        "howpublished",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "language",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "location",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "note",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "pubstate",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "subtitle",
        "timezone",
        "title",
        "titleaddon",
        "type",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "venue",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      video: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ],
      xdata: [
        "abstract",
        "annotation",
        "authortype",
        "bookpagination",
        "crossref",
        "day",
        "doi",
        "endday",
        "endhour",
        "endminute",
        "endmonth",
        "endsecond",
        "endtimezone",
        "endyear",
        "endyeardivision",
        "entryset",
        "entrysubtype",
        "eprint",
        "eprintclass",
        "eprinttype",
        "execute",
        "file",
        "gender",
        "hour",
        "ids",
        "indexsorttitle",
        "indextitle",
        "isan",
        "ismn",
        "iswc",
        "keywords",
        "label",
        "langid",
        "langidopts",
        "library",
        "lista",
        "listb",
        "listc",
        "listd",
        "liste",
        "listf",
        "minute",
        "month",
        "namea",
        "nameaddon",
        "nameatype",
        "nameb",
        "namebtype",
        "namec",
        "namectype",
        "options",
        "origday",
        "origendday",
        "origendhour",
        "origendminute",
        "origendmonth",
        "origendsecond",
        "origendtimezone",
        "origendyear",
        "origendyeardivision",
        "orighour",
        "origlocation",
        "origminute",
        "origmonth",
        "origpublisher",
        "origsecond",
        "origtimezone",
        "origtitle",
        "origyear",
        "origyeardivision",
        "pagination",
        "presort",
        "related",
        "relatedoptions",
        "relatedstring",
        "relatedtype",
        "second",
        "shortauthor",
        "shorteditor",
        "shorthand",
        "shorthandintro",
        "shortjournal",
        "shortseries",
        "shorttitle",
        "sortkey",
        "sortname",
        "sortshorthand",
        "sorttitle",
        "sortyear",
        "timezone",
        "url",
        "urlday",
        "urlendday",
        "urlendhour",
        "urlendminute",
        "urlendmonth",
        "urlendsecond",
        "urlendtimezone",
        "urlendyear",
        "urlhour",
        "urlminute",
        "urlmonth",
        "urlsecond",
        "urltimezone",
        "urlyear",
        "usera",
        "userb",
        "userc",
        "userd",
        "usere",
        "userf",
        "verba",
        "verbb",
        "verbc",
        "xdata",
        "xref",
        "year",
        "yeardivision"
      ]
    };
  }
});

// node_modules/xregexp/tools/output/categories.js
var require_categories = __commonJS({
  "node_modules/xregexp/tools/output/categories.js"(exports, module2) {
    module2.exports = [
      {
        "name": "C",
        "alias": "Other",
        "isBmpLast": true,
        "bmp": "\0-\x7F-\x9F\xAD\u0378\u0379\u0380-\u0383\u038B\u038D\u03A2\u0530\u0557\u0558\u058B\u058C\u0590\u05C8-\u05CF\u05EB-\u05EE\u05F5-\u0605\u061C\u06DD\u070E\u070F\u074B\u074C\u07B2-\u07BF\u07FB\u07FC\u082E\u082F\u083F\u085C\u085D\u085F\u086B-\u086F\u088F-\u0897\u08E2\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA\u09BB\u09C5\u09C6\u09C9\u09CA\u09CF-\u09D6\u09D8-\u09DB\u09DE\u09E4\u09E5\u09FF\u0A00\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A\u0A3B\u0A3D\u0A43-\u0A46\u0A49\u0A4A\u0A4E-\u0A50\u0A52-\u0A58\u0A5D\u0A5F-\u0A65\u0A77-\u0A80\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA\u0ABB\u0AC6\u0ACA\u0ACE\u0ACF\u0AD1-\u0ADF\u0AE4\u0AE5\u0AF2-\u0AF8\u0B00\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A\u0B3B\u0B45\u0B46\u0B49\u0B4A\u0B4E-\u0B54\u0B58-\u0B5B\u0B5E\u0B64\u0B65\u0B78-\u0B81\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BBD\u0BC3-\u0BC5\u0BC9\u0BCE\u0BCF\u0BD1-\u0BD6\u0BD8-\u0BE5\u0BFB-\u0BFF\u0C0D\u0C11\u0C29\u0C3A\u0C3B\u0C45\u0C49\u0C4E-\u0C54\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C64\u0C65\u0C70-\u0C76\u0C8D\u0C91\u0CA9\u0CB4\u0CBA\u0CBB\u0CC5\u0CC9\u0CCE-\u0CD4\u0CD7-\u0CDC\u0CDF\u0CE4\u0CE5\u0CF0\u0CF3-\u0CFF\u0D0D\u0D11\u0D45\u0D49\u0D50-\u0D53\u0D64\u0D65\u0D80\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0DC9\u0DCB-\u0DCE\u0DD5\u0DD7\u0DE0-\u0DE5\u0DF0\u0DF1\u0DF5-\u0E00\u0E3B-\u0E3E\u0E5C-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EBE\u0EBF\u0EC5\u0EC7\u0ECE\u0ECF\u0EDA\u0EDB\u0EE0-\u0EFF\u0F48\u0F6D-\u0F70\u0F98\u0FBD\u0FCD\u0FDB-\u0FFF\u10C6\u10C8-\u10CC\u10CE\u10CF\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B\u135C\u137D-\u137F\u139A-\u139F\u13F6\u13F7\u13FE\u13FF\u169D-\u169F\u16F9-\u16FF\u1716-\u171E\u1737-\u173F\u1754-\u175F\u176D\u1771\u1774-\u177F\u17DE\u17DF\u17EA-\u17EF\u17FA-\u17FF\u180E\u181A-\u181F\u1879-\u187F\u18AB-\u18AF\u18F6-\u18FF\u191F\u192C-\u192F\u193C-\u193F\u1941-\u1943\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19CF\u19DB-\u19DD\u1A1C\u1A1D\u1A5F\u1A7D\u1A7E\u1A8A-\u1A8F\u1A9A-\u1A9F\u1AAE\u1AAF\u1ACF-\u1AFF\u1B4D-\u1B4F\u1B7F\u1BF4-\u1BFB\u1C38-\u1C3A\u1C4A-\u1C4C\u1C89-\u1C8F\u1CBB\u1CBC\u1CC8-\u1CCF\u1CFB-\u1CFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FC5\u1FD4\u1FD5\u1FDC\u1FF0\u1FF1\u1FF5\u1FFF\u200B-\u200F\u202A-\u202E\u2060-\u206F\u2072\u2073\u208F\u209D-\u209F\u20C1-\u20CF\u20F1-\u20FF\u218C-\u218F\u2427-\u243F\u244B-\u245F\u2B74\u2B75\u2B96\u2CF4-\u2CF8\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D71-\u2D7E\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF\u2E5E-\u2E7F\u2E9A\u2EF4-\u2EFF\u2FD6-\u2FEF\u2FFC-\u2FFF\u3040\u3097\u3098\u3100-\u3104\u3130\u318F\u31E4-\u31EF\u321F\uA48D-\uA48F\uA4C7-\uA4CF\uA62C-\uA63F\uA6F8-\uA6FF\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA82D-\uA82F\uA83A-\uA83F\uA878-\uA87F\uA8C6-\uA8CD\uA8DA-\uA8DF\uA954-\uA95E\uA97D-\uA97F\uA9CE\uA9DA-\uA9DD\uA9FF\uAA37-\uAA3F\uAA4E\uAA4F\uAA5A\uAA5B\uAAC3-\uAADA\uAAF7-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB6C-\uAB6F\uABEE\uABEF\uABFA-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBC3-\uFBD2\uFD90\uFD91\uFDC8-\uFDCE\uFDD0-\uFDEF\uFE1A-\uFE1F\uFE53\uFE67\uFE6C-\uFE6F\uFE75\uFEFD-\uFF00\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFDF\uFFE7\uFFEF-\uFFFB\uFFFE\uFFFF",
        "astral": "\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDCFF\uDD03-\uDD06\uDD34-\uDD36\uDD8F\uDD9D-\uDD9F\uDDA1-\uDDCF\uDDFE-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEDF\uDEFC-\uDEFF\uDF24-\uDF2C\uDF4B-\uDF4F\uDF7B-\uDF7F\uDF9E\uDFC4-\uDFC7\uDFD6-\uDFFF]|\uD801[\uDC9E\uDC9F\uDCAA-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6E\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56\uDC9F-\uDCA6\uDCB0-\uDCDF\uDCF3\uDCF6-\uDCFA\uDD1C-\uDD1E\uDD3A-\uDD3E\uDD40-\uDD7F\uDDB8-\uDDBB\uDDD0\uDDD1\uDE04\uDE07-\uDE0B\uDE14\uDE18\uDE36\uDE37\uDE3B-\uDE3E\uDE49-\uDE4F\uDE59-\uDE5F\uDEA0-\uDEBF\uDEE7-\uDEEA\uDEF7-\uDEFF\uDF36-\uDF38\uDF56\uDF57\uDF73-\uDF77\uDF92-\uDF98\uDF9D-\uDFA8\uDFB0-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCF9\uDD28-\uDD2F\uDD3A-\uDE5F\uDE7F\uDEAA\uDEAE\uDEAF\uDEB2-\uDEFF\uDF28-\uDF2F\uDF5A-\uDF6F\uDF8A-\uDFAF\uDFCC-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC4E-\uDC51\uDC76-\uDC7E\uDCBD\uDCC3-\uDCCF\uDCE9-\uDCEF\uDCFA-\uDCFF\uDD35\uDD48-\uDD4F\uDD77-\uDD7F\uDDE0\uDDF5-\uDDFF\uDE12\uDE3F-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEAA-\uDEAF\uDEEB-\uDEEF\uDEFA-\uDEFF\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A\uDF45\uDF46\uDF49\uDF4A\uDF4E\uDF4F\uDF51-\uDF56\uDF58-\uDF5C\uDF64\uDF65\uDF6D-\uDF6F\uDF75-\uDFFF]|\uD805[\uDC5C\uDC62-\uDC7F\uDCC8-\uDCCF\uDCDA-\uDD7F\uDDB6\uDDB7\uDDDE-\uDDFF\uDE45-\uDE4F\uDE5A-\uDE5F\uDE6D-\uDE7F\uDEBA-\uDEBF\uDECA-\uDEFF\uDF1B\uDF1C\uDF2C-\uDF2F\uDF47-\uDFFF]|\uD806[\uDC3C-\uDC9F\uDCF3-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD36\uDD39\uDD3A\uDD47-\uDD4F\uDD5A-\uDD9F\uDDA8\uDDA9\uDDD8\uDDD9\uDDE5-\uDDFF\uDE48-\uDE4F\uDEA3-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC37\uDC46-\uDC4F\uDC6D-\uDC6F\uDC90\uDC91\uDCA8\uDCB7-\uDCFF\uDD07\uDD0A\uDD37-\uDD39\uDD3B\uDD3E\uDD48-\uDD4F\uDD5A-\uDD5F\uDD66\uDD69\uDD8F\uDD92\uDD99-\uDD9F\uDDAA-\uDEDF\uDEF9-\uDFAF\uDFB1-\uDFBF\uDFF2-\uDFFE]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC6F\uDC75-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD832\uD83F\uD87B-\uD87D\uD87F\uD885-\uDB3F\uDB41-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF3-\uDFFF]|\uD80D[\uDC2F-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F\uDE6A-\uDE6D\uDEBF\uDECA-\uDECF\uDEEE\uDEEF\uDEF6-\uDEFF\uDF46-\uDF4F\uDF5A\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE9B-\uDEFF\uDF4B-\uDF4E\uDF88-\uDF8E\uDFA0-\uDFDF\uDFE5-\uDFEF\uDFF2-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD4F\uDD53-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A\uDC9B\uDCA0-\uDFFF]|\uD833[\uDC00-\uDEFF\uDF2E\uDF2F\uDF47-\uDF4F\uDFC4-\uDFFF]|\uD834[\uDCF6-\uDCFF\uDD27\uDD28\uDD73-\uDD7A\uDDEB-\uDDFF\uDE46-\uDEDF\uDEF4-\uDEFF\uDF57-\uDF5F\uDF79-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]|\uD836[\uDE8C-\uDE9A\uDEA0\uDEB0-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDFFF]|\uD838[\uDC07\uDC19\uDC1A\uDC22\uDC25\uDC2B-\uDCFF\uDD2D-\uDD2F\uDD3E\uDD3F\uDD4A-\uDD4D\uDD50-\uDE8F\uDEAF-\uDEBF\uDEFA-\uDEFE\uDF00-\uDFFF]|\uD839[\uDC00-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5\uDCC6\uDCD7-\uDCFF\uDD4C-\uDD4F\uDD5A-\uDD5D\uDD60-\uDFFF]|\uD83B[\uDC00-\uDC70\uDCB5-\uDD00\uDD3E-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDEEF\uDEF2-\uDFFF]|\uD83C[\uDC2C-\uDC2F\uDC94-\uDC9F\uDCAF\uDCB0\uDCC0\uDCD0\uDCF6-\uDCFF\uDDAE-\uDDE5\uDE03-\uDE0F\uDE3C-\uDE3F\uDE49-\uDE4F\uDE52-\uDE5F\uDE66-\uDEFF]|\uD83D[\uDED8-\uDEDC\uDEED-\uDEEF\uDEFD-\uDEFF\uDF74-\uDF7F\uDFD9-\uDFDF\uDFEC-\uDFEF\uDFF1-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE\uDCAF\uDCB2-\uDCFF\uDE54-\uDE5F\uDE6E\uDE6F\uDE75-\uDE77\uDE7D-\uDE7F\uDE87-\uDE8F\uDEAD-\uDEAF\uDEBB-\uDEBF\uDEC6-\uDECF\uDEDA-\uDEDF\uDEE8-\uDEEF\uDEF7-\uDEFF\uDF93\uDFCB-\uDFEF\uDFFA-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF39-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDFFF]|\uDB40[\uDC00-\uDCFF\uDDF0-\uDFFF]"
      },
      {
        "name": "Cc",
        "alias": "Control",
        "bmp": "\0-\x7F-\x9F"
      },
      {
        "name": "Cf",
        "alias": "Format",
        "bmp": "\xAD\u0600-\u0605\u061C\u06DD\u070F\u0890\u0891\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB",
        "astral": "\uD804[\uDCBD\uDCCD]|\uD80D[\uDC30-\uDC38]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]"
      },
      {
        "name": "Cn",
        "alias": "Unassigned",
        "bmp": "\u0378\u0379\u0380-\u0383\u038B\u038D\u03A2\u0530\u0557\u0558\u058B\u058C\u0590\u05C8-\u05CF\u05EB-\u05EE\u05F5-\u05FF\u070E\u074B\u074C\u07B2-\u07BF\u07FB\u07FC\u082E\u082F\u083F\u085C\u085D\u085F\u086B-\u086F\u088F\u0892-\u0897\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA\u09BB\u09C5\u09C6\u09C9\u09CA\u09CF-\u09D6\u09D8-\u09DB\u09DE\u09E4\u09E5\u09FF\u0A00\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A\u0A3B\u0A3D\u0A43-\u0A46\u0A49\u0A4A\u0A4E-\u0A50\u0A52-\u0A58\u0A5D\u0A5F-\u0A65\u0A77-\u0A80\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA\u0ABB\u0AC6\u0ACA\u0ACE\u0ACF\u0AD1-\u0ADF\u0AE4\u0AE5\u0AF2-\u0AF8\u0B00\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A\u0B3B\u0B45\u0B46\u0B49\u0B4A\u0B4E-\u0B54\u0B58-\u0B5B\u0B5E\u0B64\u0B65\u0B78-\u0B81\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BBD\u0BC3-\u0BC5\u0BC9\u0BCE\u0BCF\u0BD1-\u0BD6\u0BD8-\u0BE5\u0BFB-\u0BFF\u0C0D\u0C11\u0C29\u0C3A\u0C3B\u0C45\u0C49\u0C4E-\u0C54\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C64\u0C65\u0C70-\u0C76\u0C8D\u0C91\u0CA9\u0CB4\u0CBA\u0CBB\u0CC5\u0CC9\u0CCE-\u0CD4\u0CD7-\u0CDC\u0CDF\u0CE4\u0CE5\u0CF0\u0CF3-\u0CFF\u0D0D\u0D11\u0D45\u0D49\u0D50-\u0D53\u0D64\u0D65\u0D80\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0DC9\u0DCB-\u0DCE\u0DD5\u0DD7\u0DE0-\u0DE5\u0DF0\u0DF1\u0DF5-\u0E00\u0E3B-\u0E3E\u0E5C-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EBE\u0EBF\u0EC5\u0EC7\u0ECE\u0ECF\u0EDA\u0EDB\u0EE0-\u0EFF\u0F48\u0F6D-\u0F70\u0F98\u0FBD\u0FCD\u0FDB-\u0FFF\u10C6\u10C8-\u10CC\u10CE\u10CF\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B\u135C\u137D-\u137F\u139A-\u139F\u13F6\u13F7\u13FE\u13FF\u169D-\u169F\u16F9-\u16FF\u1716-\u171E\u1737-\u173F\u1754-\u175F\u176D\u1771\u1774-\u177F\u17DE\u17DF\u17EA-\u17EF\u17FA-\u17FF\u181A-\u181F\u1879-\u187F\u18AB-\u18AF\u18F6-\u18FF\u191F\u192C-\u192F\u193C-\u193F\u1941-\u1943\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19CF\u19DB-\u19DD\u1A1C\u1A1D\u1A5F\u1A7D\u1A7E\u1A8A-\u1A8F\u1A9A-\u1A9F\u1AAE\u1AAF\u1ACF-\u1AFF\u1B4D-\u1B4F\u1B7F\u1BF4-\u1BFB\u1C38-\u1C3A\u1C4A-\u1C4C\u1C89-\u1C8F\u1CBB\u1CBC\u1CC8-\u1CCF\u1CFB-\u1CFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FC5\u1FD4\u1FD5\u1FDC\u1FF0\u1FF1\u1FF5\u1FFF\u2065\u2072\u2073\u208F\u209D-\u209F\u20C1-\u20CF\u20F1-\u20FF\u218C-\u218F\u2427-\u243F\u244B-\u245F\u2B74\u2B75\u2B96\u2CF4-\u2CF8\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D71-\u2D7E\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF\u2E5E-\u2E7F\u2E9A\u2EF4-\u2EFF\u2FD6-\u2FEF\u2FFC-\u2FFF\u3040\u3097\u3098\u3100-\u3104\u3130\u318F\u31E4-\u31EF\u321F\uA48D-\uA48F\uA4C7-\uA4CF\uA62C-\uA63F\uA6F8-\uA6FF\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA82D-\uA82F\uA83A-\uA83F\uA878-\uA87F\uA8C6-\uA8CD\uA8DA-\uA8DF\uA954-\uA95E\uA97D-\uA97F\uA9CE\uA9DA-\uA9DD\uA9FF\uAA37-\uAA3F\uAA4E\uAA4F\uAA5A\uAA5B\uAAC3-\uAADA\uAAF7-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB6C-\uAB6F\uABEE\uABEF\uABFA-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBC3-\uFBD2\uFD90\uFD91\uFDC8-\uFDCE\uFDD0-\uFDEF\uFE1A-\uFE1F\uFE53\uFE67\uFE6C-\uFE6F\uFE75\uFEFD\uFEFE\uFF00\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFDF\uFFE7\uFFEF-\uFFF8\uFFFE\uFFFF",
        "astral": "\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDCFF\uDD03-\uDD06\uDD34-\uDD36\uDD8F\uDD9D-\uDD9F\uDDA1-\uDDCF\uDDFE-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEDF\uDEFC-\uDEFF\uDF24-\uDF2C\uDF4B-\uDF4F\uDF7B-\uDF7F\uDF9E\uDFC4-\uDFC7\uDFD6-\uDFFF]|\uD801[\uDC9E\uDC9F\uDCAA-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6E\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56\uDC9F-\uDCA6\uDCB0-\uDCDF\uDCF3\uDCF6-\uDCFA\uDD1C-\uDD1E\uDD3A-\uDD3E\uDD40-\uDD7F\uDDB8-\uDDBB\uDDD0\uDDD1\uDE04\uDE07-\uDE0B\uDE14\uDE18\uDE36\uDE37\uDE3B-\uDE3E\uDE49-\uDE4F\uDE59-\uDE5F\uDEA0-\uDEBF\uDEE7-\uDEEA\uDEF7-\uDEFF\uDF36-\uDF38\uDF56\uDF57\uDF73-\uDF77\uDF92-\uDF98\uDF9D-\uDFA8\uDFB0-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCF9\uDD28-\uDD2F\uDD3A-\uDE5F\uDE7F\uDEAA\uDEAE\uDEAF\uDEB2-\uDEFF\uDF28-\uDF2F\uDF5A-\uDF6F\uDF8A-\uDFAF\uDFCC-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC4E-\uDC51\uDC76-\uDC7E\uDCC3-\uDCCC\uDCCE\uDCCF\uDCE9-\uDCEF\uDCFA-\uDCFF\uDD35\uDD48-\uDD4F\uDD77-\uDD7F\uDDE0\uDDF5-\uDDFF\uDE12\uDE3F-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEAA-\uDEAF\uDEEB-\uDEEF\uDEFA-\uDEFF\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A\uDF45\uDF46\uDF49\uDF4A\uDF4E\uDF4F\uDF51-\uDF56\uDF58-\uDF5C\uDF64\uDF65\uDF6D-\uDF6F\uDF75-\uDFFF]|\uD805[\uDC5C\uDC62-\uDC7F\uDCC8-\uDCCF\uDCDA-\uDD7F\uDDB6\uDDB7\uDDDE-\uDDFF\uDE45-\uDE4F\uDE5A-\uDE5F\uDE6D-\uDE7F\uDEBA-\uDEBF\uDECA-\uDEFF\uDF1B\uDF1C\uDF2C-\uDF2F\uDF47-\uDFFF]|\uD806[\uDC3C-\uDC9F\uDCF3-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD36\uDD39\uDD3A\uDD47-\uDD4F\uDD5A-\uDD9F\uDDA8\uDDA9\uDDD8\uDDD9\uDDE5-\uDDFF\uDE48-\uDE4F\uDEA3-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC37\uDC46-\uDC4F\uDC6D-\uDC6F\uDC90\uDC91\uDCA8\uDCB7-\uDCFF\uDD07\uDD0A\uDD37-\uDD39\uDD3B\uDD3E\uDD48-\uDD4F\uDD5A-\uDD5F\uDD66\uDD69\uDD8F\uDD92\uDD99-\uDD9F\uDDAA-\uDEDF\uDEF9-\uDFAF\uDFB1-\uDFBF\uDFF2-\uDFFE]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC6F\uDC75-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD832\uD83F\uD87B-\uD87D\uD87F\uD885-\uDB3F\uDB41-\uDB7F][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF3-\uDFFF]|\uD80D[\uDC2F\uDC39-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F\uDE6A-\uDE6D\uDEBF\uDECA-\uDECF\uDEEE\uDEEF\uDEF6-\uDEFF\uDF46-\uDF4F\uDF5A\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE9B-\uDEFF\uDF4B-\uDF4E\uDF88-\uDF8E\uDFA0-\uDFDF\uDFE5-\uDFEF\uDFF2-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD4F\uDD53-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A\uDC9B\uDCA4-\uDFFF]|\uD833[\uDC00-\uDEFF\uDF2E\uDF2F\uDF47-\uDF4F\uDFC4-\uDFFF]|\uD834[\uDCF6-\uDCFF\uDD27\uDD28\uDDEB-\uDDFF\uDE46-\uDEDF\uDEF4-\uDEFF\uDF57-\uDF5F\uDF79-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]|\uD836[\uDE8C-\uDE9A\uDEA0\uDEB0-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDFFF]|\uD838[\uDC07\uDC19\uDC1A\uDC22\uDC25\uDC2B-\uDCFF\uDD2D-\uDD2F\uDD3E\uDD3F\uDD4A-\uDD4D\uDD50-\uDE8F\uDEAF-\uDEBF\uDEFA-\uDEFE\uDF00-\uDFFF]|\uD839[\uDC00-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5\uDCC6\uDCD7-\uDCFF\uDD4C-\uDD4F\uDD5A-\uDD5D\uDD60-\uDFFF]|\uD83B[\uDC00-\uDC70\uDCB5-\uDD00\uDD3E-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDEEF\uDEF2-\uDFFF]|\uD83C[\uDC2C-\uDC2F\uDC94-\uDC9F\uDCAF\uDCB0\uDCC0\uDCD0\uDCF6-\uDCFF\uDDAE-\uDDE5\uDE03-\uDE0F\uDE3C-\uDE3F\uDE49-\uDE4F\uDE52-\uDE5F\uDE66-\uDEFF]|\uD83D[\uDED8-\uDEDC\uDEED-\uDEEF\uDEFD-\uDEFF\uDF74-\uDF7F\uDFD9-\uDFDF\uDFEC-\uDFEF\uDFF1-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE\uDCAF\uDCB2-\uDCFF\uDE54-\uDE5F\uDE6E\uDE6F\uDE75-\uDE77\uDE7D-\uDE7F\uDE87-\uDE8F\uDEAD-\uDEAF\uDEBB-\uDEBF\uDEC6-\uDECF\uDEDA-\uDEDF\uDEE8-\uDEEF\uDEF7-\uDEFF\uDF93\uDFCB-\uDFEF\uDFFA-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF39-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDFFF]|\uDB40[\uDC00\uDC02-\uDC1F\uDC80-\uDCFF\uDDF0-\uDFFF]|[\uDBBF\uDBFF][\uDFFE\uDFFF]"
      },
      {
        "name": "Co",
        "alias": "Private_Use",
        "bmp": "\uE000-\uF8FF",
        "astral": "[\uDB80-\uDBBE\uDBC0-\uDBFE][\uDC00-\uDFFF]|[\uDBBF\uDBFF][\uDC00-\uDFFD]"
      },
      {
        "name": "Cs",
        "alias": "Surrogate",
        "bmp": "\uD800-\uDFFF"
      },
      {
        "name": "L",
        "alias": "Letter",
        "bmp": "A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC",
        "astral": "\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A]"
      },
      {
        "name": "LC",
        "alias": "Cased_Letter",
        "bmp": "A-Za-z\xB5\xC0-\xD6\xD8-\xF6\xF8-\u01BA\u01BC-\u01BF\u01C4-\u0293\u0295-\u02AF\u0370-\u0373\u0376\u0377\u037B-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0560-\u0588\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FD-\u10FF\u13A0-\u13F5\u13F8-\u13FD\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2134\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C7B\u2C7E-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA640-\uA66D\uA680-\uA69B\uA722-\uA76F\uA771-\uA787\uA78B-\uA78E\uA790-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F5\uA7F6\uA7FA\uAB30-\uAB5A\uAB60-\uAB68\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF21-\uFF3A\uFF41-\uFF5A",
        "astral": "\uD801[\uDC00-\uDC4F\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC]|\uD803[\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD806[\uDCA0-\uDCDF]|\uD81B[\uDE40-\uDE7F]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF09\uDF0B-\uDF1E]|\uD83A[\uDD00-\uDD43]"
      },
      {
        "name": "Ll",
        "alias": "Lowercase_Letter",
        "bmp": "a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0560-\u0588\u10D0-\u10FA\u10FD-\u10FF\u13F8-\u13FD\u1C80-\u1C88\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5F\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7AF\uA7B5\uA7B7\uA7B9\uA7BB\uA7BD\uA7BF\uA7C1\uA7C3\uA7C8\uA7CA\uA7D1\uA7D3\uA7D5\uA7D7\uA7D9\uA7F6\uA7FA\uAB30-\uAB5A\uAB60-\uAB68\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A",
        "astral": "\uD801[\uDC28-\uDC4F\uDCD8-\uDCFB\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC]|\uD803[\uDCC0-\uDCF2]|\uD806[\uDCC0-\uDCDF]|\uD81B[\uDE60-\uDE7F]|\uD835[\uDC1A-\uDC33\uDC4E-\uDC54\uDC56-\uDC67\uDC82-\uDC9B\uDCB6-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDCEA-\uDD03\uDD1E-\uDD37\uDD52-\uDD6B\uDD86-\uDD9F\uDDBA-\uDDD3\uDDEE-\uDE07\uDE22-\uDE3B\uDE56-\uDE6F\uDE8A-\uDEA5\uDEC2-\uDEDA\uDEDC-\uDEE1\uDEFC-\uDF14\uDF16-\uDF1B\uDF36-\uDF4E\uDF50-\uDF55\uDF70-\uDF88\uDF8A-\uDF8F\uDFAA-\uDFC2\uDFC4-\uDFC9\uDFCB]|\uD837[\uDF00-\uDF09\uDF0B-\uDF1E]|\uD83A[\uDD22-\uDD43]"
      },
      {
        "name": "Lm",
        "alias": "Modifier_Letter",
        "bmp": "\u02B0-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0374\u037A\u0559\u0640\u06E5\u06E6\u07F4\u07F5\u07FA\u081A\u0824\u0828\u08C9\u0971\u0E46\u0EC6\u10FC\u17D7\u1843\u1AA7\u1C78-\u1C7D\u1D2C-\u1D6A\u1D78\u1D9B-\u1DBF\u2071\u207F\u2090-\u209C\u2C7C\u2C7D\u2D6F\u2E2F\u3005\u3031-\u3035\u303B\u309D\u309E\u30FC-\u30FE\uA015\uA4F8-\uA4FD\uA60C\uA67F\uA69C\uA69D\uA717-\uA71F\uA770\uA788\uA7F2-\uA7F4\uA7F8\uA7F9\uA9CF\uA9E6\uAA70\uAADD\uAAF3\uAAF4\uAB5C-\uAB5F\uAB69\uFF70\uFF9E\uFF9F",
        "astral": "\uD801[\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD81A[\uDF40-\uDF43]|\uD81B[\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD838[\uDD37-\uDD3D]|\u{1E94B}"
      },
      {
        "name": "Lo",
        "alias": "Other_Letter",
        "bmp": "\xAA\xBA\u01BB\u01C0-\u01C3\u0294\u05D0-\u05EA\u05EF-\u05F2\u0620-\u063F\u0641-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u0800-\u0815\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C8\u0904-\u0939\u093D\u0950\u0958-\u0961\u0972-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E45\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u1100-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17DC\u1820-\u1842\u1844-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C77\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u2135-\u2138\u2D30-\u2D67\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3006\u303C\u3041-\u3096\u309F\u30A1-\u30FA\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA014\uA016-\uA48C\uA4D0-\uA4F7\uA500-\uA60B\uA610-\uA61F\uA62A\uA62B\uA66E\uA6A0-\uA6E5\uA78F\uA7F7\uA7FB-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9E0-\uA9E4\uA9E7-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA6F\uAA71-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB\uAADC\uAAE0-\uAAEA\uAAF2\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF66-\uFF6F\uFF71-\uFF9D\uFFA0-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC",
        "astral": "\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC50-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF4A\uDF50]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\u{1DF0A}|\uD838[\uDD00-\uDD2C\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A]"
      },
      {
        "name": "Lt",
        "alias": "Titlecase_Letter",
        "bmp": "\u01C5\u01C8\u01CB\u01F2\u1F88-\u1F8F\u1F98-\u1F9F\u1FA8-\u1FAF\u1FBC\u1FCC\u1FFC"
      },
      {
        "name": "Lu",
        "alias": "Uppercase_Letter",
        "bmp": "A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1C90-\u1CBA\u1CBD-\u1CBF\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2F\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AE\uA7B0-\uA7B4\uA7B6\uA7B8\uA7BA\uA7BC\uA7BE\uA7C0\uA7C2\uA7C4-\uA7C7\uA7C9\uA7D0\uA7D6\uA7D8\uA7F5\uFF21-\uFF3A",
        "astral": "\uD801[\uDC00-\uDC27\uDCB0-\uDCD3\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95]|\uD803[\uDC80-\uDCB2]|\uD806[\uDCA0-\uDCBF]|\uD81B[\uDE40-\uDE5F]|\uD835[\uDC00-\uDC19\uDC34-\uDC4D\uDC68-\uDC81\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB5\uDCD0-\uDCE9\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD38\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD6C-\uDD85\uDDA0-\uDDB9\uDDD4-\uDDED\uDE08-\uDE21\uDE3C-\uDE55\uDE70-\uDE89\uDEA8-\uDEC0\uDEE2-\uDEFA\uDF1C-\uDF34\uDF56-\uDF6E\uDF90-\uDFA8\uDFCA]|\uD83A[\uDD00-\uDD21]"
      },
      {
        "name": "M",
        "alias": "Mark",
        "bmp": "\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u0898-\u089F\u08CA-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C04\u0C3C\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u180F\u1885\u1886\u18A9\u1920-\u192B\u1930-\u193B\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ACE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8E0-\uA8F1\uA8FF\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F",
        "astral": "\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD803[\uDD24-\uDD27\uDEAB\uDEAC\uDF46-\uDF50\uDF82-\uDF85]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC70\uDC73\uDC74\uDC7F-\uDC82\uDCB0-\uDCBA\uDCC2\uDD00-\uDD02\uDD27-\uDD34\uDD45\uDD46\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDDC9-\uDDCC\uDDCE\uDDCF\uDE2C-\uDE37\uDE3E\uDEDF-\uDEEA\uDF00-\uDF03\uDF3B\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC35-\uDC46\uDC5E\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDDDC\uDDDD\uDE30-\uDE40\uDEAB-\uDEB7\uDF1D-\uDF2B]|\uD806[\uDC2C-\uDC3A\uDD30-\uDD35\uDD37\uDD38\uDD3B-\uDD3E\uDD40\uDD42\uDD43\uDDD1-\uDDD7\uDDDA-\uDDE0\uDDE4\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE3E\uDE47\uDE51-\uDE5B\uDE8A-\uDE99]|\uD807[\uDC2F-\uDC36\uDC38-\uDC3F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD31-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD45\uDD47\uDD8A-\uDD8E\uDD90\uDD91\uDD93-\uDD97\uDEF3-\uDEF6]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF4F\uDF51-\uDF87\uDF8F-\uDF92\uDFE4\uDFF0\uDFF1]|\uD82F[\uDC9D\uDC9E]|\uD833[\uDF00-\uDF2D\uDF30-\uDF46]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A\uDD30-\uDD36\uDEAE\uDEEC-\uDEEF]|\uD83A[\uDCD0-\uDCD6\uDD44-\uDD4A]|\uDB40[\uDD00-\uDDEF]"
      },
      {
        "name": "Mc",
        "alias": "Spacing_Mark",
        "bmp": "\u0903\u093B\u093E-\u0940\u0949-\u094C\u094E\u094F\u0982\u0983\u09BE-\u09C0\u09C7\u09C8\u09CB\u09CC\u09D7\u0A03\u0A3E-\u0A40\u0A83\u0ABE-\u0AC0\u0AC9\u0ACB\u0ACC\u0B02\u0B03\u0B3E\u0B40\u0B47\u0B48\u0B4B\u0B4C\u0B57\u0BBE\u0BBF\u0BC1\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCC\u0BD7\u0C01-\u0C03\u0C41-\u0C44\u0C82\u0C83\u0CBE\u0CC0-\u0CC4\u0CC7\u0CC8\u0CCA\u0CCB\u0CD5\u0CD6\u0D02\u0D03\u0D3E-\u0D40\u0D46-\u0D48\u0D4A-\u0D4C\u0D57\u0D82\u0D83\u0DCF-\u0DD1\u0DD8-\u0DDF\u0DF2\u0DF3\u0F3E\u0F3F\u0F7F\u102B\u102C\u1031\u1038\u103B\u103C\u1056\u1057\u1062-\u1064\u1067-\u106D\u1083\u1084\u1087-\u108C\u108F\u109A-\u109C\u1715\u1734\u17B6\u17BE-\u17C5\u17C7\u17C8\u1923-\u1926\u1929-\u192B\u1930\u1931\u1933-\u1938\u1A19\u1A1A\u1A55\u1A57\u1A61\u1A63\u1A64\u1A6D-\u1A72\u1B04\u1B35\u1B3B\u1B3D-\u1B41\u1B43\u1B44\u1B82\u1BA1\u1BA6\u1BA7\u1BAA\u1BE7\u1BEA-\u1BEC\u1BEE\u1BF2\u1BF3\u1C24-\u1C2B\u1C34\u1C35\u1CE1\u1CF7\u302E\u302F\uA823\uA824\uA827\uA880\uA881\uA8B4-\uA8C3\uA952\uA953\uA983\uA9B4\uA9B5\uA9BA\uA9BB\uA9BE-\uA9C0\uAA2F\uAA30\uAA33\uAA34\uAA4D\uAA7B\uAA7D\uAAEB\uAAEE\uAAEF\uAAF5\uABE3\uABE4\uABE6\uABE7\uABE9\uABEA\uABEC",
        "astral": "\uD804[\uDC00\uDC02\uDC82\uDCB0-\uDCB2\uDCB7\uDCB8\uDD2C\uDD45\uDD46\uDD82\uDDB3-\uDDB5\uDDBF\uDDC0\uDDCE\uDE2C-\uDE2E\uDE32\uDE33\uDE35\uDEE0-\uDEE2\uDF02\uDF03\uDF3E\uDF3F\uDF41-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63]|\uD805[\uDC35-\uDC37\uDC40\uDC41\uDC45\uDCB0-\uDCB2\uDCB9\uDCBB-\uDCBE\uDCC1\uDDAF-\uDDB1\uDDB8-\uDDBB\uDDBE\uDE30-\uDE32\uDE3B\uDE3C\uDE3E\uDEAC\uDEAE\uDEAF\uDEB6\uDF20\uDF21\uDF26]|\uD806[\uDC2C-\uDC2E\uDC38\uDD30-\uDD35\uDD37\uDD38\uDD3D\uDD40\uDD42\uDDD1-\uDDD3\uDDDC-\uDDDF\uDDE4\uDE39\uDE57\uDE58\uDE97]|\uD807[\uDC2F\uDC3E\uDCA9\uDCB1\uDCB4\uDD8A-\uDD8E\uDD93\uDD94\uDD96\uDEF5\uDEF6]|\uD81B[\uDF51-\uDF87\uDFF0\uDFF1]|\uD834[\uDD65\uDD66\uDD6D-\uDD72]"
      },
      {
        "name": "Me",
        "alias": "Enclosing_Mark",
        "bmp": "\u0488\u0489\u1ABE\u20DD-\u20E0\u20E2-\u20E4\uA670-\uA672"
      },
      {
        "name": "Mn",
        "alias": "Nonspacing_Mark",
        "bmp": "\u0300-\u036F\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u0898-\u089F\u08CA-\u08E1\u08E3-\u0902\u093A\u093C\u0941-\u0948\u094D\u0951-\u0957\u0962\u0963\u0981\u09BC\u09C1-\u09C4\u09CD\u09E2\u09E3\u09FE\u0A01\u0A02\u0A3C\u0A41\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81\u0A82\u0ABC\u0AC1-\u0AC5\u0AC7\u0AC8\u0ACD\u0AE2\u0AE3\u0AFA-\u0AFF\u0B01\u0B3C\u0B3F\u0B41-\u0B44\u0B4D\u0B55\u0B56\u0B62\u0B63\u0B82\u0BC0\u0BCD\u0C00\u0C04\u0C3C\u0C3E-\u0C40\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81\u0CBC\u0CBF\u0CC6\u0CCC\u0CCD\u0CE2\u0CE3\u0D00\u0D01\u0D3B\u0D3C\u0D41-\u0D44\u0D4D\u0D62\u0D63\u0D81\u0DCA\u0DD2-\u0DD4\u0DD6\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F71-\u0F7E\u0F80-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102D-\u1030\u1032-\u1037\u1039\u103A\u103D\u103E\u1058\u1059\u105E-\u1060\u1071-\u1074\u1082\u1085\u1086\u108D\u109D\u135D-\u135F\u1712-\u1714\u1732\u1733\u1752\u1753\u1772\u1773\u17B4\u17B5\u17B7-\u17BD\u17C6\u17C9-\u17D3\u17DD\u180B-\u180D\u180F\u1885\u1886\u18A9\u1920-\u1922\u1927\u1928\u1932\u1939-\u193B\u1A17\u1A18\u1A1B\u1A56\u1A58-\u1A5E\u1A60\u1A62\u1A65-\u1A6C\u1A73-\u1A7C\u1A7F\u1AB0-\u1ABD\u1ABF-\u1ACE\u1B00-\u1B03\u1B34\u1B36-\u1B3A\u1B3C\u1B42\u1B6B-\u1B73\u1B80\u1B81\u1BA2-\u1BA5\u1BA8\u1BA9\u1BAB-\u1BAD\u1BE6\u1BE8\u1BE9\u1BED\u1BEF-\u1BF1\u1C2C-\u1C33\u1C36\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE0\u1CE2-\u1CE8\u1CED\u1CF4\u1CF8\u1CF9\u1DC0-\u1DFF\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302D\u3099\u309A\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA825\uA826\uA82C\uA8C4\uA8C5\uA8E0-\uA8F1\uA8FF\uA926-\uA92D\uA947-\uA951\uA980-\uA982\uA9B3\uA9B6-\uA9B9\uA9BC\uA9BD\uA9E5\uAA29-\uAA2E\uAA31\uAA32\uAA35\uAA36\uAA43\uAA4C\uAA7C\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEC\uAAED\uAAF6\uABE5\uABE8\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F",
        "astral": "\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD803[\uDD24-\uDD27\uDEAB\uDEAC\uDF46-\uDF50\uDF82-\uDF85]|\uD804[\uDC01\uDC38-\uDC46\uDC70\uDC73\uDC74\uDC7F-\uDC81\uDCB3-\uDCB6\uDCB9\uDCBA\uDCC2\uDD00-\uDD02\uDD27-\uDD2B\uDD2D-\uDD34\uDD73\uDD80\uDD81\uDDB6-\uDDBE\uDDC9-\uDDCC\uDDCF\uDE2F-\uDE31\uDE34\uDE36\uDE37\uDE3E\uDEDF\uDEE3-\uDEEA\uDF00\uDF01\uDF3B\uDF3C\uDF40\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC38-\uDC3F\uDC42-\uDC44\uDC46\uDC5E\uDCB3-\uDCB8\uDCBA\uDCBF\uDCC0\uDCC2\uDCC3\uDDB2-\uDDB5\uDDBC\uDDBD\uDDBF\uDDC0\uDDDC\uDDDD\uDE33-\uDE3A\uDE3D\uDE3F\uDE40\uDEAB\uDEAD\uDEB0-\uDEB5\uDEB7\uDF1D-\uDF1F\uDF22-\uDF25\uDF27-\uDF2B]|\uD806[\uDC2F-\uDC37\uDC39\uDC3A\uDD3B\uDD3C\uDD3E\uDD43\uDDD4-\uDDD7\uDDDA\uDDDB\uDDE0\uDE01-\uDE0A\uDE33-\uDE38\uDE3B-\uDE3E\uDE47\uDE51-\uDE56\uDE59-\uDE5B\uDE8A-\uDE96\uDE98\uDE99]|\uD807[\uDC30-\uDC36\uDC38-\uDC3D\uDC3F\uDC92-\uDCA7\uDCAA-\uDCB0\uDCB2\uDCB3\uDCB5\uDCB6\uDD31-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD45\uDD47\uDD90\uDD91\uDD95\uDD97\uDEF3\uDEF4]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF4F\uDF8F-\uDF92\uDFE4]|\uD82F[\uDC9D\uDC9E]|\uD833[\uDF00-\uDF2D\uDF30-\uDF46]|\uD834[\uDD67-\uDD69\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A\uDD30-\uDD36\uDEAE\uDEEC-\uDEEF]|\uD83A[\uDCD0-\uDCD6\uDD44-\uDD4A]|\uDB40[\uDD00-\uDDEF]"
      },
      {
        "name": "N",
        "alias": "Number",
        "bmp": "0-9\xB2\xB3\xB9\xBC-\xBE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D58-\u0D5E\u0D66-\u0D78\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19",
        "astral": "\uD800[\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDEE1-\uDEFB\uDF20-\uDF23\uDF41\uDF4A\uDFD1-\uDFD5]|\uD801[\uDCA0-\uDCA9]|\uD802[\uDC58-\uDC5F\uDC79-\uDC7F\uDCA7-\uDCAF\uDCFB-\uDCFF\uDD16-\uDD1B\uDDBC\uDDBD\uDDC0-\uDDCF\uDDD2-\uDDFF\uDE40-\uDE48\uDE7D\uDE7E\uDE9D-\uDE9F\uDEEB-\uDEEF\uDF58-\uDF5F\uDF78-\uDF7F\uDFA9-\uDFAF]|\uD803[\uDCFA-\uDCFF\uDD30-\uDD39\uDE60-\uDE7E\uDF1D-\uDF26\uDF51-\uDF54\uDFC5-\uDFCB]|\uD804[\uDC52-\uDC6F\uDCF0-\uDCF9\uDD36-\uDD3F\uDDD0-\uDDD9\uDDE1-\uDDF4\uDEF0-\uDEF9]|\uD805[\uDC50-\uDC59\uDCD0-\uDCD9\uDE50-\uDE59\uDEC0-\uDEC9\uDF30-\uDF3B]|\uD806[\uDCE0-\uDCF2\uDD50-\uDD59]|\uD807[\uDC50-\uDC6C\uDD50-\uDD59\uDDA0-\uDDA9\uDFC0-\uDFD4]|\uD809[\uDC00-\uDC6E]|\uD81A[\uDE60-\uDE69\uDEC0-\uDEC9\uDF50-\uDF59\uDF5B-\uDF61]|\uD81B[\uDE80-\uDE96]|\uD834[\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDFCE-\uDFFF]|\uD838[\uDD40-\uDD49\uDEF0-\uDEF9]|\uD83A[\uDCC7-\uDCCF\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9]"
      },
      {
        "name": "Nd",
        "alias": "Decimal_Number",
        "bmp": "0-9\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0BE6-\u0BEF\u0C66-\u0C6F\u0CE6-\u0CEF\u0D66-\u0D6F\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F29\u1040-\u1049\u1090-\u1099\u17E0-\u17E9\u1810-\u1819\u1946-\u194F\u19D0-\u19D9\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\uA620-\uA629\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19",
        "astral": "\uD801[\uDCA0-\uDCA9]|\uD803[\uDD30-\uDD39]|\uD804[\uDC66-\uDC6F\uDCF0-\uDCF9\uDD36-\uDD3F\uDDD0-\uDDD9\uDEF0-\uDEF9]|\uD805[\uDC50-\uDC59\uDCD0-\uDCD9\uDE50-\uDE59\uDEC0-\uDEC9\uDF30-\uDF39]|\uD806[\uDCE0-\uDCE9\uDD50-\uDD59]|\uD807[\uDC50-\uDC59\uDD50-\uDD59\uDDA0-\uDDA9]|\uD81A[\uDE60-\uDE69\uDEC0-\uDEC9\uDF50-\uDF59]|\uD835[\uDFCE-\uDFFF]|\uD838[\uDD40-\uDD49\uDEF0-\uDEF9]|\uD83A[\uDD50-\uDD59]|\uD83E[\uDFF0-\uDFF9]"
      },
      {
        "name": "Nl",
        "alias": "Letter_Number",
        "bmp": "\u16EE-\u16F0\u2160-\u2182\u2185-\u2188\u3007\u3021-\u3029\u3038-\u303A\uA6E6-\uA6EF",
        "astral": "\uD800[\uDD40-\uDD74\uDF41\uDF4A\uDFD1-\uDFD5]|\uD809[\uDC00-\uDC6E]"
      },
      {
        "name": "No",
        "alias": "Other_Number",
        "bmp": "\xB2\xB3\xB9\xBC-\xBE\u09F4-\u09F9\u0B72-\u0B77\u0BF0-\u0BF2\u0C78-\u0C7E\u0D58-\u0D5E\u0D70-\u0D78\u0F2A-\u0F33\u1369-\u137C\u17F0-\u17F9\u19DA\u2070\u2074-\u2079\u2080-\u2089\u2150-\u215F\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA830-\uA835",
        "astral": "\uD800[\uDD07-\uDD33\uDD75-\uDD78\uDD8A\uDD8B\uDEE1-\uDEFB\uDF20-\uDF23]|\uD802[\uDC58-\uDC5F\uDC79-\uDC7F\uDCA7-\uDCAF\uDCFB-\uDCFF\uDD16-\uDD1B\uDDBC\uDDBD\uDDC0-\uDDCF\uDDD2-\uDDFF\uDE40-\uDE48\uDE7D\uDE7E\uDE9D-\uDE9F\uDEEB-\uDEEF\uDF58-\uDF5F\uDF78-\uDF7F\uDFA9-\uDFAF]|\uD803[\uDCFA-\uDCFF\uDE60-\uDE7E\uDF1D-\uDF26\uDF51-\uDF54\uDFC5-\uDFCB]|\uD804[\uDC52-\uDC65\uDDE1-\uDDF4]|\uD805[\uDF3A\uDF3B]|\uD806[\uDCEA-\uDCF2]|\uD807[\uDC5A-\uDC6C\uDFC0-\uDFD4]|\uD81A[\uDF5B-\uDF61]|\uD81B[\uDE80-\uDE96]|\uD834[\uDEE0-\uDEF3\uDF60-\uDF78]|\uD83A[\uDCC7-\uDCCF]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D]|\uD83C[\uDD00-\uDD0C]"
      },
      {
        "name": "P",
        "alias": "Punctuation",
        "bmp": "!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061D-\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1B7D\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52-\u2E5D\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65",
        "astral": "\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\u{1056F}|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A\uDFE2]|\u{1BC9F}|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]"
      },
      {
        "name": "Pc",
        "alias": "Connector_Punctuation",
        "bmp": "_\u203F\u2040\u2054\uFE33\uFE34\uFE4D-\uFE4F\uFF3F"
      },
      {
        "name": "Pd",
        "alias": "Dash_Punctuation",
        "bmp": "\\-\u058A\u05BE\u1400\u1806\u2010-\u2015\u2E17\u2E1A\u2E3A\u2E3B\u2E40\u2E5D\u301C\u3030\u30A0\uFE31\uFE32\uFE58\uFE63\uFF0D",
        "astral": "\u{10EAD}"
      },
      {
        "name": "Pe",
        "alias": "Close_Punctuation",
        "bmp": "\\)\\]\\}\u0F3B\u0F3D\u169C\u2046\u207E\u208E\u2309\u230B\u232A\u2769\u276B\u276D\u276F\u2771\u2773\u2775\u27C6\u27E7\u27E9\u27EB\u27ED\u27EF\u2984\u2986\u2988\u298A\u298C\u298E\u2990\u2992\u2994\u2996\u2998\u29D9\u29DB\u29FD\u2E23\u2E25\u2E27\u2E29\u2E56\u2E58\u2E5A\u2E5C\u3009\u300B\u300D\u300F\u3011\u3015\u3017\u3019\u301B\u301E\u301F\uFD3E\uFE18\uFE36\uFE38\uFE3A\uFE3C\uFE3E\uFE40\uFE42\uFE44\uFE48\uFE5A\uFE5C\uFE5E\uFF09\uFF3D\uFF5D\uFF60\uFF63"
      },
      {
        "name": "Pf",
        "alias": "Final_Punctuation",
        "bmp": "\xBB\u2019\u201D\u203A\u2E03\u2E05\u2E0A\u2E0D\u2E1D\u2E21"
      },
      {
        "name": "Pi",
        "alias": "Initial_Punctuation",
        "bmp": "\xAB\u2018\u201B\u201C\u201F\u2039\u2E02\u2E04\u2E09\u2E0C\u2E1C\u2E20"
      },
      {
        "name": "Po",
        "alias": "Other_Punctuation",
        "bmp": "!-#%-'\\*,\\.\\/:;\\?@\\\xA1\xA7\xB6\xB7\xBF\u037E\u0387\u055A-\u055F\u0589\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061D-\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u166E\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u1805\u1807-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1B7D\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2016\u2017\u2020-\u2027\u2030-\u2038\u203B-\u203E\u2041-\u2043\u2047-\u2051\u2053\u2055-\u205E\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00\u2E01\u2E06-\u2E08\u2E0B\u2E0E-\u2E16\u2E18\u2E19\u2E1B\u2E1E\u2E1F\u2E2A-\u2E2E\u2E30-\u2E39\u2E3C-\u2E3F\u2E41\u2E43-\u2E4F\u2E52-\u2E54\u3001-\u3003\u303D\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFE10-\uFE16\uFE19\uFE30\uFE45\uFE46\uFE49-\uFE4C\uFE50-\uFE52\uFE54-\uFE57\uFE5F-\uFE61\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF07\uFF0A\uFF0C\uFF0E\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3C\uFF61\uFF64\uFF65",
        "astral": "\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\u{1056F}|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A\uDFE2]|\u{1BC9F}|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]"
      },
      {
        "name": "Ps",
        "alias": "Open_Punctuation",
        "bmp": "\\(\\[\\{\u0F3A\u0F3C\u169B\u201A\u201E\u2045\u207D\u208D\u2308\u230A\u2329\u2768\u276A\u276C\u276E\u2770\u2772\u2774\u27C5\u27E6\u27E8\u27EA\u27EC\u27EE\u2983\u2985\u2987\u2989\u298B\u298D\u298F\u2991\u2993\u2995\u2997\u29D8\u29DA\u29FC\u2E22\u2E24\u2E26\u2E28\u2E42\u2E55\u2E57\u2E59\u2E5B\u3008\u300A\u300C\u300E\u3010\u3014\u3016\u3018\u301A\u301D\uFD3F\uFE17\uFE35\uFE37\uFE39\uFE3B\uFE3D\uFE3F\uFE41\uFE43\uFE47\uFE59\uFE5B\uFE5D\uFF08\uFF3B\uFF5B\uFF5F\uFF62"
      },
      {
        "name": "S",
        "alias": "Symbol",
        "bmp": "\\$\\+<->\\^`\\|~\xA2-\xA6\xA8\xA9\xAC\xAE-\xB1\xB4\xB8\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0384\u0385\u03F6\u0482\u058D-\u058F\u0606-\u0608\u060B\u060E\u060F\u06DE\u06E9\u06FD\u06FE\u07F6\u07FE\u07FF\u0888\u09F2\u09F3\u09FA\u09FB\u0AF1\u0B70\u0BF3-\u0BFA\u0C7F\u0D4F\u0D79\u0E3F\u0F01-\u0F03\u0F13\u0F15-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE\u0FCF\u0FD5-\u0FD8\u109E\u109F\u1390-\u1399\u166D\u17DB\u1940\u19DE-\u19FF\u1B61-\u1B6A\u1B74-\u1B7C\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2044\u2052\u207A-\u207C\u208A-\u208C\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2307\u230C-\u2328\u232B-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u2767\u2794-\u27C4\u27C7-\u27E5\u27F0-\u2982\u2999-\u29D7\u29DC-\u29FB\u29FE-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2E50\u2E51\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFB\u3004\u3012\u3013\u3020\u3036\u3037\u303E\u303F\u309B\u309C\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uAA77-\uAA79\uAB5B\uAB6A\uAB6B\uFB29\uFBB2-\uFBC2\uFD40-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE62\uFE64-\uFE66\uFE69\uFF04\uFF0B\uFF1C-\uFF1E\uFF3E\uFF40\uFF5C\uFF5E\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD",
        "astral": "\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC]|\uD802[\uDC77\uDC78\uDEC8]|\u{1173F}|\uD807[\uDFD5-\uDFF1]|\uD81A[\uDF3C-\uDF3F\uDF45]|\u{1BC9C}|\uD833[\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85\uDE86]|\uD838[\uDD4F\uDEFF]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDD-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF73\uDF80-\uDFD8\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE74\uDE78-\uDE7C\uDE80-\uDE86\uDE90-\uDEAC\uDEB0-\uDEBA\uDEC0-\uDEC5\uDED0-\uDED9\uDEE0-\uDEE7\uDEF0-\uDEF6\uDF00-\uDF92\uDF94-\uDFCA]"
      },
      {
        "name": "Sc",
        "alias": "Currency_Symbol",
        "bmp": "\\$\xA2-\xA5\u058F\u060B\u07FE\u07FF\u09F2\u09F3\u09FB\u0AF1\u0BF9\u0E3F\u17DB\u20A0-\u20C0\uA838\uFDFC\uFE69\uFF04\uFFE0\uFFE1\uFFE5\uFFE6",
        "astral": "\uD807[\uDFDD-\uDFE0]|\u{1E2FF}|\u{1ECB0}"
      },
      {
        "name": "Sk",
        "alias": "Modifier_Symbol",
        "bmp": "\\^`\xA8\xAF\xB4\xB8\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0384\u0385\u0888\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u309B\u309C\uA700-\uA716\uA720\uA721\uA789\uA78A\uAB5B\uAB6A\uAB6B\uFBB2-\uFBC2\uFF3E\uFF40\uFFE3",
        "astral": "\uD83C[\uDFFB-\uDFFF]"
      },
      {
        "name": "Sm",
        "alias": "Math_Symbol",
        "bmp": "\\+<->\\|~\xAC\xB1\xD7\xF7\u03F6\u0606-\u0608\u2044\u2052\u207A-\u207C\u208A-\u208C\u2118\u2140-\u2144\u214B\u2190-\u2194\u219A\u219B\u21A0\u21A3\u21A6\u21AE\u21CE\u21CF\u21D2\u21D4\u21F4-\u22FF\u2320\u2321\u237C\u239B-\u23B3\u23DC-\u23E1\u25B7\u25C1\u25F8-\u25FF\u266F\u27C0-\u27C4\u27C7-\u27E5\u27F0-\u27FF\u2900-\u2982\u2999-\u29D7\u29DC-\u29FB\u29FE-\u2AFF\u2B30-\u2B44\u2B47-\u2B4C\uFB29\uFE62\uFE64-\uFE66\uFF0B\uFF1C-\uFF1E\uFF5C\uFF5E\uFFE2\uFFE9-\uFFEC",
        "astral": "\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD83B[\uDEF0\uDEF1]"
      },
      {
        "name": "So",
        "alias": "Other_Symbol",
        "bmp": "\xA6\xA9\xAE\xB0\u0482\u058D\u058E\u060E\u060F\u06DE\u06E9\u06FD\u06FE\u07F6\u09FA\u0B70\u0BF3-\u0BF8\u0BFA\u0C7F\u0D4F\u0D79\u0F01-\u0F03\u0F13\u0F15-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE\u0FCF\u0FD5-\u0FD8\u109E\u109F\u1390-\u1399\u166D\u1940\u19DE-\u19FF\u1B61-\u1B6A\u1B74-\u1B7C\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116\u2117\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u214A\u214C\u214D\u214F\u218A\u218B\u2195-\u2199\u219C-\u219F\u21A1\u21A2\u21A4\u21A5\u21A7-\u21AD\u21AF-\u21CD\u21D0\u21D1\u21D3\u21D5-\u21F3\u2300-\u2307\u230C-\u231F\u2322-\u2328\u232B-\u237B\u237D-\u239A\u23B4-\u23DB\u23E2-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u25B6\u25B8-\u25C0\u25C2-\u25F7\u2600-\u266E\u2670-\u2767\u2794-\u27BF\u2800-\u28FF\u2B00-\u2B2F\u2B45\u2B46\u2B4D-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2E50\u2E51\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFB\u3004\u3012\u3013\u3020\u3036\u3037\u303E\u303F\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA828-\uA82B\uA836\uA837\uA839\uAA77-\uAA79\uFD40-\uFD4F\uFDCF\uFDFD-\uFDFF\uFFE4\uFFE8\uFFED\uFFEE\uFFFC\uFFFD",
        "astral": "\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC]|\uD802[\uDC77\uDC78\uDEC8]|\u{1173F}|\uD807[\uDFD5-\uDFDC\uDFE1-\uDFF1]|\uD81A[\uDF3C-\uDF3F\uDF45]|\u{1BC9C}|\uD833[\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85\uDE86]|\u{1E14F}|\uD83B[\uDCAC\uDD2E]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFA]|\uD83D[\uDC00-\uDED7\uDEDD-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF73\uDF80-\uDFD8\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE74\uDE78-\uDE7C\uDE80-\uDE86\uDE90-\uDEAC\uDEB0-\uDEBA\uDEC0-\uDEC5\uDED0-\uDED9\uDEE0-\uDEE7\uDEF0-\uDEF6\uDF00-\uDF92\uDF94-\uDFCA]"
      },
      {
        "name": "Z",
        "alias": "Separator",
        "bmp": " \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000"
      },
      {
        "name": "Zl",
        "alias": "Line_Separator",
        "bmp": "\u2028"
      },
      {
        "name": "Zp",
        "alias": "Paragraph_Separator",
        "bmp": "\u2029"
      },
      {
        "name": "Zs",
        "alias": "Space_Separator",
        "bmp": " \xA0\u1680\u2000-\u200A\u202F\u205F\u3000"
      }
    ];
  }
});

// node_modules/@retorquere/bibtex-parser/sentence-case.js
var require_sentence_case = __commonJS({
  "node_modules/@retorquere/bibtex-parser/sentence-case.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.toSentenceCase = void 0;
    var categories = require_categories();
    var cat = (name) => categories.find((c) => c.name === name).bmp;
    var L = cat("L");
    var Lu = cat("Lu");
    var Ll = cat("Ll");
    var N = cat("N");
    var No = cat("No");
    var Pc = cat("Pc");
    var re = {
      acronym: new RegExp(`([${Lu}][.])+$`),
      innerCaps: new RegExp(`.[${Lu}]`),
      ident: new RegExp(`^[$p{L}]+[${N}${No}][${L}${N}${No}]*$`),
      allCaps: new RegExp(`^[${Lu}${N}${No}]+$`),
      skipWords: /^(but|or|yet|so|for|and|nor|a|an|the|at|by|from|in|into|of|on|to|with|updown|as)$/i,
      // chemElements: /^(H|He|Li|Be|B|C|N|O|F|Ne|Na|Mg|Al|Si|P|S|Cl|Ar|K|Ca|Sc|Ti|V|Cr|Mn|Fe|Co|Ni|Cu|Zn|Ga|Ge|As|Se|Br|Kr|Rb|Sr|Y|Zr|Nb|Mo|Tc|Ru|Rh|Pb|Ag|Cd|In|Sn|Sb|Te|I|Xe|Cs|Ba|La|Hf|Ta|W|Re|Os|Ir|Pt|Au|Hg|Tl|Pb|Bi|Po|At|Rn|Fr|Ra|Ac|Rf|Db|Sg|Bh|Hs|Mt|Ds|Rg|Cn|Nh|Fl|Mc|Lv|Ts|Og|La|Ce|Pr|Nd|Pm|Sm|Eu|Gd|Tb|Dy|Ho|Er|Tm|Yb|Lu|Ac|Th|Pa|U|Np|Pu|Am|Cm|Bk|Cf|Es|Fm|Md|No|Lr)$/,
      words: new RegExp(`([\uFFFD${L}${N}${No}]+([\uFFFD${Pc}${L}${N}${No}]*))|(\\s([\uFFFD${Lu}]+[.]){2,})?`, "g"),
      titleCase: new RegExp(`^[${Lu}][${Ll}${N}${No}]+$`),
      // private aint = XRegExp("^\\p{L}n't(?=$|[\\P{L}])") // isn't
      // private word = XRegExp('^\\p{L}+([-.]\\p{L}+)*') // also match gallium-nitride as one word
      // private and = XRegExp('^\\p{Lu}&\\p{Lu}(?=$|[\\P{L}])') // Q&A
      subSentenceStart: new RegExp(`([.?!][\\s]+)(<[^>]+>)?([${Lu}])`, "g"),
      sentenceStart: new RegExp(`^(<[^>]+>)?([${Lu}])`, "g")
    };
    function lowercase(word, allcaps) {
      if (!word)
        return word;
      if (allcaps)
        return word.toLowerCase();
      const unmasked = word.replace(/\uFFFD/g, "");
      if (unmasked.match(re.skipWords))
        return word.toLowerCase();
      if (unmasked.match(re.titleCase))
        return word.toLowerCase();
      if (unmasked.length === 1)
        return unmasked === "A" ? word.toLowerCase() : word;
      if (unmasked.match(re.innerCaps))
        return word;
      if (unmasked.match(re.ident) || unmasked.match(re.allCaps))
        return word;
      return word.toLowerCase();
    }
    function toSentenceCase(sentence, preserveQuoted = false) {
      const allcaps = sentence === sentence.toUpperCase();
      const preserve = [];
      sentence.replace(re.subSentenceStart, (match, end, markup, char, i) => {
        if (!sentence.substring(0, i + 1).match(re.acronym)) {
          preserve.push({ pos: i + end.length + ((markup === null || markup === void 0 ? void 0 : markup.length) || 0), text: char, description: "sub-sentence-start" });
        }
        return "";
      });
      sentence.replace(re.sentenceStart, (match, markup, char) => {
        preserve.push({ pos: (markup === null || markup === void 0 ? void 0 : markup.length) || 0, text: char, description: "sentence-start" });
        return "";
      });
      sentence.replace(/<span class="nocase">.*?<\/span>|<nc>.*?<\/nc>/gi, (text, pos) => {
        preserve.push({ pos, text, description: "nocase" });
        return "";
      });
      let masked = sentence.replace(/<[^>]+>/g, (text, pos) => {
        preserve.push({ pos, text, description: "markup" });
        return "\uFFFD".repeat(text.length);
      });
      for (const q of [/(“)(.*?)”/g, /(‘)(.*?)’/g, /(["])(.*?)\1/g]) {
        sentence.replace(q, (text, quote, quoted, pos) => {
          preserve.push({
            pos: pos + (preserveQuoted ? 0 : quote.length),
            text: preserveQuoted ? text : toSentenceCase(quoted, preserveQuoted),
            description: `quoted with ${q}`
          });
          return "";
        });
      }
      masked = masked.replace(/[;:]\uFFFD*\s+\uFFFD*A\s/g, (match) => match.toLowerCase()).replace(/[–—]\uFFFD*\s*\uFFFD*A\s/g, (match) => match.toLowerCase()).replace(re.words, (word) => lowercase(word, allcaps));
      sentence = masked;
      for (const { pos, text } of preserve) {
        sentence = sentence.substring(0, pos) + text + sentence.substring(pos + text.length);
      }
      return sentence;
    }
    exports.toSentenceCase = toSentenceCase;
  }
});

// node_modules/@retorquere/bibtex-parser/index.js
var require_bibtex_parser = __commonJS({
  "node_modules/@retorquere/bibtex-parser/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.jabref = exports.chunker = exports.promises = exports.ast = exports.parse = exports.fields = exports.toSentenceCase = void 0;
    var bibtex = __importStar(require_grammar());
    var chunker = __importStar(require_chunker());
    exports.chunker = chunker;
    var jabref = __importStar(require_jabref());
    exports.jabref = jabref;
    var jabref_1 = require_jabref();
    var unicode2latex_1 = require_unicode2latex();
    var crossref_json_1 = __importDefault(require_crossref());
    var fields_json_1 = __importDefault(require_fields());
    var sentence_case_1 = require_sentence_case();
    Object.defineProperty(exports, "toSentenceCase", { enumerable: true, get: function() {
      return sentence_case_1.toSentenceCase;
    } });
    var sentence_case_2 = require_sentence_case();
    var ParserError = class extends Error {
      constructor(message, node) {
        super(message);
        Object.setPrototypeOf(this, new.target.prototype);
        this.name = this.constructor.name;
        this.node = node;
      }
    };
    var TeXError = class extends Error {
      constructor(message, node, text) {
        super(message);
        Object.setPrototypeOf(this, new.target.prototype);
        this.name = this.constructor.name;
        this.node = node;
        this.text = text;
      }
    };
    function charCat(charcats, select) {
      return charcats.filter((cat) => select.includes(cat.alias)).map((cat) => cat.bmp).join("");
    }
    var charCategories = require_categories();
    var charClass = {
      Lu: charCat(charCategories, ["Uppercase_Letter", "Titlecase_Letter"]),
      Ll: charCat(charCategories, ["Lowercase_Letter"]),
      LnotLu: charCat(charCategories, ["Lowercase_Letter", "Modifier_Letter", "Other_Letter", "Nonspacing_Mark", "Spacing_Mark", "Decimal_Number", "Letter_Number"]),
      P: charCat(charCategories, ["Punctuation"]),
      L: charCat(charCategories, ["Letter"]),
      N: charCat(charCategories, ["Decimal_Number", "Letter_Number"]),
      AlphaNum: charCat(charCategories, ["Letter", "Decimal_Number", "Letter_Number"]),
      LC: charCat(charCategories, ["Cased_Letter"])
    };
    var marker = {
      and: "",
      comma: "",
      space: "",
      literal: "",
      markup: "",
      re: {
        and: /./,
        comma: /./,
        space: /./,
        literal: /./,
        literalName: /./
      },
      clean(s) {
        return s.replace(marker.re.space, " ").replace(marker.re.comma, ", ").replace(marker.re.literal, "");
      }
    };
    marker.re = {
      and: new RegExp(marker.and, "g"),
      comma: new RegExp(marker.comma, "g"),
      space: new RegExp(marker.space, "g"),
      literal: new RegExp(marker.literal, "g"),
      literalName: new RegExp(`^${marker.literal}([^${marker.literal}]*)${marker.literal}$`)
    };
    var preserveCase = {
      leadingCap: new RegExp(`^[${charClass.Lu}][${charClass.LnotLu}]+[${charClass.P}]?$`),
      allCaps: new RegExp(`^[${charClass.Lu}${charClass.N}]{2,}$`),
      allLower: new RegExp(`^[${charClass.Ll}${charClass.N}]{2,}$`),
      joined: new RegExp(`^[${charClass.Lu}][${charClass.LnotLu}]*([-+][${charClass.L}${charClass.N}]+)*[${charClass.P}]*$`),
      hasUpper: new RegExp(`[${charClass.Lu}]`),
      hasLower: new RegExp(`[${charClass.Ll}]`),
      isNumber: /^[0-9]+$/,
      hasAlpha: new RegExp(`[${charClass.L}]`),
      hasAlphaNum: new RegExp(`[${charClass.AlphaNum}]`),
      notAlphaNum: new RegExp(`[^${charClass.AlphaNum}]`, "g"),
      sentenceStart: new RegExp(`(^|([\u2014:?!.]\\s+))[${charClass.Lu}]`, "g"),
      markup: /<\/?span[^>]*>/g,
      acronym: new RegExp(`.*\\.${marker.markup}*[${charClass.Lu}]${marker.markup}*\\.$`),
      notCaseSensitive: new RegExp(`[^${charClass.LC}]`),
      isCaseSensitive: new RegExp(`[${charClass.LC}]`),
      quoted: /("[^"]+")|(“[^“]+“)/g
    };
    exports.fields = {
      creator: [
        "author",
        "bookauthor",
        "collaborator",
        "commentator",
        "director",
        "editor",
        "editora",
        "editorb",
        "editors",
        "holder",
        "scriptwriter",
        "translator"
      ],
      title: [
        "title",
        "series",
        "shorttitle",
        "booktitle",
        "type",
        "origtitle",
        "maintitle",
        "eventtitle"
      ],
      unnest: [
        "publisher",
        "location"
      ],
      verbatim: [
        "doi",
        "eprint",
        "file",
        "files",
        "pdf",
        "groups",
        "ids",
        "url",
        "verba",
        "verbb",
        "verbc"
      ],
      html: [
        "annotation",
        "comment",
        "annote",
        "review",
        "notes",
        "note"
      ],
      unabbrev: [
        "journal",
        "journaltitle",
        "journal-full"
      ]
    };
    var english = [
      "american",
      "british",
      "canadian",
      "english",
      "australian",
      "newzealand",
      "usenglish",
      "ukenglish",
      "en",
      "eng",
      "en-au",
      "en-bz",
      "en-ca",
      "en-cb",
      "en-gb",
      "en-ie",
      "en-jm",
      "en-nz",
      "en-ph",
      "en-tt",
      "en-us",
      "en-za",
      "en-zw",
      "anglais"
      // don't do this people
    ];
    var Parser = class {
      constructor(options = {}) {
        this.in_preamble = false;
        this.preamble = [];
        this.log = function(_str) {
        };
        for (const [option, value] of Object.entries(options)) {
          if (typeof value === "undefined")
            delete options[option];
        }
        if (options.errorHandler === false) {
          options.errorHandler = function(_err) {
          };
        } else if (typeof options.errorHandler === "undefined") {
          options.errorHandler = function(err) {
            throw err;
          };
        }
        if (typeof options.sentenceCase === "boolean") {
          options.sentenceCase = options.sentenceCase ? english : [];
        } else {
          options.sentenceCase = options.sentenceCase || english;
        }
        if (!options.strings)
          options.strings = {};
        if (!options.unabbreviate)
          options.unabbreviate = {};
        if (options.raw) {
          options.sentenceCase = false;
          options.caseProtection = false;
        }
        this.options = Object.assign({ caseProtection: "as-needed", verbatimFields: [/^citeulike-linkout-[0-9]+$/, /^bdsk-url-[0-9]+$/, ...exports.fields.verbatim], verbatimCommands: ["url"], unnestFields: [...exports.fields.title, ...exports.fields.unnest, ...exports.fields.verbatim], unnestMode: "unwrap", htmlFields: exports.fields.html, guessAlreadySentenceCased: true, applyCrossRef: options.applyCrossRef || typeof options.applyCrossRef === "undefined", markup: {} }, options);
        const markup_defaults = {
          enquote: { open: "\u201C", close: "\u201D" },
          sub: { open: "<sub>", close: "</sub>" },
          sup: { open: "<sup>", close: "</sup>" },
          bold: { open: "<b>", close: "</b>" },
          italics: { open: "<i>", close: "</i>" },
          smallCaps: { open: '<span style="font-variant:small-caps;">', close: "</span>" },
          caseProtect: { open: '<span class="nocase">', close: "</span>" },
          roman: { open: "", close: "" },
          fixedWidth: { open: "<tt>", close: "</tt>" }
        };
        for (const [markup, { open, close }] of Object.entries(markup_defaults)) {
          this.options.markup[markup] = this.options.markup[markup] || { open, close };
        }
        for (const i of [1, 2, 3, 4]) {
          this.options.markup[`h${i}`] = this.options.markup[`h${i}`] || { open: `<h${i}>`, close: `</h${i}>` };
        }
        this.unresolvedStrings = {};
        this.errors = [];
        this.comments = [];
        this.entries = [];
        this.strings = {};
        this.newcommands = {};
        this.default_strings = {
          JAN: [this.text("01")],
          FEB: [this.text("02")],
          MAR: [this.text("03")],
          APR: [this.text("04")],
          MAY: [this.text("05")],
          JUN: [this.text("06")],
          JUL: [this.text("07")],
          AUG: [this.text("08")],
          SEP: [this.text("09")],
          OCT: [this.text("10")],
          NOV: [this.text("11")],
          DEC: [this.text("12")],
          ACMCS: [this.text("ACM Computing Surveys")],
          ACTA: [this.text("Acta Informatica")],
          CACM: [this.text("Communications of the ACM")],
          IBMJRD: [this.text("IBM Journal of Research and Development")],
          IBMSJ: [this.text("IBM Systems Journal")],
          IEEESE: [this.text("IEEE Transactions on Software Engineering")],
          IEEETC: [this.text("IEEE Transactions on Computers")],
          IEEETCAD: [this.text("IEEE Transactions on Computer-Aided Design of Integrated Circuits")],
          IPL: [this.text("Information Processing Letters")],
          JACM: [this.text("Journal of the ACM")],
          JCSS: [this.text("Journal of Computer and System Sciences")],
          SCP: [this.text("Science of Computer Programming")],
          SICOMP: [this.text("SIAM Journal on Computing")],
          TOCS: [this.text("ACM Transactions on Computer Systems")],
          TODS: [this.text("ACM Transactions on Database Systems")],
          TOG: [this.text("ACM Transactions on Graphics")],
          TOMS: [this.text("ACM Transactions on Mathematical Software")],
          TOOIS: [this.text("ACM Transactions on Office Information Systems")],
          TOPLAS: [this.text("ACM Transactions on Programming Languages and Systems")],
          TCS: [this.text("Theoretical Computer Science")]
        };
        if (typeof this.options.strings === "string") {
          const strings = this.options.strings;
          this.options.strings = {};
          this.parseChunk({ text: strings, offset: { pos: 0, line: 0 } });
          this.preloaded_strings = this.strings;
          this.strings = {};
        } else {
          this.preloaded_strings = {};
        }
      }
      ast(input, clean = true) {
        let parsed = [];
        for (const chunk of chunker.parse(input)) {
          const { children } = bibtex.parse(chunk.text, Object.assign(Object.assign({}, this.options), { combiningDiacritics: unicode2latex_1.diacritics.commands }));
          if (clean)
            this.clean(children);
          parsed = parsed.concat(children);
        }
        return parsed;
      }
      parse(input) {
        for (const chunk of chunker.parse(input)) {
          this.parseChunk(chunk);
        }
        return this.parsed();
      }
      async parseAsync(input) {
        for (const chunk of await chunker.promises.parse(input)) {
          this.parseChunk(chunk);
        }
        return this.parsed();
      }
      applyCrossrefField(parent, parentfield, child, childfield) {
        let applied = false;
        for (const field of ["fields", "creators"]) {
          if (!child[field][childfield] && parent[field][parentfield]) {
            child[field][childfield] = parent[field][parentfield];
            applied = true;
            if (!child.crossref.inherited.includes(childfield))
              child.crossref.inherited.push(childfield);
            if (!parent.crossref.donated.includes(parentfield))
              parent.crossref.donated.push(parentfield);
          }
        }
        return applied;
      }
      applyCrossref(entry, entries) {
        for (const xref of ["crossref", "xdata"]) {
          if (!entry.fields[xref])
            continue;
          for (const parents of entry.fields[xref]) {
            let applied = false;
            for (const parent of parents.split(/\s*,\s*/).map((key) => entries[key]).filter((p) => p)) {
              this.applyCrossref(parent, entries);
              for (const mappings of [crossref_json_1.default[entry.type], crossref_json_1.default["*"]].filter((m) => m)) {
                for (const mapping of [mappings[parent.type], mappings["*"]].filter((m) => m)) {
                  for (const [target, source] of Object.entries(mapping)) {
                    if (this.applyCrossrefField(parent, source, entry, target))
                      applied = true;
                  }
                  for (const field of fields_json_1.default[entry.type] || []) {
                    if (this.applyCrossrefField(parent, field, entry, field))
                      applied = true;
                  }
                }
              }
            }
            if (applied)
              delete entry.fields[xref];
          }
        }
      }
      parsed() {
        this.field = null;
        const strings = {};
        this.cleaning = { type: "other" };
        for (const [key, value] of Object.entries(this.strings)) {
          this.field = {
            name: "@string",
            text: "",
            level: 0,
            preserveRanges: null,
            words: {
              upper: 0,
              lower: 0,
              other: 0
            }
          };
          this.convert(this.clean(value));
          strings[key] = this.field.text;
        }
        if (this.options.applyCrossRef) {
          const entries = this.entries.reduce((acc, entry) => {
            acc[entry.key] = entry;
            return acc;
          }, {});
          for (const entry of this.entries) {
            this.applyCrossref(entry, entries);
          }
        }
        const { comments, jabref: jabref2 } = (0, jabref_1.parse)(this.comments);
        return {
          errors: this.errors,
          entries: this.entries,
          comments,
          jabref: jabref2,
          strings,
          preamble: this.preamble
        };
      }
      preserve(start, end, reason) {
        if (!this.field.preserveRanges)
          return;
        if (!end) {
          this.field.preserveRanges = null;
          return;
        }
        this.field.preserveRanges.push({ start, end, description: reason });
      }
      parseChunk(chunk) {
        this.chunk = chunk.text;
        try {
          let bib = bibtex.parse(chunk.text, Object.assign(Object.assign({}, this.options), { combiningDiacritics: unicode2latex_1.diacritics.commands }));
          if (bib.kind !== "Bibliography")
            throw new Error(this.show(bib));
          bib = this.clean(bib);
          for (const entity of bib.children) {
            switch (entity.kind) {
              case "Entry":
              case "BracedComment":
              case "LineComment":
              case "PreambleExpression":
                this.convert(entity);
                break;
              case "StringDeclaration":
              case "NonEntryText":
                break;
            }
          }
          return bib;
        } catch (err) {
          if (!err.location)
            throw err;
          this.errors.push({
            message: err.message,
            // no idea why eslint doesn't understand this type guard
            // eslint-disable-next-line @typescript-eslint/restrict-plus-operands
            line: err.location.start.line + chunk.offset.line,
            column: err.location.start.column,
            source: this.chunk
          });
          return null;
        }
      }
      show(o) {
        let text = JSON.stringify(o);
        if (this.chunk)
          text += `
${this.chunk.trim()}`;
        return text;
      }
      text(value = "") {
        return { kind: "Text", value, mode: "text" };
      }
      error(err, returnvalue) {
        if (typeof this.options.errorHandler === "function")
          this.options.errorHandler(err);
        return returnvalue || this.text();
      }
      condense(node) {
        node.value = this.clean(node.value);
        node.value = node.value.reduce((acc, child) => {
          if (child.kind === "Block" && !child.case && Object.keys(child.markup).length === 0) {
            acc = acc.concat(child.value);
          } else {
            acc.push(child);
          }
          return acc;
        }, []);
        node.value = node.value.reduce((acc, child, i) => {
          if (acc.length === 0) {
            acc.push(child);
            return acc;
          }
          const last = acc[acc.length - 1];
          const next = node.value[i + 1];
          if (this.options.caseProtection === "strict" && this.onlyCaseProtected(last) && child.kind === "Text" && !child.value.match(preserveCase.isCaseSensitive) && this.onlyCaseProtected(next)) {
            last.value.push(child);
            delete last.source;
            return acc;
          }
          if (last.kind === "Block" && child.kind === "Block" && Object.keys(last.markup).sort().join("/") === Object.keys(child.markup).sort().join("/")) {
            last.value = last.value.concat(child.value);
            delete last.source;
            return acc;
          }
          if (last.kind === "Text" && child.kind === "Text" && last.mode === child.mode) {
            last.value += child.value;
            delete last.source;
            return acc;
          }
          acc.push(child);
          return acc;
        }, []);
      }
      onlyCaseProtected(node) {
        return (node === null || node === void 0 ? void 0 : node.kind) === "Block" && node.case === "protect" && Object.keys(node.markup).join("/") === "";
      }
      argument(node, kind) {
        if (!node.arguments || !node.arguments.required.length)
          return kind === "none";
        if (typeof kind === "number") {
          return node.arguments.required.length === kind ? node.arguments.required : false;
        }
        if (node.arguments.required.length !== 1)
          return false;
        if (kind === "text") {
          const first = node.arguments.required[0];
          if (first.kind === "Block") {
            switch (first.value.length) {
              case 0:
                return "";
              case 1:
                if (first.value[0].kind === "Text")
                  return first.value[0].value;
                break;
            }
          }
          kind = "Text";
        }
        if (node.arguments.required.length !== 1 || node.arguments.required[0].kind !== kind)
          return false;
        switch (node.arguments.required[0].kind) {
          case "Text":
            return node.arguments.required[0].value;
          case "RegularCommand":
            return node.arguments.required[0];
          case "Block":
            return node.arguments.required[0];
        }
        return false;
      }
      isBreak(node, kind) {
        return node && node.kind === "RegularCommand" && kind.includes(node.command);
      }
      clean(node) {
        if (Array.isArray(node)) {
          return node.filter((child, i) => !(this.isBreak(child, ["\\"]) && this.isBreak(node[i - 1], ["\\", "par"]))).filter((child, i) => !this.isBreak(child, ["par"]) || !this.isBreak(node[i - 1], ["par"])).map((child) => this.clean(child));
        }
        delete node.loc;
        switch (node.kind) {
          case "InlineMath":
          case "DisplayMath":
            return this.clean_block(node);
          case "Environment":
            return this.clean_environment(node);
          case "Block":
            return this.clean_block(node);
          case "Bibliography":
            return this.clean_bib(node);
          case "RegularCommand":
            return this.clean_command(node);
          case "DiacriticCommand":
            return this.clean_diacritic(node);
          case "Entry":
            return this.clean_entry(node);
          case "Field":
            return this.options.raw ? node : this.clean_field(node);
          case "StringDeclaration":
            return this.clean_stringdecl(node);
          case "StringReference":
            return this.clean_stringref(node);
          case "SubscriptCommand":
          case "SuperscriptCommand":
            return this.clean_script(node);
          case "SymbolCommand":
            return this.clean_symbol(node);
          case "PreambleExpression":
            return this.clean_preamble(node);
          case "Number":
          case "Text":
          case "BracedComment":
          case "LineComment":
          case "NonEntryText":
            return node;
          default:
            return this.error(new ParserError(`no cleanup method for ${this.show(node)}`, node), this.text());
        }
      }
      clean_preamble(node) {
        this.in_preamble = true;
        try {
          return this.clean(node.value);
        } finally {
          this.in_preamble = false;
        }
      }
      clean_bib(node) {
        node.children = node.children.filter((child) => child.kind !== "NonEntryText").map((child) => this.clean(child));
        return node;
      }
      clean_stringdecl(node) {
        this.strings[node.name.toUpperCase()] = node.value;
        return node;
      }
      clean_stringref(node) {
        const name = node.name.toUpperCase();
        const stringvalue = this.strings[name] || this.options.strings[name] || this.preloaded_strings[name] || this.default_strings[name] || exports.fields.unabbrev.includes(this.cleaning.name) && this.options.unabbreviate[name] && [this.text(this.options.unabbreviate[name])];
        if (!stringvalue) {
          if (!this.unresolvedStrings[name])
            this.errors.push({ message: `Unresolved @string reference ${JSON.stringify(node.name)}` });
          this.unresolvedStrings[name] = true;
        }
        return this.clean({
          kind: "Block",
          // if the string isn't found, add it as-is but exempt it from sentence casing
          case: stringvalue ? void 0 : "preserve",
          markup: {},
          value: stringvalue ? JSON.parse(JSON.stringify(stringvalue)) : [this.text(node.name)]
        });
      }
      clean_entry(node) {
        const shortjournals = [];
        for (const field of node.fields) {
          if (exports.fields.unabbrev.includes(field.name) && Array.isArray(field.value)) {
            const abbr = field.value.map((v) => v.source).join("").toUpperCase();
            const journal = this.options.unabbreviate[abbr];
            if (journal) {
              shortjournals.push(Object.assign(Object.assign({}, JSON.parse(JSON.stringify(field))), { name: "shortjournal" }));
              field.value = [this.text(journal)];
            }
          }
        }
        node.fields = node.fields.concat(shortjournals).map((child) => this.clean(child));
        return node;
      }
      startCleaning(name) {
        name = name.toLowerCase();
        if (exports.fields.title.includes(name)) {
          this.cleaning = { type: "title", name };
        } else if (exports.fields.creator.includes(name.replace(/s$/, ""))) {
          this.cleaning = { type: "creator", name: name.replace(/s$/, "") };
        } else {
          this.cleaning = { type: "other", name };
        }
      }
      stripNoCase(node, strip, preserve) {
        switch (node.kind) {
          case "RegularCommand":
            if (["chsf", "bibstring", "cite"].includes(node.command))
              strip = true;
            node.arguments.required.map((arg) => this.stripNoCase(arg, strip, preserve));
            break;
          case "Block":
          case "InlineMath":
          case "DisplayMath":
            if (strip && node.case === "protect") {
              if (preserve) {
                node.case = "preserve";
              } else {
                delete node.case;
              }
            }
            node.value.map((v) => this.stripNoCase(v, strip || node.case === "protect", preserve));
            break;
          case "Field":
            if (Array.isArray(node.value))
              node.value.forEach((v) => this.stripNoCase(v, strip, preserve));
            break;
        }
      }
      isVerbatimField(name) {
        return !!this.options.verbatimFields.find((p) => typeof p === "string" ? name === p : name.match(p));
      }
      clean_field(node) {
        this.startCleaning(node.name);
        this.stripNoCase(node, !this.options.caseProtection || this.isVerbatimField(node.name), this.options.sentenceCase.length === 0);
        if (Array.isArray(node.value))
          this.condense(node);
        return node;
      }
      clean_script(node) {
        let m, value, singlechar;
        if (singlechar = unicode2latex_1.latex[node.source])
          return this.text(singlechar);
        if ((m = node.source.match(/^([\^_])([^{}]+)$/)) && ((singlechar = unicode2latex_1.latex[`${m[1]}${m[2]}`]) || (singlechar = unicode2latex_1.latex[`${m[1]}{${m[2]}}`])))
          return this.text(singlechar);
        if ((m = node.source.match(/^([\^_])\{([^{}]+)\}$/)) && ((singlechar = unicode2latex_1.latex[`${m[1]}${m[2]}`]) || (singlechar = unicode2latex_1.latex[`${m[1]}{${m[2]}}`])))
          return this.text(singlechar);
        const cmd = node.kind === "SuperscriptCommand" ? "^" : "_";
        if (typeof node.value === "string" && (singlechar = unicode2latex_1.latex[`${cmd}${node.value}`] || unicode2latex_1.latex[`${cmd}{${node.value}}`])) {
          return this.text(singlechar);
        }
        if (typeof node.value === "string") {
          value = [this.text(node.value)];
        } else if (!Array.isArray(node.value)) {
          value = [node.value];
        } else {
          value = node.value;
        }
        const mode = node.kind === "SuperscriptCommand" ? "sup" : "sub";
        return this.clean({
          kind: "Block",
          markup: { [mode]: true },
          value
        });
      }
      clean_environment(node) {
        this.condense(node);
        return node;
      }
      needsProtection(word) {
        return !word.match(preserveCase.hasUpper) && !!word.match(preserveCase.hasLower);
      }
      clean_block(node) {
        var _a;
        this.condense(node);
        if (this.options.caseProtection !== "strict" && ((_a = this.cleaning) === null || _a === void 0 ? void 0 : _a.type) === "title" && node.case === "protect") {
          let preserve = true;
          for (const child of node.value) {
            if (child.kind === "Text") {
              const value = child.value.trim();
              preserve = !value.match(preserveCase.isCaseSensitive) || !value.split(/\s+/).find((word) => this.needsProtection(word));
            } else {
              preserve = false;
            }
            if (!preserve)
              break;
          }
          if (preserve)
            node.case = "preserve";
        }
        if (node.kind === "Block") {
          for (const [markup, on] of Object.entries(node.markup)) {
            if (!on)
              delete node.markup[markup];
          }
        }
        return node;
      }
      clean_diacritic(node) {
        const char = node.dotless ? `\\${node.character}` : node.character;
        let unicode = unicode2latex_1.latex[`\\${node.mark}{${char}}`] || unicode2latex_1.latex[`\\${node.mark}${char}`] || unicode2latex_1.latex[`{\\${node.mark} ${char}}`] || unicode2latex_1.latex[`{\\${node.mark}${char}}`] || unicode2latex_1.latex[`\\${node.mark} ${char}`];
        if (!unicode && !node.dotless && node.character.length === 1 && unicode2latex_1.diacritics.tounicode[node.mark])
          unicode = node.character + unicode2latex_1.diacritics.tounicode[node.mark];
        if (!unicode && !this.in_preamble)
          return this.error(new TeXError(`Unhandled \\${node.mark}{${char}}`, node, this.chunk));
        return this.text(unicode);
      }
      clean_symbol(node) {
        if (node.command === "\\")
          return this.text("\n");
        return this.text(unicode2latex_1.latex[`\\${node.command}`] || node.command);
      }
      first_text_block(node) {
        if (!node)
          return null;
        if (node.kind === "Block") {
          for (const child of node.value) {
            switch (child.kind) {
              case "Text":
                return child.value ? node : null;
              case "Block":
                const candidate = this.first_text_block(child);
                if (candidate)
                  return candidate;
                break;
              default:
                return null;
            }
          }
        } else {
          return null;
        }
      }
      clean_command(node) {
        var _a;
        let arg, unicode;
        if (unicode = unicode2latex_1.latex[node.source])
          return this.text(unicode);
        switch (node.command) {
          case "newcommand":
            if (((_a = node.arguments) === null || _a === void 0 ? void 0 : _a.required.length) === 2 && node.arguments.required[0].kind === "Block" && node.arguments.required[0].value.length === 1 && node.arguments.required[0].value[0].kind === "RegularCommand" && node.arguments.required[1].kind === "Block") {
              this.newcommands[node.arguments.required[0].value[0].command] = node.arguments.required[1].value;
              return this.text();
            }
            break;
          case "item":
            return { kind: "Markup", value: "<li>", source: node.source };
          case "frac":
            if (arg = this.argument(node, 2)) {
              if (arg[0].kind === "Text" && arg[1].kind === "Text" && (unicode = unicode2latex_1.latex[`\\frac{${arg[0].value}}{${arg[1].value}}`]))
                return this.text(unicode);
              return this.clean({
                kind: "Block",
                case: "protect",
                markup: {},
                value: [
                  { kind: "Block", markup: { sup: true }, value: [arg[0]] },
                  this.text("\u2044"),
                  { kind: "Block", markup: { sub: true }, value: [arg[1]] }
                ]
              });
            }
            break;
          case "vspace":
          case "vphantom":
          case "path":
          case "aftergroup":
          case "ignorespaces":
          case "relax":
          case "noopsort":
          case "ifdefined":
          case "DeclarePrefChars":
          case "else":
          case "fi":
          case "makeatletter":
            return this.text();
          case "ElsevierGlyph":
            if (arg = this.argument(node, "Text")) {
              if (unicode = unicode2latex_1.latex[`\\${node.command}{${arg}}`])
                return this.text(unicode);
              return this.text(String.fromCharCode(parseInt(arg, 16)));
            }
            break;
          case "chsf":
            if (this.argument(node, "none"))
              return this.text();
            if (arg = this.argument(node, "Block"))
              return this.clean(arg);
            break;
          case "enquote":
          case "mkbibquote":
          case "bibstring":
          case "cite":
          case "textcite":
          case "textup":
          case "citeauthor":
          case "textsc":
          case "textbf":
          case "texttt":
          case "mkbibbold":
          case "section":
          case "subsection":
          case "subsubsection":
          case "subsubsubsection":
            if (arg = this.argument(node, "Block"))
              return this.clean(arg);
            break;
          case "textsuperscript":
          case "sp":
            if ((arg = this.argument(node, "Text")) && (unicode = unicode2latex_1.latex[`^{${arg}}`]))
              return this.text(unicode);
            if (arg = this.argument(node, "Block"))
              return this.clean(arg);
            break;
          case "textsubscript":
          case "sb":
            if ((arg = this.argument(node, "Text")) && (unicode = unicode2latex_1.latex[`_{${arg}}`]))
              return this.text(unicode);
            if (arg = this.argument(node, "Block"))
              return this.clean(arg);
            break;
          case "mkbibitalic":
          case "mkbibemph":
          case "textit":
          case "emph":
            if (arg = this.argument(node, "Block"))
              return this.clean(arg);
            if (arg = this.argument(node, "Text"))
              return this.clean({ kind: "Block", markup: { italics: true }, value: [this.text(arg)] });
            break;
          case "bibcyr":
            if (this.argument(node, "none"))
              return this.text();
            if (arg = this.argument(node, "Block"))
              return this.clean(arg);
            break;
          case "hspace":
          case "mathrm":
          case "textrm":
          case "ocirc":
          case "mbox":
            if (arg = this.argument(node, "text")) {
              if (node.command === "mbox" && !arg)
                return this.text("\u200B");
              unicode = unicode2latex_1.latex[`\\${node.command}{${arg}}`];
              return this.text(unicode || (node.command === "hspace" ? " " : arg));
            } else if (!node.arguments.required.length) {
              return node.command === "mbox" ? this.text("\u200B") : this.text();
            } else if (arg = this.argument(node, "Block")) {
              return this.clean(arg);
            }
            break;
          case "href":
          case "url":
            node.arguments.required = node.arguments.required.map((a) => this.clean(a));
            return node;
          case "sl":
          case "em":
          case "it":
          case "itshape":
          case "bf":
          case "bfseries":
          case "sc":
          case "scshape":
          case "tt":
          case "rm":
          case "sf":
          case "verb":
            return this.text();
          case "left":
          case "right":
            return this.text();
          case "par":
          case "\\":
            return node;
          case "cyr":
            if (this.argument(node, "none"))
              return this.text();
            break;
          case "polhk":
            if (unicode = this.argument(node, "text")) {
              if (unicode.length === 1)
                return this.text(`${unicode}\u0328`);
            }
            if (this.argument(node, "none"))
              return this.text("\u0328");
            break;
          default:
            if (node.kind === "RegularCommand" && this.newcommands[node.command]) {
              return this.clean({
                kind: "Block",
                markup: {},
                value: JSON.parse(JSON.stringify(this.newcommands[node.command]))
              });
            }
            if (unicode2latex_1.diacritics.tounicode[node.command]) {
              node.arguments.required = this.clean(node.arguments.required);
              let block;
              if (node.arguments.required.length === 1 && node.arguments.required[0].kind === "Text") {
                block = {
                  kind: "Block",
                  markup: {},
                  value: [{
                    kind: "DiacriticCommand",
                    mark: node.command,
                    character: node.arguments.required[0].value,
                    dotless: false,
                    loc: node.arguments.required[0].loc,
                    source: node.arguments.required[0].source
                  }]
                };
                return this.clean(block);
              } else if (block = this.first_text_block(node.arguments.required[0])) {
                let fixed = false;
                block.value = block.value.reduce((value, child) => {
                  if (!fixed && child.kind === "Text") {
                    fixed = true;
                    value.push({ kind: "DiacriticCommand", mark: node.command, character: child.value[0] });
                    value.push(Object.assign(Object.assign({}, child), { value: child.value.substring(1) }));
                  } else {
                    value.push(child);
                  }
                  return value;
                }, []);
                return this.clean({
                  kind: "Block",
                  markup: {},
                  value: node.arguments.required
                });
              } else {
                if (node.command === "overline")
                  return this.text(" ");
                return this.clean({
                  kind: "Block",
                  markup: {},
                  value: [this.text(` ${unicode2latex_1.diacritics.tounicode[node.command]}`)].concat(node.arguments.required)
                });
              }
            }
            if (unicode = unicode2latex_1.latex[node.source] || unicode2latex_1.latex[`${node.source}{}`])
              return this.text(unicode);
            if ((unicode = unicode2latex_1.latex[`\\${node.command}`] || unicode2latex_1.latex[`\\${node.command}{}`]) && this.argument(node, "none"))
              return this.text(unicode);
            if ((arg = this.argument(node, "Text")) && (unicode = unicode2latex_1.latex[`\\${node.command}{${arg}}`]))
              return this.text(unicode);
            break;
        }
        if (this.in_preamble)
          return this.text(node.source);
        if (this.options.unknownCommandHandler) {
          return this.options.unknownCommandHandler.call(this, node);
        } else if (this.options.unknownCommandHandler === false) {
          return this.text();
        } else {
          return this.error(new TeXError(`Unhandled command: ${node.command}${this.show(node)}`, node, this.chunk));
        }
      }
      preserveCase(word) {
        var _a, _b;
        if (!word.trim())
          return false;
        if (!word.match(preserveCase.hasAlphaNum))
          return true;
        word = word.replace(/[/’'”:()]/g, "");
        if (word === "I")
          return true;
        if (word.length === 1)
          return false;
        if (word.replace(preserveCase.notCaseSensitive) === "")
          return false;
        if (word.match(preserveCase.leadingCap) && ((_b = (_a = this.field) === null || _a === void 0 ? void 0 : _a.text) === null || _b === void 0 ? void 0 : _b.length) === 0)
          return false;
        if (word.match(preserveCase.allCaps))
          return true;
        if (word.length > 1 && word.match(preserveCase.joined))
          return false;
        if (word.match(preserveCase.hasUpper))
          return true;
        if (word.match(preserveCase.isNumber))
          return true;
        return false;
      }
      // private convert(node: Node[]): Node[]
      // private convert(node: Node): Node
      convert(node) {
        if (Array.isArray(node))
          return node.map((child) => this.convert(child));
        if (this.options.raw && this.field)
          node = this.text(node.source);
        switch (node.kind) {
          case "Markup":
            if (this.field)
              this.field.text += node.value;
            break;
          case "BracedComment":
          case "LineComment":
            this.comments.push(node.value);
            break;
          case "Entry":
            this.convert_entry(node);
            break;
          case "Number":
            this.convert_number(node);
            break;
          case "Text":
            this.convert_text(node);
            break;
          case "Block":
          case "InlineMath":
          case "DisplayMath":
            const start = this.field ? this.field.text.length : null;
            const preserve = typeof start === "number" && this.field.preserveRanges;
            this.convert_block(node);
            if (preserve && (node.case || node.kind.endsWith("Math")))
              this.preserve(start, this.field.text.length);
            break;
          case "Environment":
            this.convert_environment(node);
            break;
          case "PreambleExpression":
            this.preamble.push(node.value.map((preamble) => preamble.source).join("\n\n"));
            break;
          case "StringDeclaration":
            break;
          default:
            if (node.kind === "RegularCommand" && (node.command === "href" || node.command === "url")) {
              this.convert_href(node);
            } else if (node.kind === "RegularCommand" && node.command === "par") {
              this.field.text += this.field.html ? "<p>\n" : " ";
            } else if (node.kind === "RegularCommand" && node.command === "\\") {
              this.field.text += this.field.html ? "<b>\n" : " ";
            } else {
              return this.error(new ParserError(`no converter for ${node.kind}: ${this.show(node)}`, node));
            }
        }
      }
      splitOnce(s, sep, fromEnd = false) {
        const split = fromEnd ? s.lastIndexOf(sep) : s.indexOf(sep);
        return split < 0 ? [s, ""] : [s.substr(0, split), s.substr(split + 1)];
      }
      parseName(name) {
        let parsed = null;
        const parts = name.split(marker.comma);
        if (parts.length && !parts.find((p) => !p.match(/^[a-z]+(-i)?=/i))) {
          for (const part of parts) {
            parsed = parsed || {};
            const [attr, value] = this.splitOnce(part.replace(marker.re.space, ""), "=").map((v) => v.trim());
            if (!value) {
              parsed = null;
              break;
            }
            switch (attr.toLowerCase()) {
              case "family":
                parsed.lastName = value;
                break;
              case "given-i":
                parsed.initial = value;
                break;
              case "given":
                parsed.firstName = value;
                break;
              case "prefix":
                parsed.prefix = value;
                break;
              case "suffix":
                parsed.suffix = value;
                break;
              case "useprefix":
                parsed.useprefix = value.toLowerCase() === "true";
                break;
              case "juniorcomma":
                parsed.useprefix = value.toLowerCase() === "true";
                break;
              default:
                parsed[attr.toLowerCase()] = value;
                break;
            }
          }
        }
        const prefix = /(.+?)\s+(vere|von|van den|van der|van|de|del|della|der|di|da|pietro|vanden|du|st.|st|la|lo|ter|bin|ibn|te|ten|op|ben|al)\s+(.+)/;
        let m;
        switch (parsed ? 0 : parts.length) {
          case 0:
            break;
          case 1:
            if (marker.re.literalName.test(parts[0])) {
              parsed = { literal: parts[0] };
            } else if (m = parts[0].replace(marker.re.space, " ").match(prefix)) {
              parsed = {
                firstName: m[1],
                prefix: m[2],
                lastName: m[3]
                // eslint-disable-line no-magic-numbers
              };
            } else {
              const [firstName, lastName] = this.splitOnce(parts[0], marker.space, true);
              if (lastName) {
                parsed = { firstName, lastName };
              } else {
                parsed = { lastName: firstName };
              }
            }
            break;
          case 2:
            parsed = {
              lastName: parts[0],
              firstName: parts[1]
            };
            break;
          default:
            parsed = {
              lastName: parts[0],
              suffix: parts[1],
              firstName: parts.slice(2).join(marker.comma)
            };
        }
        for (const [k, v] of Object.entries(parsed)) {
          if (typeof v !== "string")
            continue;
          parsed[k] = marker.clean(v).trim();
        }
        return parsed;
      }
      restore(text, orig, preserve) {
        for (const { start, end } of preserve) {
          text = text.substring(0, start) + orig.substring(start, end) + text.substring(end);
        }
        return text;
      }
      convert_entry(node) {
        this.entry = {
          key: node.id,
          type: node.type,
          fields: {},
          creators: {},
          crossref: {
            inherited: [],
            donated: []
          }
        };
        this.entries.push(this.entry);
        const order = ["langid", "hyphenation", "language"];
        node.fields.sort((a, b) => {
          const ia = order.indexOf(a.name);
          const ib = order.indexOf(b.name);
          if (ia === -1 && ib === -1)
            return a.name.localeCompare(b.name);
          if (ia === -1)
            return 1;
          if (ib === -1)
            return -1;
          return ia - ib;
        });
        let sentenceCase = !!this.options.sentenceCase.length;
        for (const field of node.fields) {
          if (field.kind !== "Field")
            return this.error(new ParserError(`Expected Field, got ${field.kind}`, node));
          this.startCleaning(field.name);
          this.field = {
            name: field.name,
            text: "",
            level: 0,
            words: {
              upper: 0,
              lower: 0,
              other: 0
            },
            preserveRanges: sentenceCase && exports.fields.title.includes(field.name) ? [] : null,
            html: this.options.htmlFields.includes(field.name)
          };
          this.entry.fields[this.field.name] = this.entry.fields[this.field.name] || [];
          if (field.value.kind === "Number") {
            this.entry.fields[this.field.name].push(field.value.value);
            this.field = null;
            continue;
          }
          this.convert(field.value);
          this.field.text = this.field.text.trim();
          this.field.text = this.field.text.replace(/<\/([a-z])><\1>/g, "");
          this.field.text = this.field.text.replace(/<([a-z])>(\s*)<\/\1>/g, "$1");
          if (!this.field.text)
            continue;
          switch (this.field.name) {
            case "langid":
            case "hyphenation":
              sentenceCase = sentenceCase && this.options.sentenceCase.includes(this.field.text.toLowerCase());
              break;
            case "language":
              sentenceCase = sentenceCase && !!this.field.text.toLowerCase().trim().split(/\s*,\s*/).find((lang) => this.options.sentenceCase.includes(lang));
              break;
          }
          if (this.field.name.match(/^(keywords?|groups)$/)) {
            for (let text of this.field.text.split(marker.comma)) {
              text = text.trim();
              if (text)
                this.entry.fields[this.field.name].push(text);
            }
          } else if (this.cleaning.type === "creator") {
            if (!this.entry.creators[this.field.name])
              this.entry.creators[this.field.name] = [];
            if (this.field.text.includes(`${marker.comma}${marker.and}`)) {
              this.field.text = this.field.text.replace(new RegExp(`${marker.comma}${marker.and}`, "g"), marker.and).replace(new RegExp(marker.comma), marker.and);
            }
            for (const creator of this.field.text.split(marker.and)) {
              this.entry.fields[this.field.name].push(marker.clean(creator));
              this.entry.creators[this.field.name].push(this.parseName(creator));
            }
          } else if (exports.fields.unabbrev.includes(field.name)) {
            this.entry.fields[this.field.name].push((this.options.unabbreviate[this.field.text] || this.field.text).normalize("NFC"));
          } else {
            if (this.field.preserveRanges) {
              const allCaps = this.field.text.match(/\s/) && this.field.words.upper && !this.field.words.lower && !this.field.words.other;
              const seemsSentenceCased = Math.max(this.field.words.upper, this.field.words.lower) > this.field.words.other + Math.min(this.field.words.upper, this.field.words.lower);
              if (!allCaps && seemsSentenceCased && this.options.guessAlreadySentenceCased) {
                this.preserve(null, null);
              } else {
                if (allCaps)
                  this.field.preserveRanges = [];
                const txt = this.field.text.replace(preserveCase.markup, (markup) => marker.markup.repeat(markup.length));
                let match;
                preserveCase.sentenceStart.lastIndex = 0;
                while (match = preserveCase.sentenceStart.exec(txt)) {
                  if (match.index > 2 && txt.substr(0, match.index + 1).match(preserveCase.acronym))
                    continue;
                  this.preserve(match.index, match.index + match[0].length);
                }
                preserveCase.quoted.lastIndex = 0;
                while (match = preserveCase.quoted.exec(this.field.text)) {
                  this.preserve(match.index, match.index + match[0].length);
                }
              }
            }
            this.entry.fields[this.field.name].push(this.convertToSentenceCase(this.field.text).normalize("NFC"));
          }
        }
        this.field = null;
      }
      convertToSentenceCase(text) {
        if (!this.field.preserveRanges)
          return text;
        const sentenceCased = this.restore((0, sentence_case_2.toSentenceCase)(text, this.options.sentenceCasePreserveQuoted || false), text, this.field.preserveRanges);
        if (text !== sentenceCased)
          this.entry.sentenceCased = true;
        return sentenceCased;
      }
      convert_number(node) {
        this.field.text += `${node.value}`;
      }
      convert_text(node) {
        if (node.mode === "verbatim") {
          this.field.text += node.value.trim();
          return;
        }
        for (const word of node.value.split(/\b/)) {
          if (word.match(preserveCase.allLower)) {
            this.field.words.lower++;
          } else if (word.match(preserveCase.allCaps)) {
            this.field.words.upper++;
          } else if (word.match(preserveCase.hasAlpha)) {
            this.field.words.other++;
          }
        }
        if (this.field.level === 0 && this.cleaning.type === "creator") {
          this.field.text += node.value.replace(/\s+and\s+/ig, marker.and).replace(/\s*,\s*/g, marker.comma).replace(/\s+/g, marker.space);
          return;
        }
        if (this.field.level === 0 && this.field.name.match(/^(keywords?|groups)$/)) {
          this.field.text += node.value.replace(/\s*[;,]\s*/g, marker.comma);
          return;
        }
        if (this.field.html) {
          this.field.text += node.value.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        } else if (this.field.preserveRanges) {
          const words = node.value.split(/(\s+)/);
          for (const word of words) {
            const start = this.field.text.length;
            this.field.text += word;
            if (this.preserveCase(word))
              this.preserve(start, this.field.text.length);
          }
        } else {
          this.field.text += node.value;
        }
      }
      convert_environment(node) {
        const [open, close] = {
          enumerate: ["<ol>", "</ol>"],
          itemize: ["<ul>", "</ul>"],
          quotation: ["<blockquote>", "</blockquote>"]
        }[node.env] || ["", ""];
        if (!open)
          this.error(new TeXError(`Unhandled \\${node.env}{...}`, node, this.chunk));
        this.field.text += open;
        this.convert_block(Object.assign(Object.assign({}, node), { kind: "Block", markup: {} }));
        this.field.text += close;
      }
      convert_href(node) {
        this.field.text += '<a href="';
        this.convert(node.arguments.required[0]);
        this.field.text += '">';
        this.convert(node.arguments.required[1] || node.arguments.required[0]);
        this.field.text += "</a>";
      }
      convert_block(node) {
        const start = this.field.text.length;
        let prefix = "";
        let postfix = "";
        if (this.options.caseProtection !== "strict" && this.cleaning.type === "other")
          delete node.case;
        if (this.cleaning.type === "creator" && node.case === "protect") {
          prefix += marker.literal;
          postfix = marker.literal + postfix;
          delete node.case;
        }
        if (node.case === "protect") {
          prefix += this.options.markup.caseProtect.open;
          postfix = this.options.markup.caseProtect.close + postfix;
        }
        if (node.kind === "Block") {
          for (const markup of Object.keys(node.markup)) {
            if (!this.options.markup[markup]) {
              this.error(new ParserError(`markup: ${markup}`, node));
              return;
            }
            prefix += this.options.markup[markup].open;
            postfix = `${this.options.markup[markup].close}${postfix}`;
          }
        }
        const end = {
          withoutPrefix: this.field.text.length,
          withPrefix: this.field.text.length + prefix.length
        };
        this.field.text += prefix;
        this.field.level++;
        this.convert(node.value);
        this.field.level--;
        const added = this.field.text.substring(end.withPrefix);
        const added_text = added.replace(/<\/?[^>]+>/g, "");
        const needsProtection = added_text && (this.options.caseProtection === "strict" && added_text.match(preserveCase.isCaseSensitive) || this.options.caseProtection === "as-needed" && added_text.split(/\s+/).find((word) => this.needsProtection(word)));
        if (!added) {
          this.field.text = this.field.text.substring(0, end.withoutPrefix);
        } else if (this.field.preserveRanges && prefix === this.options.markup.caseProtect.open && !needsProtection) {
          this.field.text = this.field.text.substring(0, end.withoutPrefix) + added;
          this.field.preserveRanges = this.field.preserveRanges.filter((range) => range.start < end.withoutPrefix);
        } else {
          this.field.text += postfix;
        }
        this.field.text = this.field.text.replace(/<(sup|sub)>([^<>]+)<\/\1>$/i, (m, mode, chars) => {
          const cmd = mode === "sup" ? "^" : "_";
          let script = "";
          for (const char of chars) {
            const unicode = unicode2latex_1.latex[`${cmd}${char}`] || unicode2latex_1.latex[`${cmd}{${char}}`];
            script += unicode ? unicode : `<${mode}>${char}</${mode}>`;
          }
          script = script.replace(new RegExp(`</${mode}><${mode}>`, "g"), "");
          return script.length < m.length ? script : m;
        });
        if (node.case && this.field.preserveRanges)
          this.preserve(start, this.field.text.length);
      }
    };
    function parse(input, options = {}) {
      const parser = new Parser(options);
      return parser.parse(input);
    }
    exports.parse = parse;
    function ast(input, options = {}, clean = true) {
      const parser = new Parser(options);
      return parser.ast(input, clean);
    }
    exports.ast = ast;
    exports.promises = {
      async parse(input, options = {}) {
        const parser = new Parser(options);
        return await parser.parseAsync(input);
      }
    };
  }
});

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => PrettyBibTexPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");

// StringHelper.ts
var StringHelper = class {
  static sanitizeKeyString(key) {
    const allLowerCase = key.toLowerCase();
    return allLowerCase.charAt(0).toUpperCase() + allLowerCase.slice(1);
  }
  static trim(str, trim) {
    let start = 0;
    let end = str.length;
    while (start < end && str[start] === trim)
      ++start;
    while (end > start && str[end - 1] === trim)
      --end;
    return start > 0 || end < str.length ? str.substring(start, end) : str;
  }
};

// main.ts
var import_bibtex_parser = __toESM(require_bibtex_parser());
var pluginName = "Pretty BibTeX";
var PrettyBibTexPlugin = class extends import_obsidian.Plugin {
  async onload() {
    await this.loadSettings();
    this.addSettingTab(new SettingTab(this.app, this));
    this.registerMarkdownCodeBlockProcessor("bibtex", (source, el, ctx) => {
      const codeBlock = el.createEl("div").createEl("pre").createEl("code");
      try {
        const result = (0, import_bibtex_parser.parse)(source);
        if (result.entries.length == 0)
          codeBlock.createEl("span", { text: "No valid BibTex entries found!", cls: "bibtex key" });
        const ast = (0, import_bibtex_parser.ast)(source);
        result.entries.forEach((entry, index) => {
          codeBlock.createEl("span", { text: `${entry.key}
`, cls: "bibtex header" });
          if (this.settings.showType)
            this.addKeyValueToCodeBlock(codeBlock, "Type", entry.type);
          const desiredOrderOfFields = ast[index].fields.map((f) => f.name);
          const sortByDesiredOrderOfFields = (a, b) => {
            return desiredOrderOfFields.indexOf(a) - desiredOrderOfFields.indexOf(b);
          };
          Object.keys(entry.fields).sort(sortByDesiredOrderOfFields).forEach((key) => {
            this.addKeyValueToCodeBlock(codeBlock, key, entry.fields[key].join(" and "));
          });
          if (result.entries.length >= 1 && index < result.entries.length - 1)
            this.addSpacerCodeBlock(codeBlock);
        });
      } catch (exception) {
        codeBlock.createEl("span", { text: "Invalid BibTeX format!", cls: "bibtex key" });
      }
    });
  }
  addKeyValueToCodeBlock(codeBlock, key, value) {
    codeBlock.createEl("span", { text: StringHelper.sanitizeKeyString(key), cls: "bibtex key" });
    codeBlock.createEl("span", { text: ":", cls: "bibtex normal" });
    codeBlock.createEl("span", { text: ` ${value}
`, cls: "bibtex value" });
  }
  addSpacerCodeBlock(codeBlock) {
    codeBlock.createEl("span", { text: "\n", cls: "bibtex normal" });
  }
  async loadSettings() {
    this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());
  }
  async saveSettings() {
    await this.saveData(this.settings);
  }
};
var DEFAULT_SETTINGS = {
  showType: true
};
var SettingTab = class extends import_obsidian.PluginSettingTab {
  constructor(app, plugin) {
    super(app, plugin);
    this.plugin = plugin;
  }
  display() {
    const { containerEl } = this;
    containerEl.empty();
    containerEl.createEl("h2", { text: `Settings for ${pluginName}` });
    new import_obsidian.Setting(containerEl).setName("Show Type").setDesc('Shows the type e.g. "article"').addToggle((toggle) => toggle.setValue(this.plugin.settings.showType).onChange(async (value) => {
      this.plugin.settings.showType = value;
      await this.plugin.saveSettings();
    }));
  }
};
